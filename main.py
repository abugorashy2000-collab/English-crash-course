import kivy


from kivy.config import Config
Config.set('graphics', 'width', '400')
Config.set('graphics', 'height', '500')
from kivy.app import App
from kivy.lang import Builder
from kivy.uix.label import Label
from kivy.uix.image import Image
import sqlite3
from kivy.uix.screenmanager import ScreenManager,Screen
import random
from kivy.utils import platform
from kivy.core.audio import SoundLoader
from kivy.properties import ObjectProperty
from kivy.uix.videoplayer import VideoPlayer
from kivy.uix.widget import Widget
from kivy.properties import ListProperty
from kivy.core.audio import SoundLoader
from kivy.core.window import Window
import arabic_reshaper
from bidi.algorithm import get_display
import codecs
import io
from kivy.uix.popup import Popup
from kivy.clock import Clock
import random
from kivy.graphics import Color, RoundedRectangle











# coding=utf-8 

theoption3 = ""
theoption = ""
theoption1 = ""
counter1 =0 #reference the table intermediate table in the second screen
counter2 = 0
counter3 = 0
truth1 = False
truth2 = False
truth3 = False
translatedfile=""
translatedfile1 =""
translatedfile2= ""
theoption1phrasal=""
theid1=""
c1=0
vcounter=0
the_potion_vocabulary=""
the_voc_id ="" 
the_punctuation=""
the_punctuation_id=""
biginnerid=""
intermediateid =""
advancedid ="" 
    

class Mywidget(Screen):
   def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.sound = SoundLoader.load("audio/1.mp3")
   
       
       
        
        
        
        
        
    
    
   def play(self, text):
        
        global translatedfile
        audio_file = {'Newspaper and Magazine': {'audio': "audio/1.mp3", 'file': 'listening/newspaper.txt'},
                      'A practical skill': {'audio': "audio/17.mp3", 'file': 'listening/a practical skill.txt'},
                      'Presents':  {'audio': "audio/presents.mp3", 'file': 'listening/presents.txt'},
                      'Favourite Rooms':  {'audio': "audio/favorite rooms.mp3", 'file': 'listening/favourite rooms.txt'},
                     'Historical Places':  {'audio': "audio/HISTORICAL PLACE.mp3", 'file': 'listening/historical places.txt'},
                    'Sports':  {'audio': "audio/18.mp3", 'file': 'listening/sports.txt'},
                    'A school':  {'audio': "audio/19.mp3", 'file': 'listening/a school.txt'},
                    'Festival':  {'audio': "audio/20.mp3", 'file': 'listening/festival.txt'},
                    'Restaurant':  {'audio': "audio/restaurant.mp3", 'file': 'listening/restaurant.txt'},
                    'Website':  {'audio': "audio/website.mp3", 'file': 'listening/website.txt'},
                    'Holiday':  {'audio': "audio/15.mp3", 'file': 'listening/holiday.txt'},
                    'Travel':  {'audio': "audio/travel.mp3", 'file': 'listening/travel.txt'},
                    'Books':  {'audio': "audio/books.mp3", 'file': 'listening/books.txt'},
                    'An Accident':  {'audio': "audio/accident.mp3", 'file': 'listening/accident.txt'},
                   'Animals':  {'audio': "audio/16.mp3", 'file': 'listening/animals.txt'},
                  'A hotel':  {'audio': "audio/10.mp3", 'file': 'listening/a hotel.txt'},
                  'Letter':  {'audio': "audio/11.mp3", 'file': 'listening/a letter.txt'},
                 'Hobbies':  {'audio': "audio/12.mp3", 'file': 'listening/hobbies.txt'},
                 'Music':  {'audio': "audio/13.mp3", 'file': 'listening/music.txt'},
                 'Shopping':  {'audio': "audio/14.mp3", 'file': 'listening/shopping.txt'},
                 'A Memorable':  {'audio': "audio/2.mp3", 'file': 'listening/a memorable event.txt'},
                 'Favourite Subject':  {'audio': "audio/3.mp3", 'file': 'listening/favorite subject.txt'},
                 'Museums':  {'audio': "audio/4.mp3", 'file': 'listening/museumes.txt'},
                 'Movie':  {'audio': "audio/5.mp3", 'file': 'listening/movie.txt'},
                 'Foreign Country':  {'audio': "audio/6.mp3", 'file': 'listening/a foreign country.txt'},
                 'Parties':  {'audio': "audio/7.mp3", 'file': 'listening/parties.txt'},
                 'Teacher':  {'audio': "audio/8.mp3", 'file': 'listening/a teacher.txt'},
                 'A friend':  {'audio': "audio/9.mp3", 'file': 'listening/a friend.txt'},
                 'Favourite Things':  {'audio': "audio/favorite things.mp3", 'file': 'listening-intermediate/lesson#01.txt'},
                 'Activity':  {'audio': "audio/activity.mp3", 'file': 'listening-intermediate/lesson#02.txt'},
                 'Working Out':  {'audio': "audio/working out.mp3", 'file': 'listening-intermediate/lesson#03.txt'},
                 'Introductions':  {'audio': "audio/introductions.mp3", 'file': 'listening-intermediate/lesson#04.txt'},
                 'Register For A Class':  {'audio': "audio/registering for class.mp3", 'file': 'listening-intermediate/lesson#05.txt'},
                 'Registration':  {'audio': "audio/registration.mp3", 'file': 'listening-intermediate/lesson#06.txt'},
                 'Grades':  {'audio': "audio/grades.mp3", 'file': 'listening-intermediate/lesson#07.txt'},
                'Summer Vacation':  {'audio': "audio/summer vacation.mp3", 'file': 'listening-intermediate/lesson#08.txt'},
                'Exams':  {'audio': "audio/exams.mp3", 'file': 'listening-intermediate/lesson#09.txt'},
                'Smoking':  {'audio': "audio/somking.mp3", 'file': 'listening-intermediate/lesson#10.txt'},
               'Drinking':  {'audio': "audio/drinking.mp3", 'file': 'listening-intermediate/lesson#11.txt'},
              'After Birth':  {'audio': "audio/after birth.mp3", 'file': 'listening-intermediate/lesson#12.txt'},
              'Allergies':  {'audio': "audio/allergies.mp3", 'file': 'listening-intermediate/lesson#13.txt'},
             'Losing Weight':  {'audio': "audio/losing weight.mp3", 'file': 'listening-intermediate/lesson#14.txt'},
             'Dieting':  {'audio': "audio/dieting.mp3", 'file': 'listening-intermediate/lesson#15.txt'},
             'Asking For A Date':  {'audio': "audio/asking for a date.mp3", 'file': 'listening-intermediate/lesson#16.txt'},
             'Proposing':  {'audio': "audio/proposing.mp3", 'file': 'listening-intermediate/lesson#17.txt'},
             'Baseball':  {'audio': "audio/baseball.mp3", 'file': 'listening-intermediate/lesson#18.txt'} ,
             'General Sports':  {'audio': "audio/general sports.mp3", 'file': 'listening-intermediate/lesson#19.txt'},
             'Golf':  {'audio': "audio/golf.mp3", 'file': 'listening-intermediate/lesson#20.txt'},
             'Mall Shopping':  {'audio': "audio/mall shopping.mp3", 'file': 'listening-intermediate/lesson#21.txt'},
             'Jewerly Gift':  {'audio': "audio/jewelry gift.mp3", 'file': 'listening-intermediate/lesson#23.txt'},
             'Jewerly':  {'audio': "audio/jewelry.mp3", 'file': 'listening-intermediate/lesson#24.txt'} ,
            'Jewerly Watch':  {'audio': "audio/jewelry watch.mp3", 'file': 'listening-intermediate/lesson#25.txt'},
            'Having A Baby':  {'audio': "audio/having a baby.mp3", 'file': 'listening-intermediate/lesson#26.txt'}, 
            'Sick Dad':  {'audio': "audio/sick dad.mp3", 'file': 'listening-intermediate/lesson#27.txt'},
            'Stressful Parents':  {'audio': "audio/stressful parents.mp3", 'file': 'listening-intermediate/lesson#28.txt'}, 
           'Grandmother Passing Away':  {'audio': "audio/grandmother passing away.mp3", 'file': 'listening-intermediate/lesson#29.txt'},
           'University Conversation':  {'audio': "audio/university conversation.mp3", 'file': 'listening-advanced/lesson#01.txt'},
           'Studying For Exam':  {'audio': "audio/studying for exam.mp3", 'file': 'listening-advanced/lesson#02.txt'},
           'Roommates':  {'audio': "audio/roommates.mp3", 'file': 'listening-advanced/lesson#03.txt'},
           'Doormitory':  {'audio': "audio/dormitory.mp3", 'file': 'listening-advanced/lesson#04.txt'},
           'Renting A Room':  {'audio': "audio/renting a room.mp3", 'file': 'listening-advanced/lesson#05.txt'},
           'Quit Smoking':  {'audio': "audio/quit smoking.mp3", 'file': 'listening-advanced/lesson#06.txt'},
           'Running Into A Friend':  {'audio': "audio/running into a friend.mp3", 'file': 'listening-advanced/lesson#07.txt'},
          'Small Talk':  {'audio': "audio/small talk.mp3", 'file': 'listening-advanced/lesson#08.txt'},
          'Hang Out':  {'audio': "audio/hang out.mp3", 'file': 'listening-advanced/lesson#09.txt'},
          'First Date':  {'audio': "audio/first date.mp3", 'file': 'listening-advanced/lesson#10.txt'},
          'Honneymoon Planning':  {'audio': "audio/honeymoon planning.mp3", 'file': 'listening-advanced/lesson#11.txt'},
         'Weight Lose':  {'audio': "audio/weight loss.mp3", 'file': 'listening-advanced/lesson#13.txt'},
          'Marriage Proposal':  {'audio': "audio/marriage proposal.mp3", 'file': 'listening-advanced/lesson#14.txt'},
          'Watching Baseball':  {'audio': "audio/watching baseball.mp3", 'file': 'listening-advanced/lesson#15.txt'},
          'Watching Football':  {'audio': "audio/watching football.mp3", 'file': 'listening-advanced/lesson#17.txt'},
          'Poker':  {'audio': "audio/poker.mp3", 'file': 'listening-advanced/lesson#18.txt'},
          'Talking About Guys':  {'audio': "audio/talking about guys.mp3", 'file': 'listening-advanced/lesson#19.txt'},
          'Practicing Golf':  {'audio': "audio/practicing golf.mp3", 'file': 'listening-advanced/lesson#20.txt'},
          'Favourite Hobby':  {'audio': "audio/favority hobby.mp3", 'file': 'listening-advanced/lesson#21.txt'},
          'Life After Breaking Up':  {'audio': "audio/life after breaking up.mp3", 'file': 'listening-advanced/lesson#22.txt'},
          'Heart Broken':  {'audio': "audio/heart broken.mp3", 'file': 'listening-advanced/lesson#23.txt'},
          'Being Afraid':  {'audio': "audio/being afraid.mp3", 'file': 'listening-advanced/lesson#24.txt'},
          'Restless':  {'audio': "audio/restless.mp3", 'file': 'listening-advanced/lesson#25.txt'},
          'Infatuation':  {'audio': "audio/infatuation.mp3", 'file': 'listening-advanced/lesson#26.txt'},
          'Class Friend':  {'audio': "audio/class friend.mp3", 'file': 'listening-advanced/lesson#27.txt'},
          'General Advanced':  {'audio': "audio/general advanced.mp3", 'file': 'listening-advanced/lesson#28.txt'},
          'Joining Health Club':  {'audio': "audio/joining health club.mp3", 'file': 'listening-advanced/lesson#29.txt'},
          'Watching Basketball':  {'audio': "audio/watching basketball.mp3", 'file': 'listening-advanced/lesson#31.txt'}}
        file = audio_file[text]['file']
        audio = audio_file[text]['audio']

        if self.sound:
            self.sound.stop()
        self.sound = SoundLoader.load(audio)
        self.sound.play()
        self.sound.loop=True
        with open(file) as f:
            translatedfile= file
        
            self.ids.mytext.text = f.read()
   def selection(self):
       global truth1,truth2,truth3
       truth1 = True
       truth2 = False
       truth3 = False
       global myresult1
       
       conn = sqlite3.connect("book.db")
       cursor= conn.cursor()
       myvariable = self.ids.mytext.selection_text
       
       sql_query="select meaning from words10 where  lower(upper(word)) like ?"
       cursor.execute(sql_query,(myvariable,))
       myresult= cursor.fetchone()
       if myresult is None:
            content=Label(text="Not Found. Please choose the word correcly",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)
       else:
            myresult1 = ''.join(myresult)
            self.manager.current = 'trans'

       

   def translatall(self):
        if self.ids.all.text=="Translate All":
            self.ids.all.text="Translate All"
            self.ids.yourtext.size=400,450
       
       
                    
               
                
        
            
        
            
            
       
            
        
        
            
            
        
            
        
        
            
                    
            
       
       
        
       

       
        
    
        
    
        


class Firstwindow(Screen):
    global truth1,truth2,truth3
    
    

    
            
            
class Secondwindow(Screen):
        

    global x1
    global re,re1,re2,re3,re4,re5
    
         
    db = sqlite3.connect('book.db')
    cu = db.cursor()
    cu1= db.cursor()
    cu2 = db.cursor()
    cu3 = db.cursor()
    cu4= db.cursor()
    cu5= db.cursor()
    
    cu1.execute("select wronganswer1 from intermediate")
    cu.execute("select questions from intermediate")
    cu2.execute("select wronganswer2 from intermediate")
    cu3.execute("select rightanswer from intermediate")
    cu4.execute("select option from intermediate")
    cu5.execute("select num from intermediate")
    re1= cu1.fetchall()
    re2= cu2.fetchall()
    re= cu.fetchall()
    re3 = cu3.fetchall()
    re4 = cu4.fetchall()
    re5 = cu5.fetchall()

    
    def on_pre_enter(self,*args):
        global counter1
        global theoption
        global intermediateid
        counter1 = counter1 + 1
        if counter1 == 333:
            counter1 = 1
        myinteger = random.randint(1,2)
        if myinteger == 1:
            self.ids.record1.text= str (re[counter1]).strip("()").strip(",").strip("''")
            self.ids.ll1.text = str (re1[counter1]).strip("()").strip(",").strip("''")
            self.ids.ll2.text = str (re2[counter1]).strip("()").strip(",").strip("''")
            self.ids.ll3.text = str (re3[counter1]).strip("()").strip(",").strip("''")
            theoption = str(re4[counter1]).strip("()").strip(",").strip("''")
            intermediateid = str(re5[counter1]).strip("()").strip(",").strip("''")
        else:
            self.ids.record1.text= str (re[counter1]).strip("()").strip(",").strip("''")
            self.ids.ll1.text = str (re3[counter1]).strip("()").strip(",").strip("''")
            self.ids.ll2.text = str (re2[counter1]).strip("()").strip(",").strip("''")
            self.ids.ll3.text = str (re1[counter1]).strip("()").strip(",").strip("''")
            theoption = str(re4[counter1]).strip("()").strip(",").strip("''")
            intermediateid = str(re5[counter1]).strip("()").strip(",").strip("''")

        
    def stophere1(self):
        f = open("stophere.txt","w")
        f.write(intermediateid)
        f.close()

    def on_estate_check(self):
        
        if self.ids.check1.active is True:
            if self.ids.ll1.text == str(re3[counter1]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass
        
        if self.ids.check3.active is True:
            if self.ids.ll3.text == str(re3[counter1]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)


        if self.ids.check2.active is True:
            content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)

    
    
       
           
           
       
       
       
       
       
       
class Thirdwindow(Screen):

      
    global x 
    global results,result1,result2,result3,result4,result5
    
            
    db = sqlite3.connect('book.db')
    cur = db.cursor()
    cur1= db.cursor()
    cur2 = db.cursor()
    cur3 = db.cursor()
    cur4 = db.cursor()
    cur5= db.cursor()
    cur1.execute("select wronganswer1 from advanced")
    cur.execute("select questions from advanced")
    cur2.execute("select wronganswer2 from advanced")
    cur3.execute("select rightanswer from advanced")
    cur4.execute("select option from advanced")
    cur5.execute("select num from advanced")
    result1= cur1.fetchall()
    result2= cur2.fetchall()
    results= cur.fetchall()
    result3 = cur3.fetchall()
    result4= cur4.fetchall()
    result5 = cur5.fetchall()
    
    
    
    
    
     
    
    def on_pre_enter(self,*args):
        global theoption3
        global counter3
        global advancedid
        counter3 = counter3 + 1
        if counter3 == 246:
            counter3 = 1
            myinteger =""
        myinteger = random.randint(1,2)
        if myinteger == 1:
            self.ids.record.text = str(results[counter3]).strip("()").strip(",").strip("''")
            self.ids.l1.text = str (result1[counter3]).strip("()").strip(",").strip("''")
            self.ids.l2.text = str (result2[counter3]).strip("()").strip(",").strip("''")
            self.ids.l3.text = str (result3[counter3]).strip("()").strip(",").strip("''")
            theoption3=  str(result4[counter3]).strip("()").strip(",").strip("''") #هذا المتغير يسترد حقل من قاعدة البيانات وبناء عليه يتم تشغيل فديو معين
            advancedid= str(result5[counter3]).strip("()").strip(",").strip("''")
        else:
            self.ids.record.text = str(results[counter3]).strip("()").strip(",").strip("''")
            self.ids.l1.text = str (result3[counter3]).strip("()").strip(",").strip("''")
            self.ids.l2.text = str (result2[counter3]).strip("()").strip(",").strip("''")
            self.ids.l3.text = str (result1[counter3]).strip("()").strip(",").strip("''")
            theoption3=  str(result4[counter3]).strip("()").strip(",").strip("''") #هذا المتغير يسترد حقل من قاعدة البيانات وبناء عليه يتم تشغيل فديو معين
            advancedid= str(result5[counter3]).strip("()").strip(",").strip("''")


        # الكود يستمر هنا في اختبار المتغير وتشغيل الفديو بناء عليه
    def stophere2(self):
        f = open("stop3.txt","w")
        f.write(advancedid)
        f.close() 


    def on_estate_check(self):
        
        if self.ids.check1.active is True:
            if self.ids.l1.text == str(result3[counter3]).strip("()").strip(",").strip("''"):
                sound = SoundLoader.load("answers/rightanswer.mp3")
                sound.play()
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        

        if self.ids.check3.active is True:
            if self.ids.l3.text == str(result3[counter3]).strip("()").strip(",").strip("''"):
                sound = SoundLoader.load("answers/rightanswer.mp3")
                sound.play()
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        

        if self.ids.check2.active is True:
            content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)
     
            
        
        
    
           
           
           
           
           
           





class Windowfirst(Screen):

      
    
    global s,s1,s2,s3,s4,s5
    
            
    db = sqlite3.connect('book.db')
    b = db.cursor()
    b1= db.cursor()
    b2 = db.cursor()
    b3 = db.cursor()
    b4= db.cursor()
    b5= db.cursor()
    b1.execute("select wronganswer1 from beginner")
    b.execute("select questions from beginner")
    b2.execute("select wronganswer2 from beginner")
    b3.execute("select rightanswer from beginner")
    b4.execute("select option from beginner")
    b5.execute("select num from beginner")
    s1= b1.fetchall()
    s2= b2.fetchall()
    s= b.fetchall()
    s3 = b3.fetchall()
    s4 = b4.fetchall()
    s5= b5.fetchall()
    
    
    
    
     
    
    def on_pre_enter(self, *args):
        
        global counter2
        global theoption1
        global beginnerid
        counter2 = counter2 + 1
        if counter2 == 254:
            counter2 = 1
            myinteger =""
        myinteger = random.randint(1,2)
        if myinteger == 1:
            self.ids.record3.text = str (s[counter2]).strip("()").strip(",").strip("''")
            self.ids.lll1.text = str (s1[counter2]).strip("()").strip(",").strip("''")
            self.ids.lll2.text = str (s2[counter2]).strip("()").strip(",").strip("''")
            self.ids.lll3.text = str (s3[counter2]).strip("()").strip(",").strip("''")
            theoption1 = str(s4[counter2]).strip("()").strip(",").strip("''")
            beginnerid = str(s5[counter2]).strip("()").strip(",").strip("''")
        else:
            self.ids.record3.text = str (s[counter2]).strip("()").strip(",").strip("''")
            self.ids.lll1.text = str (s3[counter2]).strip("()").strip(",").strip("''")
            self.ids.lll2.text = str (s2[counter2]).strip("()").strip(",").strip("''")
            self.ids.lll3.text = str (s1[counter2]).strip("()").strip(",").strip("''")
            theoption1 = str(s4[counter2]).strip("()").strip(",").strip("''")
            beginnerid = str(s5[counter2]).strip("()").strip(",").strip("''")

    def stophere(self):
        f = open("stop2.txt","w")
        f.write(beginnerid)
        f.close()
    

    def on_estate_check(self):

        if self.ids.check1.active is True:
            if self.ids.lll1.text == str(s3[counter2]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
                
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        
            
        
    

        if self.ids.check3.active is True:
            if self.ids.lll3.text == str(s3[counter2]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
                
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            
            pass


        if self.ids.check2.active is True:
            content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)

            
            
    
        
        



    
        
        
        
        




class Playvideo(Screen):
    
    def on_pre_enter(self, *args):
        
        global theoption3
        global truth3
        checker = theoption3
        
        
        if checker == 'imperative sentences to passive voice'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/Active voice Imperative sentences to Passive voice.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'past perfect'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/past perfect simple.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'past continuous'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/past continuous.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'would you mind'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/beginner/would you mind.mp4'
                video.state ='play'
                video.options={'eos':'loop'}
        
        if checker == 'present perfect continuous'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/present perfect continuous.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'past perfect continuous'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/past perfect continuous.mp4'
                video.state ='play'
                
                video.options={'eos':'loop'}

        if checker == 'future perfect'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/future perfect.mp4'
                video.state ='play'
                
                video.options={'eos':'loop'}

        if checker == 'reported speech'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/Reported Speech Requests Orders questions.mp4'
                video.state ='play'
                
                video.options={'eos':'loop'}

        if checker == 'how about what about'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/how about what about why do not.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'present simple passive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/present simple passive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'past simple passive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/past simple passive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'future simple passive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/future simple passive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'expression used with gerund'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/expressions +ing.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'third conditional'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/conditionals type 2 and 3.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'using would'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/how to use would in english.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'present perfect modals'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/modals past.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'modals continuous'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/Modal Verb  Continuous.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'question tag'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/tag question.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'perfect modals'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/modals past.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'used to'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/would vs used to.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'second conditional'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/conditional type2.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'will for quick decision'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/will quick decision.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'present perfect continuous questions'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/question in the present perfect.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'present perfect vs past perfect'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/past perfect vs present perfect.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'agreement using so and neither'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/agreement using so and neither.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'would you mind'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/beginner/would you mind.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'adjectives and prepositions combinations1'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/prepositions collocations.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'so that such that'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/so that such that to too and enough.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'preposition across along through'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/across along through.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'prepositions among amongst and between'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/among amongst and between.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'preposition into'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/beginner/prepositions in into.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'preposition with'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/beginner/prepositions for with and about.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'as if'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/as if as though.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'past perfect passive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/past perfect passive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'get+past participle'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/get + past participle.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'passive voice with modals'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/passive modals.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'have something done'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/have something done get something done.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'present continuous passive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/present continuous passive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'subjunctive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/the english subjunctive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'question tag irregular'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/question tag irregular.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'used to be used to get used to'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/used to be used to get used to.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'expression used with gerund'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/expressions +ing.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'preposition over'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/beginner/preposition over.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'although'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/although though even though despite in spite of.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'using of'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/beginner/prepositions of and from.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'nevertheless'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/however and nevertheless.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'participles'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/participles.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'zero conditional'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/beginner/conditionals type 0 and 1.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'present perfect'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/present perfect simple.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'verbs used with gerund'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/top 10 verbs followed by gerunds.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'inversion'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/inversion.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'gerund'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/gerund.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'restrictive and non-restrictive clause'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/restrictive and non-restrictive clause.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'has been have been had been'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/has been have been had been.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'reported speech statement'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/reporting statement.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'restrictive and non-restrictive clause1'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/Restrictive vs Non-restrictive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'future continuous'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/future continuous.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'subject verb agreement-advanced'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/subject verb agreement-advanced.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'nothing'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/INDEFINITE PRONOUNS - SOMETHING ANYTHING NOTHING EVERYTHING.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'noun clause'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/noun clause.mp4'
                video.state ='play'
                video.options={'eos':'loop'}
        
        if checker == 'neither nor'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/either or neither nor and both.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'comparing adverbs'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/comparing adverbs.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'using wish'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/wish.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'that versus which'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/that versus which.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'future perfect continuous'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/future perfect continuous.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'as vs like'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/as vs like.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'relative pronouns'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/relative pronouns.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'past perfect passive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/past perfect passive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'the more'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/double comparatives.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'be supposed to'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/be supposed to.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'be to + infinitive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/be to + infinitive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'using as well as'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/as well as.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'a few of one of most of etc'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/Mistakes in English with  One of Few of Some of All of.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'such as'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/giving examples with such as.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'even though'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/using the word even even so even though even if even as.mp4'
                video.state ='play'
                video.options={'eos':'loop'}
        
        if checker == 'independent and dependent clause'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/independent and dependent clauses.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'passive voice with that'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/Passive verbs with that clauses -It is thought that.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'present perfect continuous passive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/present perfect continuous passive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'past perfect continuous passive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/past perfect continuous passive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'future perfect continuous passive'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/future perfect continuous passive.mp4'
                video.state ='play'
                video.options={'eos':'loop'}
                
        if checker == 'confusing indefinite pronouns'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/how to use 5 confusing indefinite pronouns.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'future in the past'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/future in the past.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'wh question present simple'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/wh question present simple.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'questions in reported speech'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/questions in reported speech.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'reported speech request order questions'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/Reported Speech Requests Orders questions.mp4'
                video.state ='play'
                video.options={'eos':'loop'}
        
        if checker == 'how to use would in english'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/how to use would in english.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'negative questions'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/negative questions.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'a pair of'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/using the english phrase a pair of.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'linking words'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/intermediate/linking words.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'each other'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/beginner/each other vs one another.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'collective nouns'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/collective nouns.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'collective nouns1'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/collective nouns1.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'would have been'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/would have been.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'the number of vs a number of'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/the number of vs a number of.mp4'
                video.state ='play'
                video.options={'eos':'loop'}
        
        if checker == 'embedded questions'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/embedded questions.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'cleft sentence'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/cleft sentence.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        if checker == 'fronting and prefacing'.strip(): # already a string
                video = self.ids.v
                video.source ='videos/advanced/fronting and prefacing.mp4'
                video.state ='play'
                video.options={'eos':'loop'}

        

        

        

        

        

        

        

        
        

        


        
        

        

        

        

        

        

        
                
    
                
        
                
                

                
        
                
        
        
        
        
    
        
            
            

class Mode(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.sound = SoundLoader.load("audio/1.mp3")
        
        
    
    
    def play(self, text):
        global translatedfile1
        audio_file = {'Newspaper and Magazine': {'audio': "audio/1.mp3", 'file': 'listening/newspaper.txt'},
                      'A practical skill': {'audio': "audio/17.mp3", 'file': 'listening/a practical skill.txt'},
                      'Presents':  {'audio': "audio/presents.mp3", 'file': 'listening/presents.txt'},
                      'Favourite Rooms':  {'audio': "audio/favorite rooms.mp3", 'file': 'listening/favourite rooms.txt'},
                     'Historical Places':  {'audio': "audio/HISTORICAL PLACE.mp3", 'file': 'listening/historical places.txt'},
                    'Sports':  {'audio': "audio/18.mp3", 'file': 'listening/sports.txt'},
                    'A school':  {'audio': "audio/19.mp3", 'file': 'listening/a school.txt'},
                    'Festival':  {'audio': "audio/20.mp3", 'file': 'listening/festival.txt'},
                    'Restaurant':  {'audio': "audio/restaurant.mp3", 'file': 'listening/restaurant.txt'},
                    'Website':  {'audio': "audio/website.mp3", 'file': 'listening/website.txt'},
                    'Holiday':  {'audio': "audio/15.mp3", 'file': 'listening/holiday.txt'},
                    'Travel':  {'audio': "audio/travel.mp3", 'file': 'listening/travel.txt'},
                    'Books':  {'audio': "audio/books.mp3", 'file': 'listening/books.txt'},
                    'An Accident':  {'audio': "audio/accident.mp3", 'file': 'listening/accident.txt'},
                   'Animals':  {'audio': "audio/16.mp3", 'file': 'listening/animals.txt'},
                  'A hotel':  {'audio': "audio/10.mp3", 'file': 'listening/a hotel.txt'},
                  'Letter':  {'audio': "audio/11.mp3", 'file': 'listening/a letter.txt'},
                 'Hobbies':  {'audio': "audio/12.mp3", 'file': 'listening/hobbies.txt'},
                 'Music':  {'audio': "audio/13.mp3", 'file': 'listening/music.txt'},
                 'Shopping':  {'audio': "audio/14.mp3", 'file': 'listening/shopping.txt'},
                 'A Memorable':  {'audio': "audio/2.mp3", 'file': 'listening/a memorable event.txt'},
                 'Favourite Subject':  {'audio': "audio/3.mp3", 'file': 'listening/favorite subject.txt'},
                 'Museums':  {'audio': "audio/4.mp3", 'file': 'listening/museumes.txt'},
                 'Movie':  {'audio': "audio/5.mp3", 'file': 'listening/movie.txt'},
                 'Foreign Country':  {'audio': "audio/6.mp3", 'file': 'listening/a foreign country.txt'},
                 'Parties':  {'audio': "audio/7.mp3", 'file': 'listening/parties.txt'},
                 'Teacher':  {'audio': "audio/8.mp3", 'file': 'listening/a teacher.txt'},
                 'A friend':  {'audio': "audio/9.mp3", 'file': 'listening/a friend.txt'},
                 'Favourite Things':  {'audio': "audio/favorite things.mp3", 'file': 'listening-intermediate/lesson#01.txt'},
                 'Activity':  {'audio': "audio/activity.mp3", 'file': 'listening-intermediate/lesson#02.txt'},
                 'Working Out':  {'audio': "audio/working out.mp3", 'file': 'listening-intermediate/lesson#03.txt'},
                 'Introductions':  {'audio': "audio/introductions.mp3", 'file': 'listening-intermediate/lesson#04.txt'},
                 'Register For A Class':  {'audio': "audio/registering for class.mp3", 'file': 'listening-intermediate/lesson#05.txt'},
                 'Registration':  {'audio': "audio/registration.mp3", 'file': 'listening-intermediate/lesson#06.txt'},
                 'Grades':  {'audio': "audio/grades.mp3", 'file': 'listening-intermediate/lesson#07.txt'},
                'Summer Vacation':  {'audio': "audio/summer vacation.mp3", 'file': 'listening-intermediate/lesson#08.txt'},
                'Exams':  {'audio': "audio/exams.mp3", 'file': 'listening-intermediate/lesson#09.txt'},
                'Smoking':  {'audio': "audio/somking.mp3", 'file': 'listening-intermediate/lesson#10.txt'},
               'Drinking':  {'audio': "audio/drinking.mp3", 'file': 'listening-intermediate/lesson#11.txt'},
              'After Birth':  {'audio': "audio/after birth.mp3", 'file': 'listening-intermediate/lesson#12.txt'},
              'Allergies':  {'audio': "audio/allergies.mp3", 'file': 'listening-intermediate/lesson#13.txt'},
             'Losing Weight':  {'audio': "audio/losing weight.mp3", 'file': 'listening-intermediate/lesson#14.txt'},
             'Dieting':  {'audio': "audio/dieting.mp3", 'file': 'listening-intermediate/lesson#15.txt'},
             'Asking For A Date':  {'audio': "audio/asking for a date.mp3", 'file': 'listening-intermediate/lesson#16.txt'},
             'Proposing':  {'audio': "audio/proposing.mp3", 'file': 'listening-intermediate/lesson#17.txt'},
             'Baseball':  {'audio': "audio/baseball.mp3", 'file': 'listening-intermediate/lesson#18.txt'} ,
             'General Sports':  {'audio': "audio/general sports.mp3", 'file': 'listening-intermediate/lesson#19.txt'},
             'Golf':  {'audio': "audio/golf.mp3", 'file': 'listening-intermediate/lesson#20.txt'},
             'Mall Shopping':  {'audio': "audio/mall shopping.mp3", 'file': 'listening-intermediate/lesson#21.txt'},
             'Jewerly Gift':  {'audio': "audio/jewelry gift.mp3", 'file': 'listening-intermediate/lesson#23.txt'},
             'Jewerly':  {'audio': "audio/jewelry.mp3", 'file': 'listening-intermediate/lesson#24.txt'} ,
            'Jewerly Watch':  {'audio': "audio/jewelry watch.mp3", 'file': 'listening-intermediate/lesson#25.txt'},
            'Having A Baby':  {'audio': "audio/having a baby.mp3", 'file': 'listening-intermediate/lesson#26.txt'}, 
            'Sick Dad':  {'audio': "audio/sick dad.mp3", 'file': 'listening-intermediate/lesson#27.txt'},
            'Stressful Parents':  {'audio': "audio/stressful parents.mp3", 'file': 'listening-intermediate/lesson#28.txt'}, 
           'Grandmother Passing Away':  {'audio': "audio/grandmother passing away.mp3", 'file': 'listening-intermediate/lesson#29.txt'},
           'University Conversation':  {'audio': "audio/university conversation.mp3", 'file': 'listening-advanced/lesson#01.txt'},
           'Studying For Exam':  {'audio': "audio/studying for exam.mp3", 'file': 'listening-advanced/lesson#02.txt'},
           'Roommates':  {'audio': "audio/roommates.mp3", 'file': 'listening-advanced/lesson#03.txt'},
           'Doormitory':  {'audio': "audio/dormitory.mp3", 'file': 'listening-advanced/lesson#04.txt'},
           'Renting A Room':  {'audio': "audio/renting a room.mp3", 'file': 'listening-advanced/lesson#05.txt'},
           'Quit Smoking':  {'audio': "audio/quit smoking.mp3", 'file': 'listening-advanced/lesson#06.txt'},
           'Running Into A Friend':  {'audio': "audio/running into a friend.mp3", 'file': 'listening-advanced/lesson#07.txt'},
          'Small Talk':  {'audio': "audio/small talk.mp3", 'file': 'listening-advanced/lesson#08.txt'},
          'Hang Out':  {'audio': "audio/hang out.mp3", 'file': 'listening-advanced/lesson#09.txt'},
          'First Date':  {'audio': "audio/first date.mp3", 'file': 'listening-advanced/lesson#10.txt'},
          'Honneymoon Planning':  {'audio': "audio/honeymoon planning.mp3", 'file': 'listening-advanced/lesson#11.txt'},
         'Weight Lose':  {'audio': "audio/weight loss.mp3", 'file': 'listening-advanced/lesson#13.txt'},
          'Marriage Proposal':  {'audio': "audio/marriage proposal.mp3", 'file': 'listening-advanced/lesson#14.txt'},
          'Watching Baseball':  {'audio': "audio/watching baseball.mp3", 'file': 'listening-advanced/lesson#15.txt'},
          'Watching Football':  {'audio': "audio/watching football.mp3", 'file': 'listening-advanced/lesson#17.txt'},
          'Poker':  {'audio': "audio/poker.mp3", 'file': 'listening-advanced/lesson#18.txt'},
          'Talking About Guys':  {'audio': "audio/talking about guys.mp3", 'file': 'listening-advanced/lesson#19.txt'},
          'Practicing Golf':  {'audio': "audio/practicing golf.mp3", 'file': 'listening-advanced/lesson#20.txt'},
          'Favourite Hobby':  {'audio': "audio/favority hobby.mp3", 'file': 'listening-advanced/lesson#21.txt'},
          'Life After Breaking Up':  {'audio': "audio/life after breaking up.mp3", 'file': 'listening-advanced/lesson#22.txt'},
          'Heart Broken':  {'audio': "audio/heart broken.mp3", 'file': 'listening-advanced/lesson#23.txt'},
          'Being Afraid':  {'audio': "audio/being afraid.mp3", 'file': 'listening-advanced/lesson#24.txt'},
          'Restless':  {'audio': "audio/restless.mp3", 'file': 'listening-advanced/lesson#25.txt'},
          'Infatuation':  {'audio': "audio/infatuation.mp3", 'file': 'listening-advanced/lesson#26.txt'},
          'Class Friend':  {'audio': "audio/class friend.mp3", 'file': 'listening-advanced/lesson#27.txt'},
          'General Advanced':  {'audio': "audio/general advanced.mp3", 'file': 'listening-advanced/lesson#28.txt'},
          'Joining Health Club':  {'audio': "audio/joining health club.mp3", 'file': 'listening-advanced/lesson#29.txt'},
          'Watching Basketball':  {'audio': "audio/watching basketball.mp3", 'file': 'listening-advanced/lesson#31.txt'}}
        file = audio_file[text]['file']
        audio = audio_file[text]['audio']

        if self.sound:
            self.sound.stop()
        self.sound = SoundLoader.load(audio)
        self.sound.play()
        self.sound.loop=True
        with open(file) as f:
            translatedfile1= file
            self.ids.mytext.text = f.read()

    def selection1(self):
       global myresult1
       global truth1,truth2,truth3
       truth1 = False
       truth2 = True
       truth3 = False
       conn = sqlite3.connect("book.db")
       cursor= conn.cursor()
       myvariable = self.ids.mytext.selection_text
       
       sql_query="select meaning from words10 where  lower(upper(word)) like ?"
       cursor.execute(sql_query,(myvariable,))
       myresult= cursor.fetchone()
       if myresult is None:
            content=Label(text="Not Found. Please choose the word correcly",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)
       else:
            myresult1 = ''.join(myresult)
            self.manager.current = 'trans'
            
        

class Modea(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.sound = SoundLoader.load("audio/1.mp3")
        
        
    
    
    def play(self, text):
        global translatedfile2
        audio_file = {'Newspaper and Magazine': {'audio': "audio/1.mp3", 'file': 'listening/newspaper.txt'},
                      'A practical skill': {'audio': "audio/17.mp3", 'file': 'listening/a practical skill.txt'},
                      'Presents':  {'audio': "audio/presents.mp3", 'file': 'listening/presents.txt'},
                      'Favourite Rooms':  {'audio': "audio/favorite rooms.mp3", 'file': 'listening/favourite rooms.txt'},
                     'Historical Places':  {'audio': "audio/HISTORICAL PLACE.mp3", 'file': 'listening/historical places.txt'},
                    'Sports':  {'audio': "audio/18.mp3", 'file': 'listening/sports.txt'},
                    'A school':  {'audio': "audio/19.mp3", 'file': 'listening/a school.txt'},
                    'Festival':  {'audio': "audio/20.mp3", 'file': 'listening/festival.txt'},
                    'Restaurant':  {'audio': "audio/restaurant.mp3", 'file': 'listening/restaurant.txt'},
                    'Website':  {'audio': "audio/website.mp3", 'file': 'listening/website.txt'},
                    'Holiday':  {'audio': "audio/15.mp3", 'file': 'listening/holiday.txt'},
                    'Travel':  {'audio': "audio/travel.mp3", 'file': 'listening/travel.txt'},
                    'Books':  {'audio': "audio/books.mp3", 'file': 'listening/books.txt'},
                    'An Accident':  {'audio': "audio/accident.mp3", 'file': 'listening/accident.txt'},
                   'Animals':  {'audio': "audio/16.mp3", 'file': 'listening/animals.txt'},
                  'A hotel':  {'audio': "audio/10.mp3", 'file': 'listening/a hotel.txt'},
                  'Letter':  {'audio': "audio/11.mp3", 'file': 'listening/a letter.txt'},
                 'Hobbies':  {'audio': "audio/12.mp3", 'file': 'listening/hobbies.txt'},
                 'Music':  {'audio': "audio/13.mp3", 'file': 'listening/music.txt'},
                 'Shopping':  {'audio': "audio/14.mp3", 'file': 'listening/shopping.txt'},
                 'A Memorable':  {'audio': "audio/2.mp3", 'file': 'listening/a memorable event.txt'},
                 'Favourite Subject':  {'audio': "audio/3.mp3", 'file': 'listening/favorite subject.txt'},
                 'Museums':  {'audio': "audio/4.mp3", 'file': 'listening/museumes.txt'},
                 'Movie':  {'audio': "audio/5.mp3", 'file': 'listening/movie.txt'},
                 'Foreign Country':  {'audio': "audio/6.mp3", 'file': 'listening/a foreign country.txt'},
                 'Parties':  {'audio': "audio/7.mp3", 'file': 'listening/parties.txt'},
                 'Teacher':  {'audio': "audio/8.mp3", 'file': 'listening/a teacher.txt'},
                 'A friend':  {'audio': "audio/9.mp3", 'file': 'listening/a friend.txt'},
                 'Favourite Things':  {'audio': "audio/favorite things.mp3", 'file': 'listening-intermediate/lesson#01.txt'},
                 'Activity':  {'audio': "audio/activity.mp3", 'file': 'listening-intermediate/lesson#02.txt'},
                 'Working Out':  {'audio': "audio/working out.mp3", 'file': 'listening-intermediate/lesson#03.txt'},
                 'Introductions':  {'audio': "audio/introductions.mp3", 'file': 'listening-intermediate/lesson#04.txt'},
                 'Register For A Class':  {'audio': "audio/registering for class.mp3", 'file': 'listening-intermediate/lesson#05.txt'},
                 'Registration':  {'audio': "audio/registration.mp3", 'file': 'listening-intermediate/lesson#06.txt'},
                 'Grades':  {'audio': "audio/grades.mp3", 'file': 'listening-intermediate/lesson#07.txt'},
                'Summer Vacation':  {'audio': "audio/summer vacation.mp3", 'file': 'listening-intermediate/lesson#08.txt'},
                'Exams':  {'audio': "audio/exams.mp3", 'file': 'listening-intermediate/lesson#09.txt'},
                'Smoking':  {'audio': "audio/somking.mp3", 'file': 'listening-intermediate/lesson#10.txt'},
               'Drinking':  {'audio': "audio/drinking.mp3", 'file': 'listening-intermediate/lesson#11.txt'},
              'After Birth':  {'audio': "audio/after birth.mp3", 'file': 'listening-intermediate/lesson#12.txt'},
              'Allergies':  {'audio': "audio/allergies.mp3", 'file': 'listening-intermediate/lesson#13.txt'},
             'Losing Weight':  {'audio': "audio/losing weight.mp3", 'file': 'listening-intermediate/lesson#14.txt'},
             'Dieting':  {'audio': "audio/dieting.mp3", 'file': 'listening-intermediate/lesson#15.txt'},
             'Asking For A Date':  {'audio': "audio/asking for a date.mp3", 'file': 'listening-intermediate/lesson#16.txt'},
             'Proposing':  {'audio': "audio/proposing.mp3", 'file': 'listening-intermediate/lesson#17.txt'},
             'Baseball':  {'audio': "audio/baseball.mp3", 'file': 'listening-intermediate/lesson#18.txt'} ,
             'General Sports':  {'audio': "audio/general sports.mp3", 'file': 'listening-intermediate/lesson#19.txt'},
             'Golf':  {'audio': "audio/golf.mp3", 'file': 'listening-intermediate/lesson#20.txt'},
             'Mall Shopping':  {'audio': "audio/mall shopping.mp3", 'file': 'listening-intermediate/lesson#21.txt'},
             'Jewerly Gift':  {'audio': "audio/jewelry gift.mp3", 'file': 'listening-intermediate/lesson#23.txt'},
             'Jewerly':  {'audio': "audio/jewelry.mp3", 'file': 'listening-intermediate/lesson#24.txt'} ,
            'Jewerly Watch':  {'audio': "audio/jewelry watch.mp3", 'file': 'listening-intermediate/lesson#25.txt'},
            'Having A Baby':  {'audio': "audio/having a baby.mp3", 'file': 'listening-intermediate/lesson#26.txt'}, 
            'Sick Dad':  {'audio': "audio/sick dad.mp3", 'file': 'listening-intermediate/lesson#27.txt'},
            'Stressful Parents':  {'audio': "audio/stressful parents.mp3", 'file': 'listening-intermediate/lesson#28.txt'}, 
           'Grandmother Passing Away':  {'audio': "audio/grandmother passing away.mp3", 'file': 'listening-intermediate/lesson#29.txt'},
           'University Conversation':  {'audio': "audio/university conversation.mp3", 'file': 'listening-advanced/lesson#01.txt'},
           'Studying For Exam':  {'audio': "audio/studying for exam.mp3", 'file': 'listening-advanced/lesson#02.txt'},
           'Roommates':  {'audio': "audio/roommates.mp3", 'file': 'listening-advanced/lesson#03.txt'},
           'Doormitory':  {'audio': "audio/dormitory.mp3", 'file': 'listening-advanced/lesson#04.txt'},
           'Renting A Room':  {'audio': "audio/renting a room.mp3", 'file': 'listening-advanced/lesson#05.txt'},
           'Quit Smoking':  {'audio': "audio/quit smoking.mp3", 'file': 'listening-advanced/lesson#06.txt'},
           'Running Into A Friend':  {'audio': "audio/running into a friend.mp3", 'file': 'listening-advanced/lesson#07.txt'},
          'Small Talk':  {'audio': "audio/small talk.mp3", 'file': 'listening-advanced/lesson#08.txt'},
          'Hang Out':  {'audio': "audio/hang out.mp3", 'file': 'listening-advanced/lesson#09.txt'},
          'First Date':  {'audio': "audio/first date.mp3", 'file': 'listening-advanced/lesson#10.txt'},
          'Honneymoon Planning':  {'audio': "audio/honeymoon planning.mp3", 'file': 'listening-advanced/lesson#11.txt'},
         'Weight Lose':  {'audio': "audio/weight loss.mp3", 'file': 'listening-advanced/lesson#13.txt'},
          'Marriage Proposal':  {'audio': "audio/marriage proposal.mp3", 'file': 'listening-advanced/lesson#14.txt'},
          'Watching Baseball':  {'audio': "audio/watching baseball.mp3", 'file': 'listening-advanced/lesson#15.txt'},
          'Watching Football':  {'audio': "audio/watching football.mp3", 'file': 'listening-advanced/lesson#17.txt'},
          'Poker':  {'audio': "audio/poker.mp3", 'file': 'listening-advanced/lesson#18.txt'},
          'Talking About Guys':  {'audio': "audio/talking about guys.mp3", 'file': 'listening-advanced/lesson#19.txt'},
          'Practicing Golf':  {'audio': "audio/practicing golf.mp3", 'file': 'listening-advanced/lesson#20.txt'},
          'Favourite Hobby':  {'audio': "audio/favority hobby.mp3", 'file': 'listening-advanced/lesson#21.txt'},
          'Life After Breaking Up':  {'audio': "audio/life after breaking up.mp3", 'file': 'listening-advanced/lesson#22.txt'},
          'Heart Broken':  {'audio': "audio/heart broken.mp3", 'file': 'listening-advanced/lesson#23.txt'},
          'Being Afraid':  {'audio': "audio/being afraid.mp3", 'file': 'listening-advanced/lesson#24.txt'},
          'Restless':  {'audio': "audio/restless.mp3", 'file': 'listening-advanced/lesson#25.txt'},
          'Infatuation':  {'audio': "audio/infatuation.mp3", 'file': 'listening-advanced/lesson#26.txt'},
          'Class Friend':  {'audio': "audio/class friend.mp3", 'file': 'listening-advanced/lesson#27.txt'},
          'General Advanced':  {'audio': "audio/general advanced.mp3", 'file': 'listening-advanced/lesson#28.txt'},
          'Joining Health Club':  {'audio': "audio/joining health club.mp3", 'file': 'listening-advanced/lesson#29.txt'},
          'Watching Basketball':  {'audio': "audio/watching basketball.mp3", 'file': 'listening-advanced/lesson#31.txt'}}
        file = audio_file[text]['file']
        audio = audio_file[text]['audio']

        if self.sound:
            self.sound.stop()
        self.sound = SoundLoader.load(audio)
        self.sound.play()
        self.sound.loop=True
        with open(file) as f:
            translatedfile2=file
            self.ids.mytext.text = f.read()

    def selection2(self):
       global myresult1
       global truth1,truth2,truth3
       truth1 = False
       truth2 = False
       truth3 = True
       conn = sqlite3.connect("book.db")
       cursor= conn.cursor()
       myvariable = self.ids.mytext.selection_text
       
       sql_query="select meaning from words10 where  lower(upper(word)) like ?"
       cursor.execute(sql_query,(myvariable,))
       myresult= cursor.fetchone()
       if myresult is None:
            content=Label(text="Not Found. Please choose the word correcly",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)
       else:
            myresult1 = ''.join(myresult)
            self.manager.current = 'trans'
class Video_a(Screen):
    def on_pre_enter(self, *args):
        
        global theoption1
        global truth1
        checker = theoption1
        
        
        if checker == 'go swimming'.strip(): # already a string
                video = self.ids.v1
                video.source ='videos/beginner/play-go-do.mp4'
                video.state ='play'
                
                
    
                
        if checker == 'verb to be'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/verb to be.mp4'
                video.state ='play'
                
        
        
        if checker == 'was and were'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/was were.mp4'
                video.state ='play'

        if checker == 'good at'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/good at.mp4'
                video.state ='play'

        if checker == 'so with adjective'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/using so and such.mp4'
                video.state ='play'

        if checker == 'participle adjectives'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/participle adjectives.mp4'
                video.state ='play'

        if checker == 'much and many'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/much and many.mp4'
                video.state ='play'

        if checker == 'present continuous'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/present continuous.mp4'
                video.state ='play'

        if checker == 'would you mind'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/would you mind.mp4'
                video.state ='play'

        if checker == 'present simple'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/present simple.mp4'
                video.state ='play'

        if checker == 'have got'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/have got and has got.mp4'
                video.state ='play'

        if checker == 'possessive adjective'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/possessive adjectives.mp4'
                video.state ='play'

        if checker == 'to infinitive'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/to infinitive.mp4'
                video.state ='play'

        if checker == 'possessive pronouns'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/possessive pronouns.mp4'
                video.state ='play'

        if checker == 'want vs need'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/want and need.mp4'
                video.state ='play'

        if checker == 'could'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/using could.mp4'
                video.state ='play'

        if checker == 'comparison of adjectives'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/comparison of adjectives.mp4'
                video.state ='play'

        if checker == 'verb to be negative form'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/verb to be negative.mp4'
                video.state ='play'

        if checker == 'look for'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/look for.mp4'
                video.state ='play'

        if checker == 'present simple negative'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/do not and does not.mp4'
                video.state ='play'

        if checker == 'how'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/how.mp4'
                video.state ='play'

        if checker == 'may and might'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/may and might.mp4'
                video.state ='play'

        if checker == 'question with how'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/how old are you.mp4'
                video.state ='play'

        if checker == 'future simple'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/future simple.mp4'
                video.state ='play'

        if checker == 'preposition from'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/prepositions of and from.mp4'
                video.state ='play'

        if checker == 'quantifiers'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/quantifiers.mp4'
                video.state ='play'

        if checker == 'exclamation in english'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/exclamation in english.mp4'
                video.state ='play'

        if checker == 'causative verbs'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/causative verbs2.mp4'
                video.state ='play'

        if checker == 'both and either or neither nor'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/both and either or neither nor.mp4'
                video.state ='play'

        if checker == 'responding to good news'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/responding to good news and bad news.mp4'
                video.state ='play'

        if checker == 'catenative verbs'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/catenative verbs.mp4'
                video.state ='play'

        if checker == 'can'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/can.mp4'
                video.state ='play'

        if checker == 'preposition for'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/prepositions for with and about.mp4'
                video.state ='play'

        if checker == 'using do does and did'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/using do does and did.mp4'
                video.state ='play'

        if checker == 'indifinite articles'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/indefinite articles1.mp4'
                video.state ='play'

        if checker == 'too and very'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/adjectives with too and very.mp4'
                video.state ='play'

        if checker == 'using has have'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/using have has.mp4'
                video.state ='play'

        if checker == 'would like'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/would like.mp4'
                video.state ='play'

        if checker == 'prepositions in-on-at'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/prepositions in-on-at.mp4'
                video.state ='play'

        if checker == 'some any no'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/some any no.mp4'
                video.state ='play'

        if checker == 'prefer'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/prefer.mp4'
                video.state ='play'

        if checker == 'did'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/negative form of do not does not and did not.mp4'
                video.state ='play'

        if checker == 'preposition by'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/preposition by.mp4'
                video.state ='play'

        if checker == 'using do does'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/using do does and did.mp4'
                video.state ='play'

        if checker == 'definite article'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/definite article.mp4'
                video.state ='play'

        if checker == 'like'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/like.mp4'
                video.state ='play'

        if checker == 'using had'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/using have has1.mp4'
                video.state ='play'

        if checker == 'reflexive pronouns'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/reflexive pronouns.mp4'
                video.state ='play'

        if checker == 'negative form of did'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/negative form of do not does not and did not.mp4'
                video.state ='play'

        if checker == 'indefinite pronouns'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/indefinite pronouns.mp4'
                video.state ='play'

        if checker == 'comparative and superlative'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/comparative and superlative.mp4'
                video.state ='play'

        if checker == 'past simple'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/past simple.mp4'
                video.state ='play'

        if checker == 'do vs make'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/do vs make.mp4'
                video.state ='play'

        if checker == 'question with how long'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/question with how long.mp4'
                video.state ='play'

        if checker == 'less vs fewer'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/less vs fewer.mp4'
                video.state ='play'

        if checker == 'first conditional'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/conditionals type 0 and 1.mp4'
                video.state ='play'

        if checker == 'stop'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/stop try help.mp4'
                video.state ='play'

        if checker == 'none of'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/none of.mp4'
                video.state ='play'

        if checker == 'few a few little a little'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/few a few little a little.mp4'
                video.state ='play'

        if checker == 'demonstrative pronouns'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/demonstrative pronouns.mp4'
                video.state ='play'

        if checker == 'have got to'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/have got to have to must.mp4'
                video.state ='play'

        if checker == 'genitive'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/genitive.mp4'
                video.state ='play'

        if checker == 'how do'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/wh-question present simple.mp4'
                video.state ='play'

        if checker == 'adverbs of frequency'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/adverbs of frequency.mp4'
                video.state ='play'

        if checker == 'preposition into'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/prepositions in into.mp4'
                video.state ='play'

        if checker == 'order of adverbs'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/order of adverbs.mp4'
                video.state ='play'

        if checker == 'imperative'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/the imperative.mp4'
                video.state ='play'

        if checker == 'parallelism'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/parallelism.mp4'
                video.state ='play'

        if checker == 'preposition over'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/preposition over.mp4'
                video.state ='play'

        if checker == 'wh questions'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/questions wh.mp4'
                video.state ='play'

        if checker == 'should'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/should.mp4'
                video.state ='play'

        if checker == 'there is there are'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/there is there are.mp4'
                video.state ='play'

        if checker == 'telling time'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/telling time1.mp4'
                video.state ='play'

        if checker == 'will vs going to'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/will vs going to.mp4'
                video.state ='play'

        if checker == 'a lot of'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/much many and a lot of.mp4'
                video.state ='play'

        if checker == 'how tall how long'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/how tall how long.mp4'
                video.state ='play'

        if checker == 'preposition between'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/prepositions between next to etc.mp4'
                video.state ='play'

        if checker == 'do does'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/yes no question do does was were have.mp4'
                video.state ='play'

        if checker == 'preposition above'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/above over up.mp4'
                video.state ='play'

        if checker == 'linking verbs'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/action and linking verbs.mp4'
                video.state ='play'

        if checker == 'question words'.strip(): # already a string
                
                video = self.ids.v1
                video.source ='videos/beginner/question words.mp4'
                video.state ='play'

        

        

        

        

        

        

        

class Video_b(Screen):
    def on_pre_enter(self, *args):
        
        global theoption
        global truth1
        checker = theoption
        
        
        if checker == 'using wish'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/wish.mp4'
                video.state ='play'

        if checker == 'first conditional'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/conditionals type 0 and 1.mp4'
                video.state ='play'
        if checker == 'comparative and superlative'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/comparative and superlative.mp4'
                video.state ='play'

        if checker == 'using have been'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/has been have been had been.mp4'
                video.state ='play'

        if checker == 'third conditional'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/conditionals type 2 and 3.mp4'
                video.state ='play'

        if checker == 'be able to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/can could be able to.mp4'
                video.state ='play'

        if checker == 'adjectives with too and very'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/adjectives with too and very.mp4'
                video.state ='play'

        if checker == 'less'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/less vs fewer.mp4'
                video.state ='play'

        if checker == 'have got to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/have got to have to must.mp4'
                video.state ='play'

        if checker == 'future perfect'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/future perfect.mp4'
                video.state ='play'

        if checker == 'other others'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/another other and others2.mp4'
                video.state ='play'

        if checker == 'present perfect continuous'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/present perfect continuous.mp4'
                video.state ='play'

        if checker == 'past continuous'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/past continuous.mp4'
                video.state ='play'

        if checker == 'present perfect'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/present perfect simple.mp4'
                video.state ='play'

        if checker == 'relative pronouns'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/relative pronouns.mp4'
                video.state ='play'

        if checker == 'gerund'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/gerund.mp4'
                video.state ='play'

        if checker == 'exclamation in english'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/exclamation in english.mp4'
                video.state ='play'

        if checker == 'would you mind'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/would you mind.mp4'
                video.state ='play'

        if checker == 'question tag'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/tag question.mp4'
                video.state ='play'

        if checker == 'present simple questions'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/questions wh.mp4'
                video.state ='play'

        if checker == 'agreement using so and neither'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/agree with so neither and either.mp4'
                video.state ='play'

        if checker == 'using whatever'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/whatever whoever etc.mp4'
                video.state ='play'

        if checker == 'using without'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/without.mp4'
                video.state ='play'

        if checker == 'using hope'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/hope vs wish.mp4'
                video.state ='play'

        if checker == 'adjective word order'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/order of adjectives.mp4'
                video.state ='play'

        if checker == 'would like'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/would like.mp4'
                video.state ='play'

        if checker == 'so that such that'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/so that such that to too and enough.mp4'
                video.state ='play'

        if checker == 'order of adverbs'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/order of adverbs.mp4'
                video.state ='play'

        if checker == 'past simple passive'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/past simple passive.mp4'
                video.state ='play'

        if checker == 'so that such that'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/so that such that to too and enough.mp4'
                video.state ='play'

        if checker == 'a lot of'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner\much many and a lot of.mp4'
                video.state ='play'

        if checker == 'had better'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/had better.mp4'
                video.state ='play'

        if checker == 'few a few little a little'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/few a few little a little.mp4'
                video.state ='play'

        if checker == 'much many'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner\much and many.mp4'
                video.state ='play'
        if checker == 'preposition over'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner\preposition over.mp4'
                video.state ='play'

        if checker == 'third conditional'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/conditionals type 2 and 3.mp4'
                video.state ='play'

        if checker == 'did not'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/negative form of do not does not and did not.mp4'
                video.state ='play'

        if checker == 'infinitive'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/to infinitive.mp4'
                video.state ='play'

        if checker == 'keep'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/phrsalverbs with keep.mp4'
                video.state ='play'

        if checker == 'prefer'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prefer.mp4'
                video.state ='play'

        if checker == 'past simple'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/past simple.mp4'
                video.state ='play'

        if checker == 'second conditional'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/conditionals type 2 and 3.mp4'
                video.state ='play'

        if checker == 'preposition with'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prepositions for with and about.mp4'
                video.state ='play'

        if checker == 'so that'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/so vs so that.mp4'
                video.state ='play'

        if checker == 'would'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/the helping verb would.mp4'
                video.state ='play'

        if checker == 'would like'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/would like.mp4'
                video.state ='play'
        
        if checker == 'may might'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/may and might.mp4'
                video.state ='play'

        if checker == 'do not does not'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/negative form of do not does not and did not.mp4'
                video.state ='play'

        if checker == 'should'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/should.mp4'
                video.state ='play'

        if checker == 'instead of'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/instead and instead of.mp4'
                video.state ='play'

        if checker == 'as soon as'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/as soon as.mp4'
                video.state ='play'

        if checker == 'would rather'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/would rather.mp4'
                video.state ='play'

        if checker == 'present perfect'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/present perfect simple.mp4'
                video.state ='play'

        if checker == 'expressing purpose'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/expressing purpose.mp4'
                video.state ='play'

        if checker == 'comparison of adjectives'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/comparison of adjectives.mp4'
                video.state ='play'

        if checker == 'a pair of'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/a pair of.mp4'
                video.state ='play'

        if checker == 'using since'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/since vs for.mp4'
                video.state ='play'

        if checker == 'was used to+ing'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/used to be used to get used to.mp4'
                video.state ='play'

        if checker == 'have something done'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/have something done get something done.mp4'
                video.state ='play'

        if checker == 'as  much as as many as'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/as much as.mp4'
                video.state ='play'

        if checker == 'causative verbs'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/causative verbs2.mp4'
                video.state ='play'

        if checker == 'ought to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/should ought to had better.mp4'
                video.state ='play'

        if checker == 'perfect modals could have should have would have must have'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/Perfect Modals could have should have would have must have.mp4'
                video.state ='play'

        if checker == 'how much how many'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/how.mp4'
                video.state ='play'

        if checker == 'going to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/will vs going to.mp4'
                video.state ='play'

        if checker == 'preposition into'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prepositions in into.mp4'
                video.state ='play'

        if checker == 'past perfect'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/past perfect simple.mp4'
                video.state ='play'

        if checker == 'would you mind'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/would you mind.mp4'
                video.state ='play'

        if checker == 'preposition next to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prepositions between next to etc.mp4'
                video.state ='play'

        if checker == 'zero conditional'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/conditionals type 0 and 1.mp4'
                video.state ='play'

        if checker == 'preposition in-on-at'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prepositions in-on-at.mp4'
                video.state ='play'

        if checker == 'how about what about why not'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/how about what about why do not.mp4'
                video.state ='play'

        if checker == 'preposition from'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prepositions of and from.mp4'
                video.state ='play'

        if checker == 'subjunctive'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/advanced/the english subjunctive.mp4'
                video.state ='play'

        if checker == 'could'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/can could be able to.mp4'
                video.state ='play'

        if checker == 'used to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/used to be used to get used to.mp4'
                video.state ='play'

        if checker == 'have got to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/have got to have to must.mp4'
                video.state ='play'

        if checker == 'first conditional'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/conditionals type 0 and 1.mp4'
                video.state ='play'

        if checker == 'so that such that'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/so that such that to too and enough.mp4'
                video.state ='play'

        if checker == 'like'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/like.mp4'
                video.state ='play'

        if checker == 'used to be used to get used to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/used to be used to get used to.mp4'
                video.state ='play'

        if checker == 'agreement using so and neither'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/advanced/agreement using so and neither.mp4'
                video.state ='play'

        if checker == 'preposition for'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prepositions for with and about.mp4'
                video.state ='play'

        if checker == 'future simple passive'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/future simple passive.mp4'
                video.state ='play'

        if checker == 'relative pronouns'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/relative pronouns.mp4'
                video.state ='play'

        if checker == 'look forward to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/looking forward to.mp4'
                video.state ='play'

        if checker == 'can'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/can could be able to.mp4'
                video.state ='play'

        if checker == 'in the end vs at the end'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/in the end vs at the end.mp4'
                video.state ='play'

        if checker == 'indefinite pronouns'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/indefinite pronouns.mp4'
                video.state ='play'

        if checker == 'unless'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/unless.mp4'
                video.state ='play'

        if checker == 'some any no'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/some any no.mp4'
                video.state ='play'

        if checker == 'should'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/should.mp4'
                video.state ='play'

        if checker == 'question tag irregular'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/question tag irregular.mp4'
                video.state ='play'

        if checker == 'other others'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/another other and others.mp4'
                video.state ='play'

        if checker == 'how to count uncountable nouns'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/count uncountable nouns-a piece of.mp4'
                video.state ='play'

        if checker == 'parallelism'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/parallelism.mp4'
                video.state ='play'

        if checker == 'indirect questions'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/indirect question.mp4'
                video.state ='play'

        if checker == 'not only but also'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/not only but also.mp4'
                video.state ='play'

        if checker == 'inversion rarely'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/inversion.mp4'
                video.state ='play'

        if checker == 'too vs very'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/adjectives with too and very.mp4'
                video.state ='play'

        if checker == 'there is there are'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/there is there are.mp4'
                video.state ='play'

        if checker == 'comparison of adjectives'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/comparison of adjectives.mp4'
                video.state ='play'

        if checker == 'gerund'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/gerund.mp4'
                video.state ='play'

        if checker == 'has have'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/using have has1.mp4'
                video.state ='play'

        if checker == 'reported speech statement'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/advanced/reporting statement.mp4'
                video.state ='play'

        if checker == 'how many how much'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/how.mp4'
                video.state ='play'

        if checker == 'as much as as many as'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/as as much as as many as.mp4'
                video.state ='play'

        if checker == 'as many as vs as much as'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/as as much as as many as.mp4'
                video.state ='play'

        if checker == 'present continuous'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/present continuous.mp4'
                video.state ='play'

        if checker == 'although even though'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/advanced/although though even though despite in spite of.mp4'
                video.state ='play'

        if checker == 'using enough'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/so that such that to too and enough.mp4'
                video.state ='play'

        if checker == 'would rather'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/would rather.mp4'
                video.state ='play'

        if checker == 'because of'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/because and because of.mp4'
                video.state ='play'

        if checker == 'being'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/being.mp4'
                video.state ='play'

        if checker == 'had better'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/should ought to had better.mp4'
                video.state ='play'

        if checker == 'like'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/like.mp4'
                video.state ='play'

        if checker == 'comparing adverbs'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/comparing adverbs.mp4'
                video.state ='play'

        if checker == 'the more'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/advanced/double comparatives.mp4'
                video.state ='play'

        if checker == 'be able to'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/be able to.mp4'
                video.state ='play'

        if checker == 'even if'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/using the word even even so even though even if even as.mp4'
                video.state ='play'

        if checker == 'inversion'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/inversion.mp4'
                video.state ='play' 

        if checker == 'would better'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/i would better i would better not.mp4'
                video.state ='play'

        if checker == 'participle adjectives'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/participle adjectives.mp4'
                video.state ='play'

        if checker == 'using of'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prepositions of and from.mp4'
                video.state ='play'

        if checker == 'prepositions in-on-at'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prepositions in-on-at.mp4'
                video.state ='play'

        if checker == 'good at'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/good at.mp4'
                video.state ='play'

        if checker == 'preposition from'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/prepositions of and from.mp4'
                video.state ='play'

        if checker == 'did'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/beginner/negative form of do not does not and did not.mp4'
                video.state ='play'

        if checker == 'question tag irregular'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/question tag irregular.mp4'
                video.state ='play'

        if checker == 'perfect modals could have should have would have must have'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/perfect modals could have should have would have must have.mp4'
                video.state ='play'

        if checker == 'distributives'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/distributives.mp4'
                video.state ='play'

        if checker == 'future continuous'.strip(): # already a string
                video = self.ids.v2
                video.source ='videos/intermediate/future continuous.mp4'
                video.state ='play'
            


















        

        

        
        

        

        

        

        

        
          
class ArabicText(Screen):
    def on_pre_enter(self, *args):
        if translatedfile== "listening/newspaper.txt":
            a = codecs.open(r'arabic/newspaper and magazine.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(a))
        
        
        if translatedfile== "listening/a practical skill.txt":
            b = codecs.open(r'arabic/a practical skill.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(b))
            
        
        if translatedfile== "listening/presents.txt":
            c = codecs.open(r'arabic/present.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(c))
            
            
            
        if translatedfile== "listening/favourite rooms.txt":
            d = codecs.open(r'arabic/favourite room.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(d))
            
            
        if translatedfile== "listening/historical places.txt":
            e = codecs.open(r'arabic/historical places.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(e))
            
            
        if translatedfile== "listening/sports.txt":
            f = codecs.open(r'arabic/general sports.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(f))
            
            
        if translatedfile== "listening/a school.txt":
            g = codecs.open(r'arabic/a school.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(g))
            
            
        if translatedfile== "listening/festival.txt":
            h = codecs.open(r'arabic/festival.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(h))
            
            
        if translatedfile== "listening/resaurant.txt":
            i = codecs.open(r'arabic/restaurant.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(i))
            
        if translatedfile== "listening/holiday.txt":
            j = codecs.open(r'arabic/holiday.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(j))
            
            
        if translatedfile== "listening/website.txt":
            k = codecs.open(r'arabic/website.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(k))
            
            
        if translatedfile== "listening/travel.txt":
            l = codecs.open(r'arabic/travel.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(l))
            
        if translatedfile== "listening/books.txt":
            m = codecs.open(r'arabic/books.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(m))
            
            
        if translatedfile== "listening/accident.txt":
            n = codecs.open(r'arabic/accident.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(n))
            
            
        if translatedfile== "listening/animals.txt":
            o = codecs.open(r'arabic/animals.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(o))
            
            
        if translatedfile== "listening/a hotel.txt":
            p = codecs.open(r'arabic/a hotel.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(p))
            
            
        if translatedfile== "listening/a letter.txt":
            q = codecs.open(r'arabic/a letter.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(q))
            
            
        if translatedfile== "listening/hobbies.txt":
            r = codecs.open(r'arabic/hobbies.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(r))
            
        if translatedfile== "listening/music.txt":
            t = codecs.open(r'arabic/animals.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(t))
        
        
        
        if translatedfile== "listening/shopping.txt":
            u = codecs.open(r'arabic/shopping.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(u))
            
            
        if translatedfile== "listening/memorable event.txt":
            v = codecs.open(r'arabic/memorable event.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(v))
            
        if translatedfile== "listening/favorite subject.txt":
            w = codecs.open(r'arabic/favorite subject.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(w))
            
            
        if translatedfile== "listening/museums.txt":
            x = codecs.open(r'arabic/museums.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x))
            
        if translatedfile== "listening/movie.txt":
            y = codecs.open(r'arabic/movie theater.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(y))
            
            
        if translatedfile== "listening/a foreign country.txt":
            z = codecs.open(r'arabic/foreign country.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(z))
            
            
        if translatedfile== "listening/parties.txt":
            aa = codecs.open(r'arabic/parties.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(aa))
            
        if translatedfile== "listening/a teacher.txt":
            bb = codecs.open(r'arabic/a teacher.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(bb))
            
            
        if translatedfile== "listening/a friend.txt":
            cc = codecs.open(r'arabic/a friend.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(cc))
            
            
        if translatedfile== "listening-intermediate/lesson#01.txt":
            dd = codecs.open(r'arabic/favorite things.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(dd))
            
        if translatedfile== "listening-intermediate/lesson#02.txt":
            ee = codecs.open(r'arabic/activity.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(ee))
            
            
        if translatedfile== "listening-intermediate/lesson#03.txt":
            ff = codecs.open(r'arabic/working out.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(ff))
            
        
        if translatedfile== "listening-intermediate/lesson#04.txt":
            gg = codecs.open(r'arabic/introductions.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(gg))
            
            
        if translatedfile== "listening-intermediate/lesson#05.txt":
            hh = codecs.open(r'arabic/registering for class.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(hh))
            
            
        if translatedfile== "listening-intermediate/lesson#06.txt":
            ii = codecs.open(r'arabic/registering.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(ii))
            
            
            
        if translatedfile== "listening-intermediate/lesson#07.txt":
            jj = codecs.open(r'arabic/grades.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(jj))
            
        
        if translatedfile== "listening-intermediate/lesson#08.txt":
            kk = codecs.open(r'arabic/summer vacation.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(kk))
            
        
        if translatedfile== "listening-intermediate/lesson#09.txt":
            ll = codecs.open(r'arabic/exams.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(ll))
            
            
        if translatedfile== "listening-intermediate/lesson#10.txt":
            mm = codecs.open(r'arabic/smoking.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(mm))
            
        if translatedfile== "listening-intermediate/lesson#11.txt":
            nn = codecs.open(r'arabic/drinking.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(nn))
            
            
        if translatedfile== "listening-intermediate/lesson#12.txt":
            oo = codecs.open(r'arabic/after birth.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(oo))
            
            
        if translatedfile== "listening-intermediate/lesson#13.txt":
            pp = codecs.open(r'arabic/alleries.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(pp))
            
            
        if translatedfile== "listening-intermediate/lesson#14.txt":
            qq = codecs.open(r'arabic/losing weight.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(qq))
            
        if translatedfile== "listening-intermediate/lesson#15.txt":
            rr = codecs.open(r'arabic/dieting.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(rr))
            
            
        if translatedfile== "listening-intermediate/lesson#16.txt":
            ss = codecs.open(r'arabic/asking for a date.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(ss))
            
        
        if translatedfile== "listening-intermediate/lesson#17.txt":
            tt = codecs.open(r'arabic/proposing.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(tt))
            
            
        if translatedfile== "listening-intermediate/lesson#18.txt":
            uu = codecs.open(r'arabic/baseball.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(uu))
            
            
        if translatedfile== "listening-intermediate/lesson#19.txt":
            vv = codecs.open(r'arabic/general sports.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(vv))
            
            
            
        if translatedfile== "listening-intermediate/lesson#20.txt":
            ww = codecs.open(r'arabic/golf.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(ww))
            
            
        if translatedfile== "listening-intermediate/lesson#21.txt":
            xx = codecs.open(r'arabic/mall shopping.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(xx))
            
            
        if translatedfile== "listening-intermediate/lesson#23.txt":
            yy = codecs.open(r'arabic/jewelry gift.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(yy))
            
        
        if translatedfile== "listening-intermediate/lesson#24.txt":
            zz = codecs.open(r'arabic/jewelry.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(zz))
            
            
        if translatedfile== "listening-intermediate/lesson#25.txt":
            x1 = codecs.open(r'arabic/jewelry watch.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x1))
            
            
        if translatedfile== "listening-intermediate/lesson#26.txt":
            x2 = codecs.open(r'arabic/having a baby.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x2))
            
            
        if translatedfile== "listening-intermediate/lesson#27.txt":
            x3 = codecs.open(r'arabic/sick dad.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x3))
            
        if translatedfile== "listening-intermediate/lesson#28.txt":
            x4 = codecs.open(r'arabic/stressful parents.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x4))
            
            
        if translatedfile== "listening-intermediate/lesson#29.txt":
            x5 = codecs.open(r'arabic/grandmother passing away.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x5))
            
            
        if translatedfile== "listening-advanced/lesson#01.txt":
            x6 = codecs.open(r'arabic/university conversation.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x6))
            
        
        
        if translatedfile== "listening-advanced/lesson#02.txt":
            x7 = codecs.open(r'arabic/studying for exam.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x7))
            
            
        if translatedfile== "listening-advanced/lesson#03.txt":
            x8 = codecs.open(r'arabic/roommates.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x8))
            
            
        if translatedfile== "listening-advanced/lesson#04.txt":
            x9 = codecs.open(r'arabic/dormitory.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x9))
            
            
        if translatedfile== "listening-advanced/lesson#05.txt":
            x10 = codecs.open(r'arabic/renting a room.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x10))
        
        
        
        
        if translatedfile== "listening-intermediate/lesson#10.txt":
            x11 = codecs.open(r'arabic/smoking.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x11))
            
            
        if translatedfile== "listening-advanced/lesson#07.txt":
            x12 = codecs.open(r'arabic/running into a friend.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x12))
            
            
            
        if translatedfile== "listening-advanced/lesson#08.txt":
            x13 = codecs.open(r'arabic/small talk.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x13))
            
            
        if translatedfile== "listening-advanced/lesson#09.txt":
            x14 = codecs.open(r'arabic/hang out.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x14))
            
            
        if translatedfile== "listening-advanced/lesson#10.txt":
            x15 = codecs.open(r'arabic/first date.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x15))
            
            
        if translatedfile== "listening-advanced/lesson#11.txt":
            x16 = codecs.open(r'arabic/honeymoon planning.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x16))
            
            
        if translatedfile== "listening-advanced/lesson#13.txt":
            x17 = codecs.open(r'arabic/weight loss.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x17))
            
            
            
        if translatedfile== "listening-advanced/lesson#14.txt":
            x18 = codecs.open(r'arabic/marriage proposal.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x18))
            
            
        if translatedfile== "listening-advanced/lesson#15.txt":
            x19 = codecs.open(r'arabic/watching baseball.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x19))
            
            
        if translatedfile== "listening-advanced/lesson#17.txt":
            x20 = codecs.open(r'arabic/watching football.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x20))
            
            
        if translatedfile== "listening-advanced/lesson#18.txt":
            x21 = codecs.open(r'arabic/poker.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x21))
            
            
        if translatedfile== "listening-advanced/lesson#19.txt":
            x22 = codecs.open(r'arabic/talking about guys.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x22))
            
            
        if translatedfile== "listening-advanced/lesson#20.txt":
            x23 = codecs.open(r'arabic/practicing golf.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x23))
            
        if translatedfile== "listening-advanced/lesson#21.txt":
            x24 = codecs.open(r'arabic/favorite hobby.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x24))
            
            
        if translatedfile== "listening-advanced/lesson#22.txt":
            x25 = codecs.open(r'arabic/life after breaking up.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x25))
        
        
        if translatedfile== "listening-advanced/lesson#23.txt":
            x26 = codecs.open(r'arabic/heart broken.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x26))
        
        
        if translatedfile== "listening-advanced/lesson#24.txt":
            x27 = codecs.open(r'arabic/being afraid.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x27))
            
        if translatedfile== "listening-advanced/lesson#25.txt":
            x28 = codecs.open(r'arabic/restless.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x28))
            
            
        if translatedfile== "listening-advanced/lesson#26.txt":
            x29 = codecs.open(r'arabic/infatuation.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x29))
            
            
        if translatedfile== "listening-advanced/lesson#27.txt":
            x30 = codecs.open(r'arabic/class friend.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x30))
            
            
        if translatedfile== "listening-advanced/lesson#28.txt":
            x31 = codecs.open(r'arabic/general.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x31))
            
            
        if translatedfile== "listening-advanced/lesson#29.txt":
            x32 = codecs.open(r'arabic/joining health club.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x32))
            
            
        if translatedfile== "listening-advanced/lesson#31.txt":
            x33 = codecs.open(r'arabic/watching basketball.txt',encoding='utf-8').read()
            self.ids.myarab.multiline = True
            self.ids.myarab.text = get_display(arabic_reshaper.reshape(x33))
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
class ArabicText1(Screen):
    def on_pre_enter(self, *args):
        if translatedfile1== "listening/newspaper.txt":
            a = codecs.open(r'arabic/newspaper and magazine.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(a))
        
        
        if translatedfile1== "listening/a practical skill.txt":
            b = codecs.open(r'arabic/a practical skill.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(b))
            
        
        if translatedfile1== "listening/presents.txt":
            c = codecs.open(r'arabic/present.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(c))
            
            
            
        if translatedfile1== "listening/favourite rooms.txt":
            d = codecs.open(r'arabic/favourite room.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(d))
            
            
        if translatedfile1== "listening/historical places.txt":
            e = codecs.open(r'arabic/historical places.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(e))
            
            
        if translatedfile1== "listening/sports.txt":
            f = codecs.open(r'arabic/general sports.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(f))
            
            
        if translatedfile1== "listening/a school.txt":
            g = codecs.open(r'arabic/a school.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(g))
            
            
        if translatedfile1== "listening/festival.txt":
            h = codecs.open(r'arabic/festival.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(h))
            
            
        if translatedfile1== "listening/resaurant.txt":
            i = codecs.open(r'arabic/restaurant.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(i))
            
        if translatedfile1== "listening/holiday.txt":
            j = codecs.open(r'arabic/holiday.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(j))
            
            
        if translatedfile1== "listening/website.txt":
            k = codecs.open(r'arabic/website.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(k))
            
            
        if translatedfile1== "listening/travel.txt":
            l = codecs.open(r'arabic/travel.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(l))
            
        if translatedfile1== "listening/books.txt":
            m = codecs.open(r'arabic/books.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(m))
            
            
        if translatedfile1== "listening/accident.txt":
            n = codecs.open(r'arabic/accident.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(n))
            
            
        if translatedfile1== "listening/animals.txt":
            o = codecs.open(r'arabic/animals.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(o))
            
            
        if translatedfile1== "listening/a hotel.txt":
            p = codecs.open(r'arabic/a hotel.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(p))
            
            
        if translatedfile1== "listening/a letter.txt":
            q = codecs.open(r'arabic/a letter.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(q))
            
            
        if translatedfile1== "listening/hobbies.txt":
            r = codecs.open(r'arabic/hobbies.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(r))
            
        if translatedfile1== "listening/music.txt":
            t = codecs.open(r'arabic/animals.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(t))
        
        
        
        if translatedfile1== "listening/shopping.txt":
            u = codecs.open(r'arabic/shopping.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(u))
            
            
        if translatedfile1== "listening/memorable event.txt":
            v = codecs.open(r'arabic/memorable event.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(v))
            
        if translatedfile1== "listening/favorite subject.txt":
            w = codecs.open(r'arabic/favorite subject.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(w))
            
            
        if translatedfile1== "listening/museums.txt":
            x = codecs.open(r'arabic/museums.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x))
            
        if translatedfile1== "listening/movie.txt":
            y = codecs.open(r'arabic/movie theater.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(y))
            
            
        if translatedfile1== "listening/a foreign country.txt":
            z = codecs.open(r'arabic/foreign country.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(z))
            
            
        if translatedfile1== "listening/parties.txt":
            aa = codecs.open(r'arabic/parties.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(aa))
            
        if translatedfile1== "listening/a teacher.txt":
            bb = codecs.open(r'arabic/a teacher.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(bb))
            
            
        if translatedfile1== "listening/a friend.txt":
            cc = codecs.open(r'arabic/a friend.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(cc))
            
            
        if translatedfile1== "listening-intermediate/lesson#01.txt":
            dd = codecs.open(r'arabic/favorite things.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(dd))
            
        if translatedfile1== "listening-intermediate/lesson#02.txt":
            ee = codecs.open(r'arabic/activity.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(ee))
            
            
        if translatedfile1== "listening-intermediate/lesson#03.txt":
            ff = codecs.open(r'arabic/working out.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(ff))
            
        
        if translatedfile1== "listening-intermediate/lesson#04.txt":
            gg = codecs.open(r'arabic/introductions.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(gg))
            
            
        if translatedfile1== "listening-intermediate/lesson#05.txt":
            hh = codecs.open(r'arabic/registering for class.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(hh))
            
            
        if translatedfile1== "listening-intermediate/lesson#06.txt":
            ii = codecs.open(r'arabic/registering.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(ii))
            
            
            
        if translatedfile1== "listening-intermediate/lesson#07.txt":
            jj = codecs.open(r'arabic/grades.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(jj))
            
        
        if translatedfile1== "listening-intermediate/lesson#08.txt":
            kk = codecs.open(r'arabic/summer vacation.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(kk))
            
        
        if translatedfile1== "listening-intermediate/lesson#09.txt":
            ll = codecs.open(r'arabic/exams.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(ll))
            
            
        if translatedfile1== "listening-intermediate/lesson#10.txt":
            mm = codecs.open(r'arabic/smoking.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(mm))
            
        if translatedfile1== "listening-intermediate/lesson#11.txt":
            nn = codecs.open(r'arabic/drinking.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(nn))
            
            
        if translatedfile1== "listening-intermediate/lesson#12.txt":
            oo = codecs.open(r'arabic/after birth.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(oo))
            
            
        if translatedfile1== "listening-intermediate/lesson#13.txt":
            pp = codecs.open(r'arabic/alleries.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(pp))
            
            
        if translatedfile1== "listening-intermediate/lesson#14.txt":
            qq = codecs.open(r'arabic/losing weight.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(qq))
            
        if translatedfile1== "listening-intermediate/lesson#15.txt":
            rr = codecs.open(r'arabic/dieting.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(rr))
            
            
        if translatedfile1== "listening-intermediate/lesson#16.txt":
            ss = codecs.open(r'arabic/asking for a date.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(ss))
            
        
        if translatedfile1== "listening-intermediate/lesson#17.txt":
            tt = codecs.open(r'arabic/proposing.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(tt))
            
            
        if translatedfile1== "listening-intermediate/lesson#18.txt":
            uu = codecs.open(r'arabic/baseball.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(uu))
            
            
        if translatedfile1== "listening-intermediate/lesson#19.txt":
            vv = codecs.open(r'arabic/general sports.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(vv))
            
            
            
        if translatedfile1== "listening-intermediate/lesson#20.txt":
            ww = codecs.open(r'arabic/golf.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(ww))
            
            
        if translatedfile1== "listening-intermediate/lesson#21.txt":
            xx = codecs.open(r'arabic/mall shopping.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(xx))
            
            
        if translatedfile1== "listening-intermediate/lesson#23.txt":
            yy = codecs.open(r'arabic/jewelry gift.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(yy))
            
        
        if translatedfile1== "listening-intermediate/lesson#24.txt":
            zz = codecs.open(r'arabic/jewelry.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(zz))
            
            
        if translatedfile1== "listening-intermediate/lesson#25.txt":
            x1 = codecs.open(r'arabic/jewelry watch.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x1))
            
            
        if translatedfile1== "listening-intermediate/lesson#26.txt":
            x2 = codecs.open(r'arabic/having a baby.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x2))
            
            
        if translatedfile1== "listening-intermediate/lesson#27.txt":
            x3 = codecs.open(r'arabic/sick dad.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x3))
            
        if translatedfile1== "listening-intermediate/lesson#28.txt":
            x4 = codecs.open(r'arabic/stressful parents.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x4))
            
            
        if translatedfile1== "listening-intermediate/lesson#29.txt":
            x5 = codecs.open(r'arabic/grandmother passing away.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x5))
            
            
        if translatedfile1== "listening-advanced/lesson#01.txt":
            x6 = codecs.open(r'arabic/university conversation.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x6))
            
        
        
        if translatedfile1== "listening-advanced/lesson#02.txt":
            x7 = codecs.open(r'arabic/studying for exam.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x7))
            
            
        if translatedfile1== "listening-advanced/lesson#03.txt":
            x8 = codecs.open(r'arabic/roommates.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x8))
            
            
        if translatedfile1== "listening-advanced/lesson#04.txt":
            x9 = codecs.open(r'arabic/dormitory.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x9))
            
            
        if translatedfile1== "listening-advanced/lesson#05.txt":
            x10 = codecs.open(r'arabic/renting a room.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x10))
        
        
        
        
        if translatedfile1== "listening-intermediate/lesson#10.txt":
            x11 = codecs.open(r'arabic/smoking.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x11))
            
            
        if translatedfile1== "listening-advanced/lesson#07.txt":
            x12 = codecs.open(r'arabic/running into a friend.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x12))
            
            
            
        if translatedfile1== "listening-advanced/lesson#08.txt":
            x13 = codecs.open(r'arabic/small talk.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x13))
            
            
        if translatedfile1== "listening-advanced/lesson#09.txt":
            x14 = codecs.open(r'arabic/hang out.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x14))
            
            
        if translatedfile1== "listening-advanced/lesson#10.txt":
            x15 = codecs.open(r'arabic/first date.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x15))
            
            
        if translatedfile1== "listening-advanced/lesson#11.txt":
            x16 = codecs.open(r'arabic/honeymoon planning.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x16))
            
            
        if translatedfile1== "listening-advanced/lesson#13.txt":
            x17 = codecs.open(r'arabic/weight loss.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x17))
            
            
            
        if translatedfile1== "listening-advanced/lesson#14.txt":
            x18 = codecs.open(r'arabic/marriage proposal.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x18))
            
            
        if translatedfile1== "listening-advanced/lesson#15.txt":
            x19 = codecs.open(r'arabic/watching baseball.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x19))
            
            
        if translatedfile1== "listening-advanced/lesson#17.txt":
            x20 = codecs.open(r'arabic/watching football.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x20))
            
            
        if translatedfile1== "listening-advanced/lesson#18.txt":
            x21 = codecs.open(r'arabic/poker.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x21))
            
            
        if translatedfile1== "listening-advanced/lesson#19.txt":
            x22 = codecs.open(r'arabic/talking about guys.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x22))
            
            
        if translatedfile1== "listening-advanced/lesson#20.txt":
            x23 = codecs.open(r'arabic/practicing golf.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x23))
            
        if translatedfile1== "listening-advanced/lesson#21.txt":
            x24 = codecs.open(r'arabic/favorite hobby.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x24))
            
            
        if translatedfile1== "listening-advanced/lesson#22.txt":
            x25 = codecs.open(r'arabic/life after breaking up.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x25))
        
        
        if translatedfile1== "listening-advanced/lesson#23.txt":
            x26 = codecs.open(r'arabic/heart broken.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x26))
        
        
        if translatedfile1== "listening-advanced/lesson#24.txt":
            x27 = codecs.open(r'arabic/being afraid.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x27))
            
        if translatedfile1== "listening-advanced/lesson#25.txt":
            x28 = codecs.open(r'arabic/restless.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x28))
            
            
        if translatedfile1== "listening-advanced/lesson#26.txt":
            x29 = codecs.open(r'arabic/infatuation.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x29))
            
            
        if translatedfile1== "listening-advanced/lesson#27.txt":
            x30 = codecs.open(r'arabic/class friend.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x30))
            
            
        if translatedfile1== "listening-advanced/lesson#28.txt":
            x31 = codecs.open(r'arabic/general.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x31))
            
            
        if translatedfile1== "listening-advanced/lesson#29.txt":
            x32 = codecs.open(r'arabic/joining health club.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x32))
            
            
        if translatedfile1== "listening-advanced/lesson#31.txt":
            x33 = codecs.open(r'arabic/watching basketball.txt',encoding='utf-8').read()
            self.ids.myarab1.multiline = True
            self.ids.myarab1.text = get_display(arabic_reshaper.reshape(x33))
            
            
        
        
        
        
        
        
        
class ArabicText2(Screen):
    def on_pre_enter(self, *args):
        if translatedfile2== "listening/newspaper.txt":
            a = codecs.open(r'arabic/newspaper and magazine.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(a))
        
        
        if translatedfile2== "listening/a practical skill.txt":
            b = codecs.open(r'arabic/a practical skill.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(b))
            
        
        if translatedfile2== "listening/presents.txt":
            c = codecs.open(r'arabic/present.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(c))
            
            
            
        if translatedfile2== "listening/favourite rooms.txt":
            d = codecs.open(r'arabic/favourite room.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(d))
            
            
        if translatedfile2== "listening/historical places.txt":
            e = codecs.open(r'arabic/historical places.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(e))
            
            
        if translatedfile2== "listening/sports.txt":
            f = codecs.open(r'arabic/general sports.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(f))
            
            
        if translatedfile2== "listening/a school.txt":
            g = codecs.open(r'arabic/a school.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(g))
            
            
        if translatedfile2== "listening/festival.txt":
            h = codecs.open(r'arabic/festival.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(h))
            
            
        if translatedfile2== "listening/resaurant.txt":
            i = codecs.open(r'arabic/restaurant.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(i))
            
        if translatedfile2== "listening/holiday.txt":
            j = codecs.open(r'arabic/holiday.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(j))
            
            
        if translatedfile2== "listening/website.txt":
            k = codecs.open(r'arabic/website.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(k))
            
            
        if translatedfile2== "listening/travel.txt":
            l = codecs.open(r'arabic/travel.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(l))
            
        if translatedfile2== "listening/books.txt":
            m = codecs.open(r'arabic/books.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(m))
            
            
        if translatedfile2== "listening/accident.txt":
            n = codecs.open(r'arabic/accident.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(n))
            
            
        if translatedfile2== "listening/animals.txt":
            o = codecs.open(r'arabic/animals.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(o))
            
            
        if translatedfile2== "listening/a hotel.txt":
            p = codecs.open(r'arabic/a hotel.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(p))
            
            
        if translatedfile2== "listening/a letter.txt":
            q = codecs.open(r'arabic/a letter.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(q))
            
            
        if translatedfile2== "listening/hobbies.txt":
            r = codecs.open(r'arabic/hobbies.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(r))
            
        if translatedfile2== "listening/music.txt":
            t = codecs.open(r'arabic/animals.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(t))
        
        
        
        if translatedfile2== "listening/shopping.txt":
            u = codecs.open(r'arabic/shopping.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(u))
            
            
        if translatedfile2== "listening/memorable event.txt":
            v = codecs.open(r'arabic/memorable event.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(v))
            
        if translatedfile2== "listening/favorite subject.txt":
            w = codecs.open(r'arabic/favorite subject.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(w))
            
            
        if translatedfile2== "listening/museums.txt":
            x = codecs.open(r'arabic/museums.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x))
            
        if translatedfile2== "listening/movie.txt":
            y = codecs.open(r'arabic/movie theater.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(y))
            
            
        if translatedfile2== "listening/a foreign country.txt":
            z = codecs.open(r'arabic/foreign country.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(z))
            
            
        if translatedfile2== "listening/parties.txt":
            aa = codecs.open(r'arabic/parties.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(aa))
            
        if translatedfile2== "listening/a teacher.txt":
            bb = codecs.open(r'arabic/a teacher.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(bb))
            
            
        if translatedfile2== "listening/a friend.txt":
            cc = codecs.open(r'arabic/a friend.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(cc))
            
            
        if translatedfile2== "listening-intermediate/lesson#01.txt":
            dd = codecs.open(r'arabic/favorite things.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(dd))
            
        if translatedfile2== "listening-intermediate/lesson#02.txt":
            ee = codecs.open(r'arabic/activity.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(ee))
            
            
        if translatedfile2== "listening-intermediate/lesson#03.txt":
            ff = codecs.open(r'arabic/working out.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(ff))
            
        
        if translatedfile2== "listening-intermediate/lesson#04.txt":
            gg = codecs.open(r'arabic/introductions.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(gg))
            
            
        if translatedfile2== "listening-intermediate/lesson#05.txt":
            hh = codecs.open(r'arabic/registering for class.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(hh))
            
            
        if translatedfile2== "listening-intermediate/lesson#06.txt":
            ii = codecs.open(r'arabic/registering.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(ii))
            
            
            
        if translatedfile2== "listening-intermediate/lesson#07.txt":
            jj = codecs.open(r'arabic/grades.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(jj))
            
        
        if translatedfile2== "listening-intermediate/lesson#08.txt":
            kk = codecs.open(r'arabic/summer vacation.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(kk))
            
        
        if translatedfile2== "listening-intermediate/lesson#09.txt":
            ll = codecs.open(r'arabic/exams.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(ll))
            
            
        if translatedfile2== "listening-intermediate/lesson#10.txt":
            mm = codecs.open(r'arabic/smoking.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(mm))
            
        if translatedfile2== "listening-intermediate/lesson#11.txt":
            nn = codecs.open(r'arabic/drinking.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(nn))
            
            
        if translatedfile2== "listening-intermediate/lesson#12.txt":
            oo = codecs.open(r'arabic/after birth.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(oo))
            
            
        if translatedfile2== "listening-intermediate/lesson#13.txt":
            pp = codecs.open(r'arabic/alleries.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(pp))
            
            
        if translatedfile2== "listening-intermediate/lesson#14.txt":
            qq = codecs.open(r'arabic/losing weight.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(qq))
            
        if translatedfile2== "listening-intermediate/lesson#15.txt":
            rr = codecs.open(r'arabic/dieting.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(rr))
            
            
        if translatedfile2== "listening-intermediate/lesson#16.txt":
            ss = codecs.open(r'arabic/asking for a date.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(ss))
            
        
        if translatedfile2== "listening-intermediate/lesson#17.txt":
            tt = codecs.open(r'arabic/proposing.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(tt))
            
            
        if translatedfile2== "listening-intermediate/lesson#18.txt":
            uu = codecs.open(r'arabic/baseball.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(uu))
            
            
        if translatedfile2== "listening-intermediate/lesson#19.txt":
            vv = codecs.open(r'arabic/general sports.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(vv))
            
            
            
        if translatedfile2== "listening-intermediate/lesson#20.txt":
            ww = codecs.open(r'arabic/golf.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(ww))
            
            
        if translatedfile2== "listening-intermediate/lesson#21.txt":
            xx = codecs.open(r'arabic/mall shopping.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(xx))
            
            
        if translatedfile2== "listening-intermediate/lesson#23.txt":
            yy = codecs.open(r'arabic/jewelry gift.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(yy))
            
        
        if translatedfile2== "listening-intermediate/lesson#24.txt":
            zz = codecs.open(r'arabic/jewelry.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(zz))
            
            
        if translatedfile2== "listening-intermediate/lesson#25.txt":
            x1 = codecs.open(r'arabic/jewelry watch.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x1))
            
            
        if translatedfile2== "listening-intermediate/lesson#26.txt":
            x2 = codecs.open(r'arabic/having a baby.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x2))
            
            
        if translatedfile2== "listening-intermediate/lesson#27.txt":
            x3 = codecs.open(r'arabic/sick dad.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x3))
            
        if translatedfile2== "listening-intermediate/lesson#28.txt":
            x4 = codecs.open(r'arabic/stressful parents.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x4))
            
            
        if translatedfile2== "listening-intermediate/lesson#29.txt":
            x5 = codecs.open(r'arabic/grandmother passing away.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x5))
            
            
        if translatedfile2== "listening-advanced/lesson#01.txt":
            x6 = codecs.open(r'arabic/university conversation.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x6))
            
        
        
        if translatedfile2== "listening-advanced/lesson#02.txt":
            x7 = codecs.open(r'arabic/studying for exam.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x7))
            
            
        if translatedfile2== "listening-advanced/lesson#03.txt":
            x8 = codecs.open(r'arabic/roommates.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x8))
            
            
        if translatedfile2== "listening-advanced/lesson#04.txt":
            x9 = codecs.open(r'arabic/dormitory.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x9))
            
            
        if translatedfile2== "listening-advanced/lesson#05.txt":
            x10 = codecs.open(r'arabic/renting a room.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x10))
        
        
        
        
        if translatedfile2== "listening-intermediate/lesson#10.txt":
            x11 = codecs.open(r'arabic/smoking.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x11))
            
            
        if translatedfile2== "listening-advanced/lesson#07.txt":
            x12 = codecs.open(r'arabic/running into a friend.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x12))
            
            
            
        if translatedfile2== "listening-advanced/lesson#08.txt":
            x13 = codecs.open(r'arabic/small talk.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x13))
            
            
        if translatedfile2== "listening-advanced/lesson#09.txt":
            x14 = codecs.open(r'arabic/hang out.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x14))
            
            
        if translatedfile2== "listening-advanced/lesson#10.txt":
            x15 = codecs.open(r'arabic/first date.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x15))
            
            
        if translatedfile2== "listening-advanced/lesson#11.txt":
            x16 = codecs.open(r'arabic/honeymoon planning.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x16))
            
            
        if translatedfile2== "listening-advanced/lesson#13.txt":
            x17 = codecs.open(r'arabic/weight loss.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x17))
            
            
            
        if translatedfile2== "listening-advanced/lesson#14.txt":
            x18 = codecs.open(r'arabic/marriage proposal.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x18))
            
            
        if translatedfile2== "listening-advanced/lesson#15.txt":
            x19 = codecs.open(r'arabic/watching baseball.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x19))
            
            
        if translatedfile2== "listening-advanced/lesson#17.txt":
            x20 = codecs.open(r'arabic/watching football.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x20))
            
            
        if translatedfile2== "listening-advanced/lesson#18.txt":
            x21 = codecs.open(r'arabic/poker.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x21))
            
            
        if translatedfile2== "listening-advanced/lesson#19.txt":
            x22 = codecs.open(r'arabic/talking about guys.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x22))
            
            
        if translatedfile2== "listening-advanced/lesson#20.txt":
            x23 = codecs.open(r'arabic/practicing golf.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x23))
            
        if translatedfile2== "listening-advanced/lesson#21.txt":
            x24 = codecs.open(r'arabic/favorite hobby.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x24))
            
            
        if translatedfile2== "listening-advanced/lesson#22.txt":
            x25 = codecs.open(r'arabic/life after breaking up.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x25))
        
        
        if translatedfile2== "listening-advanced/lesson#23.txt":
            x26 = codecs.open(r'arabic/heart broken.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x26))
        
        
        if translatedfile2== "listening-advanced/lesson#24.txt":
            x27 = codecs.open(r'arabic/being afraid.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x27))
            
        if translatedfile2== "listening-advanced/lesson#25.txt":
            x28 = codecs.open(r'arabic/restless.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x28))
            
            
        if translatedfile2== "listening-advanced/lesson#26.txt":
            x29 = codecs.open(r'arabic/infatuation.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x29))
            
            
        if translatedfile1== "listening-advanced/lesson#27.txt":
            x30 = codecs.open(r'arabic/class friend.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x30))
            
            
        if translatedfile2== "listening-advanced/lesson#28.txt":
            x31 = codecs.open(r'arabic/general.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x31))
            
            
        if translatedfile2== "listening-advanced/lesson#29.txt":
            x32 = codecs.open(r'arabic/joining health club.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x32))
            
            
        if translatedfile2== "listening-advanced/lesson#31.txt":
            x33 = codecs.open(r'arabic/watching basketball.txt',encoding='utf-8').read()
            self.ids.myarab2.multiline = True
            self.ids.myarab2.text = get_display(arabic_reshaper.reshape(x33))
            
            
            
            
class GramarPage(Screen):
    def play(self, text):
        
        audio_file = {'Verb To Be(is-am-are)': { 'file': 'grammarpage/verb to be.txt'},
                      'Present Continuous': {'file': 'grammarpage/present continuous.txt'},
                      'Present Simple': {'file': 'grammarpage/simple present tense.txt'},
                      'Future Simple': {'file': 'grammarpage/simple future tense.txt'},
                      'Past Simple': {'file': 'grammarpage/past simple.txt'},
                      'Was/Were': {'file': 'grammarpage/was and were.txt'},
                      'Has Got Have Got': {'file': 'grammarpage/has got and have got.txt'},
                      'Be + Going To': {'file': 'grammarpage/be going to.txt'},
                      'Auxiliary Verb May': {'file': 'grammarpage/may and might.txt'},
                      'Auxiliary Verb Might': {'file': 'grammarpage/may and might.txt'},
                      'Auxiliary Verb Can': {'file': 'grammarpage/can.txt'},
                      'Auxiliary Verb Could': {'file': 'grammarpage/could.txt'},
                      'Auxiliary Verb Must': {'file': 'grammarpage/must.txt'},
                      'Auxiliary Verb Should': {'file': 'grammarpage/should.txt'},
                      'Modal Verb Have To': {'file': 'grammarpage/have got to and have to.txt'},
                      'Would Like': {'file': 'grammarpage/would like.txt'},
                      'There Is/There Are': {'file': 'grammarpage/there is there are.txt'},
                      'There Was/There Were': {'file': 'grammarpage/there was there were.txt'},
                      'There Will Be': {'file': 'grammarpage/there will be.txt'},
                      'Using It': {'file': 'grammarpage/using it.txt'},
                      'Auxiliary Verbs Do/Does': {'file': 'grammarpage/do does and did.txt'},
                      'Auxiliary Verb Did': {'file': 'grammarpage/do does and did.txt'},
                      'Auxiliary Verb Used To': {'file': 'grammarpage/used to.txt'},
                      'Auxiliary Verb Ought To': {'file': 'grammarpage/ought to.txt'},
                     'Auxiliary Verb Been': {'file': 'grammarpage/be been and being.txt' },
                     'Too And Either': {'file': 'grammarpage/using too and either.txt'},
                     'Questions Using Who': {'file': 'grammarpage/who.txt'},
                     'Questions Using What': {'file': 'grammarpage/what.txt'},
                     'Questions Using Which': {'file': 'grammarpage/which.txt'},
                     'Questions Using How': {'file': 'grammarpage/how.txt'},
                     'How Old Are You': {'file': 'grammarpage/how old are you.txt'},
                     'How Long': {'file': 'grammarpage/how long.txt'},
                     'How Many And How Much': {'file': 'grammarpage/how much and how many.txt'},
                     'Countable And Uncountable Nouns': {'file': 'grammarpage/countable uncountable nouns.txt'},
                     'The Imperative': {'file': 'grammarpage/the imperative.txt'},
                    'Would You Mind': {'file': 'grammarpage/would you mind.txt' },
                    'Giving Strong Instructions': {'file': 'grammarpage/giving strong instructions.txt'},
                    'Narating Stories Reacting To Stories': {'file': 'grammarpage/narrating story and reacting to story.txt'},
                    'Transitive Intransitive Verbs': {'file': 'grammarpage/transitive-instransitive verbs.txt'},
                    'Want And Need': {'file': 'grammarpage/want vs need.txt'},
                    'Too Very And Enough': {'file': 'grammarpage/too very and enough.txt'},
                    'Telling Time': {'file': 'grammarpage/telling the time.txt'},
                    'Auxiliary Verbs Has Have': {'file': 'grammarpage/has and have.txt'},
                    'Auxiliary Verb Had': {'file': 'grammarpage/had.txt'},
                    'Genitive S': {'file': 'grammarpage/genitive.txt'},
                    'Stop And Try': {'file': 'grammarpage/stop and try.txt'},
                    'Some Any And No': {'file': 'grammarpage/some any and no.txt'},
                    'Linking Verbs': {'file': 'grammarpage/linking verbs.txt'},
                    'It Is Better-Would Better': {'file': 'grammarpage/would better.txt'},
                    'Comparison With As': {'file': 'grammarpage/comparative with as.txt'},
                    'Reflexive Pronouns': {'file': 'grammarpage/reflexive pronouns.txt'},
                    'Adjectives': {'file': 'grammarpage/adjectives.txt'},
                    'Prepositions In-On-At': {'file': 'grammarpage/at in on.txt'},
                    'Possessive Pronouns': {'file': 'grammarpage/possessive pronouns.txt'},
                    'Possessive Adjectives': {'file': 'grammarpage/possessive adjectives.txt'},
                    'Demonstrative Pronouns': {'file': 'grammarpage/demonstrative pronouns.txt'},
                    'Personal Pronouns': {'file': 'grammarpage/personal pronouns.txt'},
                    'Prefer Would Prefer': {'file': 'grammarpage/prefer and would prefer.txt'},
                    'Using Look For': {'file': 'grammarpage/look for.txt'},
                    'Using Like-Love-Prefer-Hate': {'file': 'grammarpage/like.txt'},
                   'Good At': {'file': 'grammarpage/good at.txt' },
                   'Giving And Responding To Good And Bad News': {'file': 'grammarpage/giving and responding to good and bad news.txt'},
                   'Exclamation': {'file': 'grammarpage/exclamation.txt'},
                   'Do vs Make': {'file': 'grammarpage/do vs make.txt'},
                   'Comparative And Superlative': {'file': 'grammarpage/comparative and superlative.txt'},
                   'Countable-Uncountable Nouns': {'file': 'grammarpage/countable uncountable nouns.txt'},
                   'Be Been And Being': {'file': 'grammarpage/be been and being.txt'},
                   'Have Got To': {'file': 'grammarpage/have got to and have to.txt'},
                   'Past Continuous': {'file': 'grammarpage/intermediate/past continuous.txt'},
                   'Will/Shall': {'file': 'grammarpage/will vs shall.txt'},
                   'Agreement Using So And Neither': {'file': 'grammarpage/intermediate/agreement using so and neither.txt'},
                  'Questions Using Why': {'file': 'grammarpage/why.txt' },
                  'Forming Questions': {'file': 'grammarpage/forming questions.txt'},
                  'Comparison Of Adverbs': {'file': 'grammarpage/intermediate/comparing adverbs.txt'},
                  'Adverbs Of Purpose': {'file': 'grammarpage/adverbs of purpose.txt'},
                 'So And Such': {'file': 'grammarpage/so and such.txt' },
                 'Quantifiers': {'file': 'grammarpage/quantifiers.txt'},
                 'Prepositions Of/From': {'file': 'grammarpage/preposition of and from.txt'},
                 'Preposition By': {'file': 'grammarpage/preposition by.txt'},
                 'Participle Adjectives': {'file': 'grammarpage/participle adjective.txt'},
                 'Order Of Adverbs': {'file': 'grammarpage/order of adverbs.txt'},
                 'Like Versus As': {'file': 'grammarpage/like vs as.txt'},
                'Less Versus Fewer': {'file': 'grammarpage/less vs fewer.txt' },
                'Prepositions For-With-About': {'file': 'grammarpage/for with about.txt'},
                'Few A Few / Little A Little': {'file': 'grammarpage/few a few little a little.txt'},
               'Either OR / Neither Nor': {'file': 'grammarpage/either or neither nor.txt' },
               'Definite Articles': {'file': 'grammarpage/definite article.txt'},
               'Causative Verbs': {'file': 'grammarpage/causative verbs.txt'},
               'Questions Using Whose': {'file': 'grammarpage/whose.txt'},
               'Preposition Between': {'file': 'grammarpage/between.txt'},
               'Adverbs of Frequency': {'file': 'grammarpage/adverbs of frequency.txt'},
               'Adverbs Of Time': {'file': 'grammarpage/adverbs of time.txt'},
               'Adverbs Of Place': {'file': 'grammarpage/adverbs of place.txt'},
               'Adverbs Of Manner': {'file': 'grammarpage/adverbs of manner.txt'},
               'Prepositions Above/Over': {'file': 'grammarpage/above and over.txt'},
               'Indirect Questions': {'file': 'grammarpage/intermediate/indirect question.txt'},
               'Indefinite Pronouns': {'file': 'grammarpage/indefinite pronouns.txt'},
              'Future Continuous': {'file': 'grammarpage/intermediate/future continuous.txt' },
             'Prepositions Across-Through-Along': {'file': 'grammarpage/intermediate/across through along.txt' },
             'At The End Versus In The End': {'file': 'grammarpage/intermediate/at the end vs in the end.txt'},
             'As Soon As': {'file': 'grammarpage/intermediate/as soon as.txt'},
             'Adjectives With Too And Very': {'file': 'grammarpage/too very and enough.txt'},
             'Using Less': {'file': 'grammarpage/less vs fewer.txt'},
             'Another Other And Others': {'file': 'grammarpage/intermediate/other others and another.txt'},
             'Using Without': {'file': 'grammarpage/intermediate/without.txt'},
            'Using Hope': {'file': 'grammarpage/intermediate/hope vs wish.txt' },
            'Expressing Purpose': {'file': 'grammarpage/intermediate/expressing purpose.txt'},
           'As Much As / As Many As': {'file': 'grammarpage/intermediate/as much as as many as.txt' },
           'Preposition Into': {'file': 'grammarpage/prepositions in and into.txt'},
          'Using How About / What About': {'file': 'grammarpage/intermediate/how about what about.txt'},
          'Look Forward To': {'file': 'grammarpage/intermediate/look forward to.txt'},
          'Using Unless': {'file': 'grammarpage/intermediate/unless.txt'},
          'Participles': {'file': 'grammarpage/intermediate/participle.txt'},
          'Wh Questions Present Simple': {'file': 'grammarpage/wh questions present simple.txt'},
          'Negative Questions': {'file': 'grammarpage/intermediate/negative question.txt'},
          'Each Other Versus One Another': {'file': 'grammarpage/intermediate/each other and one another.txt'},
          'Present Perfect': {'file': 'grammarpage/intermediate/present perfect.txt'},
          'Will Versus Going To': {'file': 'grammarpage/will vs going to.txt'},
          'Infinitive': {'file': 'grammarpage/infinitive.txt'},
          'Gerund': {'file': 'grammarpage/intermediate/gerund.txt'},
          'Using A Lot / Lots': {'file': 'grammarpage/a lot lots.txt'},
          'Using Still And Yet': {'file': 'grammarpage/still and yet.txt'},
          'Using During And While': {'file': 'grammarpage/during and while.txt'},
          'First Conditional': {'file': 'grammarpage/first conditional.txt'},
          'Zero Conditional': {'file': 'grammarpage/intermediate/zero conditional.txt'},
          'Second Conditional': {'file': 'grammarpage/intermediate/second conditional.txt'},
          'Third Conditional': {'file': 'grammarpage/intermediate/third conditional.txt'},
          'Mixed Conditional': {'file': 'grammarpage/intermediate/mixed conditional.txt'},
          'Past Perfect': {'file': 'grammarpage/intermediate/past perfect.txt'},
          'Past Perfect Continuous': {'file': 'grammarpage/intermediate/past perfect continuous tense.txt'},
          'Future Perfect': {'file': 'grammarpage/intermediate/future perfect.txt'},
          'Future Perfect Continuous': {'file': 'grammarpage/future perfect continuous.txt'},
          'A pair Of': {'file': 'grammarpage/intermediate/a pair of.txt'},
         'Adjective Word Order': {'file': 'grammarpage/intermediate/adjective word order.txt' },
         'Be Used To / Get Used To': {'file': 'grammarpage/intermediate/be used to and get used to.txt'},
         'Using Wish': {'file': 'grammarpage/intermediate/wish.txt'},
         'Has Been / Have Been / Had Been': {'file': 'grammarpage/intermediate/has been have been had been.txt'},
         'Relative Pronouns': {'file': 'grammarpage/intermediate/relative pronouns.txt'},
         'Question Tag': {'file': 'grammarpage/intermediate/tag questions.txt'},
        'Using Whatever': {'file': 'grammarpage/intermediate/whatever whichever.txt' },
        'So That / Such That': {'file': 'grammarpage/intermediate/so that such that.txt'},
        'Order Of Adverbs': {'file': 'grammarpage/order of adverbs.txt'},
        'Past Simple Passive': {'file': 'grammarpage/intermediate/past simple passive.txt'},
        'Using Had Better': {'file': 'grammarpage/intermediate/had better would rather.txt'},
       'Using Keep': {'file': 'grammarpage/intermediate/keep.txt' },
       'Using So That': {'file': 'grammarpage/intermediate/so that in order that.txt'},
       'Using Instead': {'file': 'grammarpage/intermediate/instead of vs instead.txt'},
      'Because And Because Of': {'file': 'grammarpage/intermediate/because of and because.txt' },
      'Using Would Rather': {'file': 'grammarpage/intermediate/had better would rather.txt'},
      'Auxiliary Verb Would': {'file': 'grammarpage/intermediate/would.txt'},
      'Was Used + ING': {'file': 'grammarpage/intermediate/be used to and get used to.txt'},
      'Have Something Done': {'file': 'grammarpage/intermediate/have something done.txt'},
      'Perfect Modal Could Have/Should Have/Would Have/Must Have': {'file': 'grammarpage/intermediate/perfect modals.txt'},
      'Subjunctive': {'file': 'grammarpage/intermediate/subjunctive.txt'},
      'Passive Voice': {'file': 'grammarpage/intermediate/passive voice.txt'},
      'Question Tag Irregular': {'file': 'grammarpage/intermediate/question tag irregular.txt'},
      'How To Count Uncountable Nouns': {'file': 'grammarpage/intermediate/how to count uncountable nouns.txt'},
      'Parallel Structure': {'file': 'grammarpage/parallel structure.txt'},
      'Not Only But Also': {'file': 'grammarpage/intermediate/not only but also.txt'},
      'Inversion': {'file': 'grammarpage/intermediate/inversion.txt'},
      'Reported Speech Statement Question': {'file': 'grammarpage/intermediate/reported speech statement questions.txt'},
      'Although And Even Though': {'file': 'grammarpage/intermediate/although even though though despite.txt'},
      'Future Simple Passive': {'file': 'grammarpage/intermediate/future simple passive.txt'},
      'Future Continuous Passive': {'file': 'grammarpage/intermediate/future continuous passive.txt'},
      'Future Perfect Passive': {'file': 'grammarpage/intermediate/future perfect passive.txt'},
      'Expressions Used With Gerund': {'file': 'grammarpage/intermediate/expressions followed by the gerund.txt'},
      'Perfect Modal': {'file': 'grammarpage/intermediate/perfect modals.txt'},
      'Modals Continuous': {'file': 'grammarpage/intermediate/modal continuous.txt'},
      'Present Perfect Vs Past Perfect': {'file': 'grammarpage/intermediate/present perfect vs past perfect.txt'},
      'Adjectives And Prepositions Combinations': {'file': 'grammarpage/intermediate/adjective preposition combination.txt'},
      'As If As Though': {'file': 'grammarpage/intermediate/as if as though.txt'},
      'Passive With Modal': {'file': 'grammarpage/intermediate/passive with modals.txt'},
      'Verbs Used With Gerund': {'file': 'grammarpage/intermediate/verbs followed by gerund.txt'},
      'Nevertheless': {'file': 'grammarpage/intermediate/nevertheless however moreover.txt'},
      'Restrictive And Non-Restrictive Clause': {'file': 'grammarpage/intermediate/restrictive and non-restrictive clause.txt'},
      'Subject Verb Agreement': {'file': 'grammarpage/intermediate/subject verb agreement advanced.txt'},
      'Noun Clause': {'file': 'grammarpage/intermediate/noun clause.txt'},
      'Which Versus That': {'file': 'grammarpage/intermediate/which vs that.txt'},
      'Be Supposed To': {'file': 'grammarpage/intermediate/supposed to.txt'},
      'Be To + Infinitive': {'file': 'grammarpage/intermediate/be to + infinitive.txt'},
      'Confusing Pronouns': {'file': 'grammarpage/intermediate/confusing pronouns none of most of.txt'},
      'Linking Words': {'file': 'grammarpage/intermediate/linking words.txt'},
      'Passive Reporting Structure': {'file': 'grammarpage/intermediate/passive reporting structure.txt'},
      'Present Perfect Continuous Passive': {'file': 'grammarpage/intermediate/present perfect continuous passive.txt'},
      'Past Perfect Continuous Passive': {'file': 'grammarpage/intermediate/past perfect continuous passive.txt'},
      'Future Perfect Continuous Passive': {'file': 'grammarpage/intermediate/future perfect continuous passive.txt'},
      'Independent And Dependent Clause': {'file': 'grammarpage/intermediate/independent and dependent clause.txt'},
      'Future In The Past': {'file': 'grammarpage/intermediate/future in the past.txt'},
      'Changing Question Into Passive': {'file': 'grammarpage/intermediate/change interogative sentence into passive voice.txt'},
      'Independent And Dependent Clause': {'file': 'grammarpage/intermediate/independent and dependent clause.txt'},
      'Changing Passive Voice Into Active Voice': {'file': 'grammarpage/intermediate/change passive voice into active voice.txt'},
      'The Number Of vs A Number Of': {'file': 'grammarpage/intermediate/a number of vs number of.txt'},
      'Embedded Questions': {'file': 'grammarpage/intermediate/embedded questions.txt'}}
        file = audio_file[text]['file']
        p= codecs.open(file,"r",encoding='utf-8').read()
            
        self.ids.page.text = get_display(arabic_reshaper.reshape(p))
            
        
         
















class GramarPage1(Screen):
    def play(self, text):
        
        audio_file = {'Verb To Be(is-am-are)': { 'file': 'grammarpage/verb to be.txt'},
                      'Present Continuous': {'file': 'grammarpage/present continuous.txt'},
                      'Present Simple': {'file': 'grammarpage/simple present tense.txt'},
                      'Future Simple': {'file': 'grammarpage/simple future tense.txt'},
                      'Past Simple': {'file': 'grammarpage/past simple.txt'},
                      'Was/Were': {'file': 'grammarpage/was and were.txt'},
                      'Has Got Have Got': {'file': 'grammarpage/has got and have got.txt'},
                      'Be + Going To': {'file': 'grammarpage/be going to.txt'},
                      'Auxiliary Verb May': {'file': 'grammarpage/may and might.txt'},
                      'Auxiliary Verb Might': {'file': 'grammarpage/may and might.txt'},
                      'Auxiliary Verb Can': {'file': 'grammarpage/can.txt'},
                      'Auxiliary Verb Could': {'file': 'grammarpage/could.txt'},
                      'Auxiliary Verb Must': {'file': 'grammarpage/must.txt'},
                      'Auxiliary Verb Should': {'file': 'grammarpage/should.txt'},
                      'Modal Verb Have To': {'file': 'grammarpage/have got to and have to.txt'},
                      'Would Like': {'file': 'grammarpage/would like.txt'},
                      'There Is/There Are': {'file': 'grammarpage/there is there are.txt'},
                      'There Was/There Were': {'file': 'grammarpage/there was there were.txt'},
                      'There Will Be': {'file': 'grammarpage/there will be.txt'},
                      'Using It': {'file': 'grammarpage/using it.txt'},
                      'Auxiliary Verbs Do/Does': {'file': 'grammarpage/do does and did.txt'},
                      'Auxiliary Verb Did': {'file': 'grammarpage/do does and did.txt'},
                      'Auxiliary Verb Used To': {'file': 'grammarpage/used to.txt'},
                      'Auxiliary Verb Ought To': {'file': 'grammarpage/ought to.txt'},
                     'Auxiliary Verb Been': {'file': 'grammarpage/be been and being.txt' },
                     'Too And Either': {'file': 'grammarpage/using too and either.txt'},
                     'Questions Using Who': {'file': 'grammarpage/who.txt'},
                     'Questions Using What': {'file': 'grammarpage/what.txt'},
                     'Questions Using Which': {'file': 'grammarpage/which.txt'},
                     'Questions Using How': {'file': 'grammarpage/how.txt'},
                     'How Old Are You': {'file': 'grammarpage/how old are you.txt'},
                     'How Long': {'file': 'grammarpage/how long.txt'},
                     'How Many And How Much': {'file': 'grammarpage/how much and how many.txt'},
                     'Countable And Uncountable Nouns': {'file': 'grammarpage/countable uncountable nouns.txt'},
                     'The Imperative': {'file': 'grammarpage/the imperative.txt'},
                    'Would You Mind': {'file': 'grammarpage/would you mind.txt' },
                    'Giving Strong Instructions': {'file': 'grammarpage/giving strong instructions.txt'},
                    'Narating Stories Reacting To Stories': {'file': 'grammarpage/narrating story and reacting to story.txt'},
                    'Transitive Intransitive Verbs': {'file': 'grammarpage/transitive-instransitive verbs.txt'},
                    'Want And Need': {'file': 'grammarpage/want vs need.txt'},
                    'Too Very And Enough': {'file': 'grammarpage/too very and enough.txt'},
                    'Telling Time': {'file': 'grammarpage/telling the time.txt'},
                    'Auxiliary Verbs Has Have': {'file': 'grammarpage/has and have.txt'},
                    'Auxiliary Verb Had': {'file': 'grammarpage/had.txt'},
                    'Genitive S': {'file': 'grammarpage/genitive.txt'},
                    'Stop And Try': {'file': 'grammarpage/stop and try.txt'},
                    'Some Any And No': {'file': 'grammarpage/some any and no.txt'},
                    'Linking Verbs': {'file': 'grammarpage/linking verbs.txt'},
                    'It Is Better-Would Better': {'file': 'grammarpage/would better.txt'},
                    'Comparison With As': {'file': 'grammarpage/comparative with as.txt'},
                    'Reflexive Pronouns': {'file': 'grammarpage/reflexive pronouns.txt'},
                    'Adjectives': {'file': 'grammarpage/adjectives.txt'},
                    'Prepositions In-On-At': {'file': 'grammarpage/at in on.txt'},
                    'Possessive Pronouns': {'file': 'grammarpage/possessive pronouns.txt'},
                    'Possessive Adjectives': {'file': 'grammarpage/possessive adjectives.txt'},
                    'Demonstrative Pronouns': {'file': 'grammarpage/demonstrative pronouns.txt'},
                    'Personal Pronouns': {'file': 'grammarpage/personal pronouns.txt'},
                    'Prefer Would Prefer': {'file': 'grammarpage/prefer and would prefer.txt'},
                    'Using Look For': {'file': 'grammarpage/look for.txt'},
                    'Using Like-Love-Prefer-Hate': {'file': 'grammarpage/like.txt'},
                   'Good At': {'file': 'grammarpage/good at.txt' },
                   'Giving And Responding To Good And Bad News': {'file': 'grammarpage/giving and responding to good and bad news.txt'},
                   'Exclamation': {'file': 'grammarpage/exclamation.txt'},
                   'Do vs Make': {'file': 'grammarpage/do vs make.txt'},
                   'Comparative And Superlative': {'file': 'grammarpage/comparative and superlative.txt'},
                   'Countable-Uncountable Nouns': {'file': 'grammarpage/countable uncountable nouns.txt'},
                   'Be Been And Being': {'file': 'grammarpage/be been and being.txt'},
                   'Have Got To': {'file': 'grammarpage/have got to and have to.txt'},
                   'Past Continuous': {'file': 'grammarpage/intermediate/past continuous.txt'},
                   'Will/Shall': {'file': 'grammarpage/will vs shall.txt'},
                   'Agreement Using So And Neither': {'file': 'grammarpage/intermediate/agreement using so and neither.txt'},
                  'Questions Using Why': {'file': 'grammarpage/why.txt' },
                  'Forming Questions': {'file': 'grammarpage/forming questions.txt'},
                  'Comparison Of Adverbs': {'file': 'grammarpage/intermediate/comparing adverbs.txt'},
                  'Adverbs Of Purpose': {'file': 'grammarpage/adverbs of purpose.txt'},
                 'So And Such': {'file': 'grammarpage/so and such.txt' },
                 'Quantifiers': {'file': 'grammarpage/quantifiers.txt'},
                 'Prepositions Of/From': {'file': 'grammarpage/preposition of and from.txt'},
                 'Preposition By': {'file': 'grammarpage/preposition by.txt'},
                 'Participle Adjectives': {'file': 'grammarpage/participle adjective.txt'},
                 'Order Of Adverbs': {'file': 'grammarpage/order of adverbs.txt'},
                 'Like Versus As': {'file': 'grammarpage/like vs as.txt'},
                'Less Versus Fewer': {'file': 'grammarpage/less vs fewer.txt' },
                'Prepositions For-With-About': {'file': 'grammarpage/for with about.txt'},
                'Few A Few / Little A Little': {'file': 'grammarpage/few a few little a little.txt'},
               'Either OR / Neither Nor': {'file': 'grammarpage/either or neither nor.txt' },
               'Definite Articles': {'file': 'grammarpage/definite article.txt'},
               'Causative Verbs': {'file': 'grammarpage/causative verbs.txt'},
               'Questions Using Whose': {'file': 'grammarpage/whose.txt'},
               'Preposition Between': {'file': 'grammarpage/between.txt'},
               'Adverbs of Frequency': {'file': 'grammarpage/adverbs of frequency.txt'},
               'Adverbs Of Time': {'file': 'grammarpage/adverbs of time.txt'},
               'Adverbs Of Place': {'file': 'grammarpage/adverbs of place.txt'},
               'Adverbs Of Manner': {'file': 'grammarpage/adverbs of manner.txt'},
               'Prepositions Above/Over': {'file': 'grammarpage/above and over.txt'},
               'Indirect Questions': {'file': 'grammarpage/intermediate/indirect question.txt'},
               'Indefinite Pronouns': {'file': 'grammarpage/indefinite pronouns.txt'},
              'Future Continuous': {'file': 'grammarpage/intermediate/future continuous.txt' },
             'Prepositions Across-Through-Along': {'file': 'grammarpage/intermediate/across through along.txt' },
             'At The End Versus In The End': {'file': 'grammarpage/intermediate/at the end vs in the end.txt'},
             'As Soon As': {'file': 'grammarpage/intermediate/as soon as.txt'},
             'Adjectives With Too And Very': {'file': 'grammarpage/too very and enough.txt'},
             'Using Less': {'file': 'grammarpage/less vs fewer.txt'},
             'Another Other And Others': {'file': 'grammarpage/intermediate/other others and another.txt'},
             'Using Without': {'file': 'grammarpage/intermediate/without.txt'},
            'Using Hope': {'file': 'grammarpage/intermediate/hope vs wish.txt' },
            'Expressing Purpose': {'file': 'grammarpage/intermediate/expressing purpose.txt'},
           'As Much As / As Many As': {'file': 'grammarpage/intermediate/as much as as many as.txt' },
           'Preposition Into': {'file': 'grammarpage/prepositions in and into.txt'},
          'Using How About / What About': {'file': 'grammarpage/intermediate/how about what about.txt'},
          'Look Forward To': {'file': 'grammarpage/intermediate/look forward to.txt'},
          'Using Unless': {'file': 'grammarpage/intermediate/unless.txt'},
          'Participles': {'file': 'grammarpage/intermediate/participle.txt'},
          'Wh Questions Present Simple': {'file': 'grammarpage/wh questions present simple.txt'},
          'Negative Questions': {'file': 'grammarpage/intermediate/negative question.txt'},
          'Each Other Versus One Another': {'file': 'grammarpage/intermediate/each other and one another.txt'},
          'Present Perfect': {'file': 'grammarpage/intermediate/present perfect.txt'},
          'Will Versus Going To': {'file': 'grammarpage/will vs going to.txt'},
          'Infinitive': {'file': 'grammarpage/infinitive.txt'},
          'Gerund': {'file': 'grammarpage/intermediate/gerund.txt'},
          'Using A Lot / Lots': {'file': 'grammarpage/a lot lots.txt'},
          'Using Still And Yet': {'file': 'grammarpage/still and yet.txt'},
          'Using During And While': {'file': 'grammarpage/during and while.txt'},
          'First Conditional': {'file': 'grammarpage/first conditional.txt'},
          'Zero Conditional': {'file': 'grammarpage/intermediate/zero conditional.txt'},
          'Second Conditional': {'file': 'grammarpage/intermediate/second conditional.txt'},
          'Third Conditional': {'file': 'grammarpage/intermediate/third conditional.txt'},
          'Mixed Conditional': {'file': 'grammarpage/intermediate/mixed conditional.txt'},
          'Past Perfect': {'file': 'grammarpage/intermediate/past perfect.txt'},
          'Past Perfect Continuous': {'file': 'grammarpage/intermediate/past perfect continuous tense.txt'},
          'Future Perfect': {'file': 'grammarpage/intermediate/future perfect.txt'},
          'Future Perfect Continuous': {'file': 'grammarpage/future perfect continuous.txt'},
          'A pair Of': {'file': 'grammarpage/intermediate/a pair of.txt'},
         'Adjective Word Order': {'file': 'grammarpage/intermediate/adjective word order.txt' },
         'Be Used To / Get Used To': {'file': 'grammarpage/intermediate/be used to and get used to.txt'},
         'Using Wish': {'file': 'grammarpage/intermediate/wish.txt'},
         'Has Been / Have Been / Had Been': {'file': 'grammarpage/intermediate/has been have been had been.txt'},
         'Relative Pronouns': {'file': 'grammarpage/intermediate/relative pronouns.txt'},
         'Question Tag': {'file': 'grammarpage/intermediate/tag questions.txt'},
        'Using Whatever': {'file': 'grammarpage/intermediate/whatever whichever.txt' },
        'So That / Such That': {'file': 'grammarpage/intermediate/so that such that.txt'},
        'Order Of Adverbs': {'file': 'grammarpage/order of adverbs.txt'},
        'Past Simple Passive': {'file': 'grammarpage/intermediate/past simple passive.txt'},
        'Using Had Better': {'file': 'grammarpage/intermediate/had better would rather.txt'},
       'Using Keep': {'file': 'grammarpage/intermediate/keep.txt' },
       'Using So That': {'file': 'grammarpage/intermediate/so that in order that.txt'},
       'Using Instead': {'file': 'grammarpage/intermediate/instead of vs instead.txt'},
      'Because And Because Of': {'file': 'grammarpage/intermediate/because of and because.txt' },
      'Using Would Rather': {'file': 'grammarpage/intermediate/had better would rather.txt'},
      'Auxiliary Verb Would': {'file': 'grammarpage/intermediate/would.txt'},
      'Was Used + ING': {'file': 'grammarpage/intermediate/be used to and get used to.txt'},
      'Have Something Done': {'file': 'grammarpage/intermediate/have something done.txt'},
      'Perfect Modal Could Have/Should Have/Would Have/Must Have': {'file': 'grammarpage/intermediate/perfect modals.txt'},
      'Subjunctive': {'file': 'grammarpage/intermediate/subjunctive.txt'},
      'Passive Voice': {'file': 'grammarpage/intermediate/passive voice.txt'},
      'Question Tag Irregular': {'file': 'grammarpage/intermediate/question tag irregular.txt'},
      'How To Count Uncountable Nouns': {'file': 'grammarpage/intermediate/how to count uncountable nouns.txt'},
      'Parallel Structure': {'file': 'grammarpage/parallel structure.txt'},
      'Not Only But Also': {'file': 'grammarpage/intermediate/not only but also.txt'},
      'Inversion': {'file': 'grammarpage/intermediate/inversion.txt'},
      'Reported Speech Statement Question': {'file': 'grammarpage/intermediate/reported speech statement questions.txt'},
      'Although And Even Though': {'file': 'grammarpage/intermediate/although even though though despite.txt'},
      'Future Simple Passive': {'file': 'grammarpage/intermediate/future simple passive.txt'},
      'Future Continuous Passive': {'file': 'grammarpage/intermediate/future continuous passive.txt'},
      'Future Perfect Passive': {'file': 'grammarpage/intermediate/future perfect passive.txt'},
      'Expressions Used With Gerund': {'file': 'grammarpage/intermediate/expressions followed by the gerund.txt'},
      'Perfect Modal': {'file': 'grammarpage/intermediate/perfect modals.txt'},
      'Modals Continuous': {'file': 'grammarpage/intermediate/modal continuous.txt'},
      'Present Perfect Vs Past Perfect': {'file': 'grammarpage/intermediate/present perfect vs past perfect.txt'},
      'Adjectives And Prepositions Combinations': {'file': 'grammarpage/intermediate/adjective preposition combination.txt'},
      'As If As Though': {'file': 'grammarpage/intermediate/as if as though.txt'},
      'Passive With Modal': {'file': 'grammarpage/intermediate/passive with modals.txt'},
      'Verbs Used With Gerund': {'file': 'grammarpage/intermediate/verbs followed by gerund.txt'},
      'Nevertheless': {'file': 'grammarpage/intermediate/nevertheless however moreover.txt'},
      'Restrictive And Non-Restrictive Clause': {'file': 'grammarpage/intermediate/restrictive and non-restrictive clause.txt'},
      'Subject Verb Agreement': {'file': 'grammarpage/intermediate/subject verb agreement advanced.txt'},
      'Noun Clause': {'file': 'grammarpage/intermediate/noun clause.txt'},
      'Which Versus That': {'file': 'grammarpage/intermediate/which vs that.txt'},
      'Be Supposed To': {'file': 'grammarpage/intermediate/supposed to.txt'},
      'Be To + Infinitive': {'file': 'grammarpage/intermediate/be to + infinitive.txt'},
      'Confusing Pronouns': {'file': 'grammarpage/intermediate/confusing pronouns none of most of.txt'},
      'Linking Words': {'file': 'grammarpage/intermediate/linking words.txt'},
      'Passive Reporting Structure': {'file': 'grammarpage/intermediate/passive reporting structure.txt'},
      'Present Perfect Continuous Passive': {'file': 'grammarpage/intermediate/present perfect continuous passive.txt'},
      'Past Perfect Continuous Passive': {'file': 'grammarpage/intermediate/past perfect continuous passive.txt'},
      'Future Perfect Continuous Passive': {'file': 'grammarpage/intermediate/future perfect continuous passive.txt'},
      'Independent And Dependent Clause': {'file': 'grammarpage/intermediate/independent and dependent clause.txt'},
      'Future In The Past': {'file': 'grammarpage/intermediate/future in the past.txt'},
      'Changing Question Into Passive': {'file': 'grammarpage/intermediate/change interogative sentence into passive voice.txt'},
      'Independent And Dependent Clause': {'file': 'grammarpage/intermediate/independent and dependent clause.txt'},
      'Changing Passive Voice Into Active Voice': {'file': 'grammarpage/intermediate/change passive voice into active voice.txt'},
      'The Number Of vs A Number Of': {'file': 'grammarpage/intermediate/a number of vs number of.txt'},
      'Embedded Questions': {'file': 'grammarpage/intermediate/embedded questions.txt'}}
        file = audio_file[text]['file']
        p= codecs.open(file,"r",encoding='utf-8').read()
            
        self.ids.page.text = get_display(arabic_reshaper.reshape(p))
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
class GramarPage2(Screen):
    def play(self, text):
        
        audio_file = {'Verb To Be(is-am-are)': { 'file': 'grammarpage/verb to be.txt'},
                      'Present Continuous': {'file': 'grammarpage/present continuous.txt'},
                      'Present Simple': {'file': 'grammarpage/simple present tense.txt'},
                      'Future Simple': {'file': 'grammarpage/simple future tense.txt'},
                      'Past Simple': {'file': 'grammarpage/past simple.txt'},
                      'Was/Were': {'file': 'grammarpage/was and were.txt'},
                      'Has Got Have Got': {'file': 'grammarpage/has got and have got.txt'},
                      'Be + Going To': {'file': 'grammarpage/be going to.txt'},
                      'Auxiliary Verb May': {'file': 'grammarpage/may and might.txt'},
                      'Auxiliary Verb Might': {'file': 'grammarpage/may and might.txt'},
                      'Auxiliary Verb Can': {'file': 'grammarpage/can.txt'},
                      'Auxiliary Verb Could': {'file': 'grammarpage/could.txt'},
                      'Auxiliary Verb Must': {'file': 'grammarpage/must.txt'},
                      'Auxiliary Verb Should': {'file': 'grammarpage/should.txt'},
                      'Modal Verb Have To': {'file': 'grammarpage/have got to and have to.txt'},
                      'Would Like': {'file': 'grammarpage/would like.txt'},
                      'There Is/There Are': {'file': 'grammarpage/there is there are.txt'},
                      'There Was/There Were': {'file': 'grammarpage/there was there were.txt'},
                      'There Will Be': {'file': 'grammarpage/there will be.txt'},
                      'Using It': {'file': 'grammarpage/using it.txt'},
                      'Auxiliary Verbs Do/Does': {'file': 'grammarpage/do does and did.txt'},
                      'Auxiliary Verb Did': {'file': 'grammarpage/do does and did.txt'},
                      'Auxiliary Verb Used To': {'file': 'grammarpage/used to.txt'},
                      'Auxiliary Verb Ought To': {'file': 'grammarpage/ought to.txt'},
                     'Auxiliary Verb Been': {'file': 'grammarpage/be been and being.txt' },
                     'Too And Either': {'file': 'grammarpage/using too and either.txt'},
                     'Questions Using Who': {'file': 'grammarpage/who.txt'},
                     'Questions Using What': {'file': 'grammarpage/what.txt'},
                     'Questions Using Which': {'file': 'grammarpage/which.txt'},
                     'Questions Using How': {'file': 'grammarpage/how.txt'},
                     'How Old Are You': {'file': 'grammarpage/how old are you.txt'},
                     'How Long': {'file': 'grammarpage/how long.txt'},
                     'How Many And How Much': {'file': 'grammarpage/how much and how many.txt'},
                     'Countable And Uncountable Nouns': {'file': 'grammarpage/countable uncountable nouns.txt'},
                     'The Imperative': {'file': 'grammarpage/the imperative.txt'},
                    'Would You Mind': {'file': 'grammarpage/would you mind.txt' },
                    'Giving Strong Instructions': {'file': 'grammarpage/giving strong instructions.txt'},
                    'Narating Stories Reacting To Stories': {'file': 'grammarpage/narrating story and reacting to story.txt'},
                    'Transitive Intransitive Verbs': {'file': 'grammarpage/transitive-instransitive verbs.txt'},
                    'Want And Need': {'file': 'grammarpage/want vs need.txt'},
                    'Too Very And Enough': {'file': 'grammarpage/too very and enough.txt'},
                    'Telling Time': {'file': 'grammarpage/telling the time.txt'},
                    'Auxiliary Verbs Has Have': {'file': 'grammarpage/has and have.txt'},
                    'Auxiliary Verb Had': {'file': 'grammarpage/had.txt'},
                    'Genitive S': {'file': 'grammarpage/genitive.txt'},
                    'Stop And Try': {'file': 'grammarpage/stop and try.txt'},
                    'Some Any And No': {'file': 'grammarpage/some any and no.txt'},
                    'Linking Verbs': {'file': 'grammarpage/linking verbs.txt'},
                    'It Is Better-Would Better': {'file': 'grammarpage/would better.txt'},
                    'Comparison With As': {'file': 'grammarpage/comparative with as.txt'},
                    'Reflexive Pronouns': {'file': 'grammarpage/reflexive pronouns.txt'},
                    'Adjectives': {'file': 'grammarpage/adjectives.txt'},
                    'Prepositions In-On-At': {'file': 'grammarpage/at in on.txt'},
                    'Possessive Pronouns': {'file': 'grammarpage/possessive pronouns.txt'},
                    'Possessive Adjectives': {'file': 'grammarpage/possessive adjectives.txt'},
                    'Demonstrative Pronouns': {'file': 'grammarpage/demonstrative pronouns.txt'},
                    'Personal Pronouns': {'file': 'grammarpage/personal pronouns.txt'},
                    'Prefer Would Prefer': {'file': 'grammarpage/prefer and would prefer.txt'},
                    'Using Look For': {'file': 'grammarpage/look for.txt'},
                    'Using Like-Love-Prefer-Hate': {'file': 'grammarpage/like.txt'},
                   'Good At': {'file': 'grammarpage/good at.txt' },
                   'Giving And Responding To Good And Bad News': {'file': 'grammarpage/giving and responding to good and bad news.txt'},
                   'Exclamation': {'file': 'grammarpage/exclamation.txt'},
                   'Do vs Make': {'file': 'grammarpage/do vs make.txt'},
                   'Comparative And Superlative': {'file': 'grammarpage/comparative and superlative.txt'},
                   'Countable-Uncountable Nouns': {'file': 'grammarpage/countable uncountable nouns.txt'},
                   'Be Been And Being': {'file': 'grammarpage/be been and being.txt'},
                   'Have Got To': {'file': 'grammarpage/have got to and have to.txt'},
                   'Past Continuous': {'file': 'grammarpage/intermediate/past continuous.txt'},
                   'Will/Shall': {'file': 'grammarpage/will vs shall.txt'},
                   'Agreement Using So And Neither': {'file': 'grammarpage/intermediate/agreement using so and neither.txt'},
                  'Questions Using Why': {'file': 'grammarpage/why.txt' },
                  'Forming Questions': {'file': 'grammarpage/forming questions.txt'},
                  'Comparison Of Adverbs': {'file': 'grammarpage/intermediate/comparing adverbs.txt'},
                  'Adverbs Of Purpose': {'file': 'grammarpage/adverbs of purpose.txt'},
                 'So And Such': {'file': 'grammarpage/so and such.txt' },
                 'Quantifiers': {'file': 'grammarpage/quantifiers.txt'},
                 'Prepositions Of/From': {'file': 'grammarpage/preposition of and from.txt'},
                 'Preposition By': {'file': 'grammarpage/preposition by.txt'},
                 'Participle Adjectives': {'file': 'grammarpage/participle adjective.txt'},
                 'Order Of Adverbs': {'file': 'grammarpage/order of adverbs.txt'},
                 'Like Versus As': {'file': 'grammarpage/like vs as.txt'},
                'Less Versus Fewer': {'file': 'grammarpage/less vs fewer.txt' },
                'Prepositions For-With-About': {'file': 'grammarpage/for with about.txt'},
                'Few A Few / Little A Little': {'file': 'grammarpage/few a few little a little.txt'},
               'Either OR / Neither Nor': {'file': 'grammarpage/either or neither nor.txt' },
               'Definite Articles': {'file': 'grammarpage/definite article.txt'},
               'Causative Verbs': {'file': 'grammarpage/causative verbs.txt'},
               'Questions Using Whose': {'file': 'grammarpage/whose.txt'},
               'Preposition Between': {'file': 'grammarpage/between.txt'},
               'Adverbs of Frequency': {'file': 'grammarpage/adverbs of frequency.txt'},
               'Adverbs Of Time': {'file': 'grammarpage/adverbs of time.txt'},
               'Adverbs Of Place': {'file': 'grammarpage/adverbs of place.txt'},
               'Adverbs Of Manner': {'file': 'grammarpage/adverbs of manner.txt'},
               'Prepositions Above/Over': {'file': 'grammarpage/above and over.txt'},
               'Indirect Questions': {'file': 'grammarpage/intermediate/indirect question.txt'},
               'Indefinite Pronouns': {'file': 'grammarpage/indefinite pronouns.txt'},
              'Future Continuous': {'file': 'grammarpage/intermediate/future continuous.txt' },
             'Prepositions Across-Through-Along': {'file': 'grammarpage/intermediate/across through along.txt' },
             'At The End Versus In The End': {'file': 'grammarpage/intermediate/at the end vs in the end.txt'},
             'As Soon As': {'file': 'grammarpage/intermediate/as soon as.txt'},
             'Adjectives With Too And Very': {'file': 'grammarpage/too very and enough.txt'},
             'Using Less': {'file': 'grammarpage/less vs fewer.txt'},
             'Another Other And Others': {'file': 'grammarpage/intermediate/other others and another.txt'},
             'Using Without': {'file': 'grammarpage/intermediate/without.txt'},
            'Using Hope': {'file': 'grammarpage/intermediate/hope vs wish.txt' },
            'Expressing Purpose': {'file': 'grammarpage/intermediate/expressing purpose.txt'},
           'As Much As / As Many As': {'file': 'grammarpage/intermediate/as much as as many as.txt' },
           'Preposition Into': {'file': 'grammarpage/prepositions in and into.txt'},
          'Using How About / What About': {'file': 'grammarpage/intermediate/how about what about.txt'},
          'Look Forward To': {'file': 'grammarpage/intermediate/look forward to.txt'},
          'Using Unless': {'file': 'grammarpage/intermediate/unless.txt'},
          'Participles': {'file': 'grammarpage/intermediate/participle.txt'},
          'Wh Questions Present Simple': {'file': 'grammarpage/wh questions present simple.txt'},
          'Negative Questions': {'file': 'grammarpage/intermediate/negative question.txt'},
          'Each Other Versus One Another': {'file': 'grammarpage/intermediate/each other and one another.txt'},
          'Present Perfect': {'file': 'grammarpage/intermediate/present perfect.txt'},
          'Will Versus Going To': {'file': 'grammarpage/will vs going to.txt'},
          'Infinitive': {'file': 'grammarpage/infinitive.txt'},
          'Gerund': {'file': 'grammarpage/intermediate/gerund.txt'},
          'Using A Lot / Lots': {'file': 'grammarpage/a lot lots.txt'},
          'Using Still And Yet': {'file': 'grammarpage/still and yet.txt'},
          'Using During And While': {'file': 'grammarpage/during and while.txt'},
          'First Conditional': {'file': 'grammarpage/first conditional.txt'},
          'Zero Conditional': {'file': 'grammarpage/intermediate/zero conditional.txt'},
          'Second Conditional': {'file': 'grammarpage/intermediate/second conditional.txt'},
          'Third Conditional': {'file': 'grammarpage/intermediate/third conditional.txt'},
          'Mixed Conditional': {'file': 'grammarpage/intermediate/mixed conditional.txt'},
          'Past Perfect': {'file': 'grammarpage/intermediate/past perfect.txt'},
          'Past Perfect Continuous': {'file': 'grammarpage/intermediate/past perfect continuous tense.txt'},
          'Future Perfect': {'file': 'grammarpage/intermediate/future perfect.txt'},
          'Future Perfect Continuous': {'file': 'grammarpage/future perfect continuous.txt'},
          'A pair Of': {'file': 'grammarpage/intermediate/a pair of.txt'},
         'Adjective Word Order': {'file': 'grammarpage/intermediate/adjective word order.txt' },
         'Be Used To / Get Used To': {'file': 'grammarpage/intermediate/be used to and get used to.txt'},
         'Using Wish': {'file': 'grammarpage/intermediate/wish.txt'},
         'Has Been / Have Been / Had Been': {'file': 'grammarpage/intermediate/has been have been had been.txt'},
         'Relative Pronouns': {'file': 'grammarpage/intermediate/relative pronouns.txt'},
         'Question Tag': {'file': 'grammarpage/intermediate/tag questions.txt'},
        'Using Whatever': {'file': 'grammarpage/intermediate/whatever whichever.txt' },
        'So That / Such That': {'file': 'grammarpage/intermediate/so that such that.txt'},
        'Order Of Adverbs': {'file': 'grammarpage/order of adverbs.txt'},
        'Past Simple Passive': {'file': 'grammarpage/intermediate/past simple passive.txt'},
        'Using Had Better': {'file': 'grammarpage/intermediate/had better would rather.txt'},
       'Using Keep': {'file': 'grammarpage/intermediate/keep.txt' },
       'Using So That': {'file': 'grammarpage/intermediate/so that in order that.txt'},
       'Using Instead': {'file': 'grammarpage/intermediate/instead of vs instead.txt'},
      'Because And Because Of': {'file': 'grammarpage/intermediate/because of and because.txt' },
      'Using Would Rather': {'file': 'grammarpage/intermediate/had better would rather.txt'},
      'Auxiliary Verb Would': {'file': 'grammarpage/intermediate/would.txt'},
      'Was Used + ING': {'file': 'grammarpage/intermediate/be used to and get used to.txt'},
      'Have Something Done': {'file': 'grammarpage/intermediate/have something done.txt'},
      'Perfect Modal Could Have/Should Have/Would Have/Must Have': {'file': 'grammarpage/intermediate/perfect modals.txt'},
      'Subjunctive': {'file': 'grammarpage/intermediate/subjunctive.txt'},
      'Passive Voice': {'file': 'grammarpage/intermediate/passive voice.txt'},
      'Question Tag Irregular': {'file': 'grammarpage/intermediate/question tag irregular.txt'},
      'How To Count Uncountable Nouns': {'file': 'grammarpage/intermediate/how to count uncountable nouns.txt'},
      'Parallel Structure': {'file': 'grammarpage/parallel structure.txt'},
      'Not Only But Also': {'file': 'grammarpage/intermediate/not only but also.txt'},
      'Inversion': {'file': 'grammarpage/intermediate/inversion.txt'},
      'Reported Speech Statement Question': {'file': 'grammarpage/intermediate/reported speech statement questions.txt'},
      'Although And Even Though': {'file': 'grammarpage/intermediate/although even though though despite.txt'},
      'Future Simple Passive': {'file': 'grammarpage/intermediate/future simple passive.txt'},
      'Future Continuous Passive': {'file': 'grammarpage/intermediate/future continuous passive.txt'},
      'Future Perfect Passive': {'file': 'grammarpage/intermediate/future perfect passive.txt'},
      'Expressions Used With Gerund': {'file': 'grammarpage/intermediate/expressions followed by the gerund.txt'},
      'Perfect Modal': {'file': 'grammarpage/intermediate/perfect modals.txt'},
      'Modals Continuous': {'file': 'grammarpage/intermediate/modal continuous.txt'},
      'Present Perfect Vs Past Perfect': {'file': 'grammarpage/intermediate/present perfect vs past perfect.txt'},
      'Adjectives And Prepositions Combinations': {'file': 'grammarpage/intermediate/adjective preposition combination.txt'},
      'As If As Though': {'file': 'grammarpage/intermediate/as if as though.txt'},
      'Passive With Modal': {'file': 'grammarpage/intermediate/passive with modals.txt'},
      'Verbs Used With Gerund': {'file': 'grammarpage/intermediate/verbs followed by gerund.txt'},
      'Nevertheless': {'file': 'grammarpage/intermediate/nevertheless however moreover.txt'},
      'Restrictive And Non-Restrictive Clause': {'file': 'grammarpage/intermediate/restrictive and non-restrictive clause.txt'},
      'Subject Verb Agreement': {'file': 'grammarpage/intermediate/subject verb agreement advanced.txt'},
      'Noun Clause': {'file': 'grammarpage/intermediate/noun clause.txt'},
      'Which Versus That': {'file': 'grammarpage/intermediate/which vs that.txt'},
      'Be Supposed To': {'file': 'grammarpage/intermediate/supposed to.txt'},
      'Be To + Infinitive': {'file': 'grammarpage/intermediate/be to + infinitive.txt'},
      'Confusing Pronouns': {'file': 'grammarpage/intermediate/confusing pronouns none of most of.txt'},
      'Linking Words': {'file': 'grammarpage/intermediate/linking words.txt'},
      'Passive Reporting Structure': {'file': 'grammarpage/intermediate/passive reporting structure.txt'},
      'Present Perfect Continuous Passive': {'file': 'grammarpage/intermediate/present perfect continuous passive.txt'},
      'Past Perfect Continuous Passive': {'file': 'grammarpage/intermediate/past perfect continuous passive.txt'},
      'Future Perfect Continuous Passive': {'file': 'grammarpage/intermediate/future perfect continuous passive.txt'},
      'Independent And Dependent Clause': {'file': 'grammarpage/intermediate/independent and dependent clause.txt'},
      'Future In The Past': {'file': 'grammarpage/intermediate/future in the past.txt'},
      'Changing Question Into Passive': {'file': 'grammarpage/intermediate/change interogative sentence into passive voice.txt'},
      'Independent And Dependent Clause': {'file': 'grammarpage/intermediate/independent and dependent clause.txt'},
      'Changing Passive Voice Into Active Voice': {'file': 'grammarpage/intermediate/change passive voice into active voice.txt'},
      'The Number Of vs A Number Of': {'file': 'grammarpage/intermediate/a number of vs number of.txt'},
      'Embedded Questions': {'file': 'grammarpage/intermediate/embedded questions.txt'}}
        file = audio_file[text]['file']
        p= codecs.open(file,"r",encoding='utf-8').read()
            
        self.ids.page.text = get_display(arabic_reshaper.reshape(p))
        
        
        
        
        
        
        
        
        
        
class PhrasalVerb(Screen):
     
     global p,p1,p2,p3,p4,id
    
            
     db = sqlite3.connect('book.db')
     b = db.cursor()
     b1= db.cursor()
     b2 = db.cursor()
     b3 = db.cursor()
     b4= db.cursor()
     b5 = db.cursor()
     b.execute("select questions from phrasalverbs")
     b1.execute("select wronganswer from phrasalverbs")
     b2.execute("select wronganswer1 from phrasalverbs")
     b3.execute("select rightanswer from phrasalverbs")
     b4.execute("select option from phrasalverbs")
     b5.execute("select num from phrasalverbs")
     p= b.fetchall()
     p1= b1.fetchall()
     p2= b2.fetchall()
     p3 = b3.fetchall()
     p4 = b4.fetchall()
     id= b5.fetchall()
    
    
    
    
     
    
     def on_pre_enter(self, *args):
        
        global c1
        global theoption1phrasal
        global theid
        c1 = c1 + 1
        if c1 == 3399:
            c1 = 1
        myinteger = random.randint(1,2)
        if myinteger == 1:
            self.ids.record3.text = str (p[c1]).strip("()").strip(",").strip("''")
            self.ids.lab1.text = str (p1[c1]).strip("()").strip(",").strip("''")
            self.ids.lab2.text = str (p2[c1]).strip("()").strip(",").strip("''")
            self.ids.lab3.text = str (p3[c1]).strip("()").strip(",").strip("''")
            theoption1phrasal = str(p4[c1]).strip("()").strip(",").strip("''")
            theid = str(id[c1]).strip("()").strip(",").strip("''")
        else:
            self.ids.record3.text = str (p[c1]).strip("()").strip(",").strip("''")
            self.ids.lab1.text = str (p3[c1]).strip("()").strip(",").strip("''")
            self.ids.lab2.text = str (p2[c1]).strip("()").strip(",").strip("''")
            self.ids.lab3.text = str (p1[c1]).strip("()").strip(",").strip("''")
            theoption1phrasal = str(p4[c1]).strip("()").strip(",").strip("''")
            theid = str(id[c1]).strip("()").strip(",").strip("''")
        
        
        
     def writeit(self):
        
        f = open("phrasal1.txt","w")
        
        f.write(theid)
        f.close()
     def on_estate_check(self):
        
        if self.ids.ch1.active is True:
            if self.ids.lab1.text == str(p3[c1]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this.",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass
        
        if self.ids.ch3.active is True:
            if self.ids.lab3.text == str(p3[c1]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)


        if self.ids.ch2.active is True:
            content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)    
        
         


class PhrasalVerb1(Screen):
     global p,p1,p2,p3,p4,id
    
            
     db = sqlite3.connect('book.db')
     b = db.cursor()
     b1= db.cursor()
     b2 = db.cursor()
     b3 = db.cursor()
     b4= db.cursor()
     b5 = db.cursor()
     b.execute("select questions from phrasalverbs")
     b1.execute("select wronganswer from phrasalverbs")
     b2.execute("select wronganswer1 from phrasalverbs")
     b3.execute("select rightanswer from phrasalverbs")
     b4.execute("select option from phrasalverbs")
     b5.execute("select num from phrasalverbs")
     p= b.fetchall()
     p1= b1.fetchall()
     p2= b2.fetchall()
     p3 = b3.fetchall()
     p4 = b4.fetchall()
     id= b5.fetchall()
    
    
    
    
     
    
     def on_pre_enter(self, *args):
        
        global c1
        global theoption1phrasal
        global theid
        c1 = c1 + 1
        if c1 == 3399:
            c1 = 1
        myinteger = random.randint(1,2)
        if myinteger == 1:
            self.ids.record3.text = str (p[c1]).strip("()").strip(",").strip("''")
            self.ids.lab1.text = str (p1[c1]).strip("()").strip(",").strip("''")
            self.ids.lab2.text = str (p2[c1]).strip("()").strip(",").strip("''")
            self.ids.lab3.text = str (p3[c1]).strip("()").strip(",").strip("''")
            theoption1phrasal = str(p4[c1]).strip("()").strip(",").strip("''")
            theid = str(id[c1]).strip("()").strip(",").strip("''")
        else:
            self.ids.record3.text = str (p[c1]).strip("()").strip(",").strip("''")
            self.ids.lab1.text = str (p3[c1]).strip("()").strip(",").strip("''")
            self.ids.lab2.text = str (p2[c1]).strip("()").strip(",").strip("''")
            self.ids.lab3.text = str (p1[c1]).strip("()").strip(",").strip("''")
            theoption1phrasal = str(p4[c1]).strip("()").strip(",").strip("''")
            theid = str(id[c1]).strip("()").strip(",").strip("''")
        
        
        
     def writeit(self):
        
        f = open("phrasal1.txt","w")
        
        f.write(theid)
        f.close()
     def on_estate_check(self):
        
        if self.ids.ch1.active is True:
            if self.ids.lab1.text == str(p3[c1]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this.",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass
        
        if self.ids.ch3.active is True:
            if self.ids.lab3.text == str(p3[c1]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)


        if self.ids.ch2.active is True:
            content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3) 



class PhrasalVerb2(Screen):
     global p,p1,p2,p3,p4,id
    
            
     db = sqlite3.connect('book.db')
     b = db.cursor()
     b1= db.cursor()
     b2 = db.cursor()
     b3 = db.cursor()
     b4= db.cursor()
     b5 = db.cursor()
     b.execute("select questions from phrasalverbs")
     b1.execute("select wronganswer from phrasalverbs")
     b2.execute("select wronganswer1 from phrasalverbs")
     b3.execute("select rightanswer from phrasalverbs")
     b4.execute("select option from phrasalverbs")
     b5.execute("select num from phrasalverbs")
     p= b.fetchall()
     p1= b1.fetchall()
     p2= b2.fetchall()
     p3 = b3.fetchall()
     p4 = b4.fetchall()
     id= b5.fetchall()
    
    
    
    
     
    
     def on_pre_enter(self, *args):
        
        global c1
        global theoption1phrasal
        global theid
        c1 = c1 + 1
        if c1 == 3399:
            c1 = 1
        myinteger = random.randint(1,2)
        if myinteger == 1:
            self.ids.record3.text = str (p[c1]).strip("()").strip(",").strip("''")
            self.ids.lab1.text = str (p1[c1]).strip("()").strip(",").strip("''")
            self.ids.lab2.text = str (p2[c1]).strip("()").strip(",").strip("''")
            self.ids.lab3.text = str (p3[c1]).strip("()").strip(",").strip("''")
            theoption1phrasal = str(p4[c1]).strip("()").strip(",").strip("''")
            theid = str(id[c1]).strip("()").strip(",").strip("''")
        else:
            self.ids.record3.text = str (p[c1]).strip("()").strip(",").strip("''")
            self.ids.lab1.text = str (p3[c1]).strip("()").strip(",").strip("''")
            self.ids.lab2.text = str (p2[c1]).strip("()").strip(",").strip("''")
            self.ids.lab3.text = str (p1[c1]).strip("()").strip(",").strip("''")
            theoption1phrasal = str(p4[c1]).strip("()").strip(",").strip("''")
            theid = str(id[c1]).strip("()").strip(",").strip("''")
        
        
        
     def writeit(self):
        
        f = open("phrasal1.txt","w")
        
        f.write(theid)
        f.close()
     def on_estate_check(self):
        
        if self.ids.ch1.active is True:
            if self.ids.lab1.text == str(p3[c1]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this.",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass
        
        if self.ids.ch3.active is True:
            if self.ids.lab3.text == str(p3[c1]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)


        if self.ids.ch2.active is True:
            content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3) 



class ShowphrResult(Screen):
    
    def on_pre_enter(self, *args):
    
        if theoption1phrasal== "BE AFTER":
            a1 = codecs.open(r'phrsalverbs/be after.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a1))
            
            return
        if theoption1phrasal== "RUB OUT":
            a2 = codecs.open(r'phrsalverbs/rub out.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a2))
            return
         
        if theoption1phrasal== "CUT DOWN":
            a3 = codecs.open(r'phrsalverbs/cut down.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a3))
            return
        if theoption1phrasal== "MUDDLE UP":
            a4 = codecs.open(r'phrsalverbs/muddle up.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a4))
            return
        if theoption1phrasal== "RUB OUT1":
            a5 = codecs.open(r'phrsalverbs/rub out1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a5))
            return
        if theoption1phrasal== "CUT DOWN1":
            a6 = codecs.open(r'phrsalverbs/cut down1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a6))
            return
        
        if theoption1phrasal== "MUDDLE UP1":
            a7 = codecs.open(r'phrsalverbs/muddle up1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a7))
            return
        
        if theoption1phrasal== "RUB UP AGAINST":
            a8 = codecs.open(r'phrsalverbs/rub up against.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a8))
            return
        
        if theoption1phrasal== "CUT DOWN2":
            a9 = codecs.open(r'phrsalverbs/cut down2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a9))
            return
        
        if theoption1phrasal== "MUG UP":
            a10 = codecs.open(r'phrsalverbs/mug up.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a10))
            return
        
        if theoption1phrasal== "CUT DOWN3":
            a11 = codecs.open(r'phrsalverbs/cut down3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a11))
            return
        
        if theoption1phrasal== "RUB UP ON":
            a12 = codecs.open(r'phrsalverbs/rub up on.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a12))
            return
        
        if theoption1phrasal== "KICK OUT":
            a13 = codecs.open(r'phrsalverbs/kick out.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a13))
            return
        
        if theoption1phrasal== "CUT IN":
            a14 = codecs.open(r'phrsalverbs/cut in.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a14))
            return
        
        if theoption1phrasal== "MUG UP ON":
            a15 = codecs.open(r'phrsalverbs/mug up on.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a15))
            return
        
        if theoption1phrasal== "RUSH AWAY":
            a16 = codecs.open(r'phrsalverbs/rush away.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a16))
            return
        
        if theoption1phrasal== "CUT IN1":
            a17 = codecs.open(r'phrsalverbs/cut in1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a17))
            return
        
        if theoption1phrasal== "MULL OVER":
            a18 = codecs.open(r'phrsalverbs/MULL OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a18))
            return
        
        if theoption1phrasal== "RUSH IN":
            a19 = codecs.open(r'phrsalverbs/rush in.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a19))
            return
        
        
        if theoption1phrasal== "CUT IN2":
            a20 = codecs.open(r'phrsalverbs/cut in2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a20))
            return

        
        
        
        
        
        
        
        
        if theoption1phrasal== "MUSCLE IN":
            a21 = codecs.open(r'phrsalverbs/muscle in.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a21))
            return
        
        if theoption1phrasal== "RUSH IN1":
            a22 = codecs.open(r'phrsalverbs/rush in1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a22))
            return
        
        if theoption1phrasal== "CUT IT OUT":
            a23 = codecs.open(r'phrsalverbs/cut it out.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a23))
            return
        
        if theoption1phrasal== "ASK OUT":
            a24 = codecs.open(r'phrsalverbs/ask out.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a24))
            return
        
        if theoption1phrasal== "MUSCLE IN ON":
            a25 = codecs.open(r'phrsalverbs/muscle in on.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a25))
            return
        
        if theoption1phrasal== "RUSH IN2":
            a26 = codecs.open(r'phrsalverbs/rush in2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a26))
            return
        
        if theoption1phrasal== "CUT OFF":
            a27 = codecs.open(r'phrsalverbs/cut off.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a27))
            return
        
        if theoption1phrasal== "MUSCLE INTO":
            a28 = codecs.open(r'phrsalverbs/muscle into.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a28))
            return
        
        if theoption1phrasal== "MUSCLE OUT":
            a29 = codecs.open(r'phrsalverbs/muscle out.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a29))
            return
        
        
        if theoption1phrasal== "RUSH OFF":
            a30 = codecs.open(r'phrsalverbs/rush off.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a30))
            return


        if theoption1phrasal== "MUSCLE INTO":
            a31 = codecs.open(r'phrsalverbs/muscle into.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a31))
            return
       
       
        if theoption1phrasal== "RUSH INTO":
            a32 = codecs.open(r'phrsalverbs/rush into.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a32))
            return
               
        if theoption1phrasal== "CUT OFF1":
            a33 = codecs.open(r'phrsalverbs/CUT OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a33))
            return  
        
        if theoption1phrasal== "CUT OUT":
            a34 = codecs.open(r'phrsalverbs/cut out.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a34))
            return 
        
        if theoption1phrasal== "MOVE AHEAD":
            a35 = codecs.open(r'phrsalverbs/move ahead.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a35))
            return 
        
        if theoption1phrasal== "BE ALONG":
            a36 = codecs.open(r'phrsalverbs/be along.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a36))
            return 
        
        if theoption1phrasal== "RUSH OUT":
            a37 = codecs.open(r'phrsalverbs/rush out.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a37))
            return 
        
        if theoption1phrasal== "CUT OUT1":
            a38 = codecs.open(r'phrsalverbs/CUT OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a38))
            return 
        
        if theoption1phrasal== "MOVE ALONG":
            a39 = codecs.open(r'phrsalverbs/move along.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a39))
            return 
        
        if theoption1phrasal== "RUSTLE UP":
            a40 = codecs.open(r'phrsalverbs/rustle up.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a40))
            return 
        
        
        if theoption1phrasal== "CUT OUT2":
            a41 = codecs.open(r'phrsalverbs/CUT OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a41))
            return 
        
        if theoption1phrasal== "RULE OUT":
            a42 = codecs.open(r'phrsalverbs/rule out.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a42))
            return
        
        if theoption1phrasal== "CUT OUT3":
            a43 = codecs.open(r'phrsalverbs/cut out3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a43))
            return
        
        if theoption1phrasal== "MOVE AWAY":
            a44 = codecs.open(r'phrsalverbs/move away.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a44))
            return
        
        if theoption1phrasal== "RUN ACROSS":
            a45 = codecs.open(r'phrsalverbs/run across.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a45))
            return
        
        if theoption1phrasal== "KICK UP":
            a46 = codecs.open(r'phrsalverbs/kick up.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a46))
            return
        
        if theoption1phrasal== "CUT OUT4":
            a47 = codecs.open(r'phrsalverbs/cut out4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a47))
            return

        if theoption1phrasal== "MOVE AWAY FROM":
            a48 = codecs.open(r'phrsalverbs/move away from.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a48))
            return
        
        if theoption1phrasal== "RUN AFTER":
            a49 = codecs.open(r'phrsalverbs/run after.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a49))
            return
        
        if theoption1phrasal== "CUT OUT ON":
            a50 = codecs.open(r'phrsalverbs/cut out on.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a50))
            return
        
        
        
        
        
        if theoption1phrasal== "MOVE DOWN":
            a51 = codecs.open(r'phrsalverbs/MOVE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a51))
            return
        
        if theoption1phrasal== "RUN AFTER1":
            a52 = codecs.open(r'phrsalverbs/RUN AFTER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a52))
            return
        
        if theoption1phrasal== "CUT THROUGH":
            a53 = codecs.open(r'phrsalverbs/cut THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a53))
            return

        if theoption1phrasal== "MOVE IN":
            a54 = codecs.open(r'phrsalverbs/MOVE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a54))
            return
        
        if theoption1phrasal== "RUN AGAINST":
            a55 = codecs.open(r'phrsalverbs/RUN AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a55))
            return
        
        if theoption1phrasal== "CUT THROUGH1":
            a56 = codecs.open(r'phrsalverbs/CUT THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a56))
            return
        
        if theoption1phrasal== "KILL OFF":
            a57 = codecs.open(r'phrsalverbs/kill off.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a57))
            return
        
        if theoption1phrasal== "MOVE IN ON":
            a58 = codecs.open(r'phrsalverbs/move in on.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a58))
            return
        
        if theoption1phrasal== "RUN ALONG":
            a59 = codecs.open(r'phrsalverbs/run along.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a59))
            return
        
        if theoption1phrasal== "CUT UP":
            a60 = codecs.open(r'phrsalverbs/cut up.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a60))
            return
        
        if theoption1phrasal== "CUT UP1":
            a61 = codecs.open(r'phrsalverbs/cut up1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a61))
            return
        
        
        if theoption1phrasal== "CUT UP2":
            a62 = codecs.open(r'phrsalverbs/cut up2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a62))
            return

        
        if theoption1phrasal== "CUT UP3":
            a63 = codecs.open(r'phrsalverbs/cut up3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a63))
            return
        
        
        if theoption1phrasal== "MOVE OUT":
            a64 = codecs.open(r'phrsalverbs/MOVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a64))
            return
        
        
        if theoption1phrasal== "RUN DOWN":
            a65 = codecs.open(r'phrsalverbs/RUN DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a65))
            return
        
        
        if theoption1phrasal== "DAMP DOWN":
            a66 = codecs.open(r'phrsalverbs/DAMP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a66))
            return
        
        
        if theoption1phrasal== "MOVE OUT":
            a67 = codecs.open(r'phrsalverbs/MOVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a67))
            return
        
        
        if theoption1phrasal== "RUN DOWN":
            a68 = codecs.open(r'phrsalverbs/RUN DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a68))
            return
        
        
        if theoption1phrasal== "DAMP OFF":
            a69 = codecs.open(r'phrsalverbs/DAMP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a69))
            return
        
        
        if theoption1phrasal== "MOVE OUT1":
            a70 = codecs.open(r'phrsalverbs/MOVE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a70))
            return
        
        if theoption1phrasal== "MOVE INTO":
            a71 = codecs.open(r'phrsalverbs/MOVE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a71))
            return
        
        
        if theoption1phrasal== "RUN AROUND":
            a72 = codecs.open(r'phrsalverbs/RUN AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a72))
            return

        
        if theoption1phrasal== "MOVE ON":
            a73 = codecs.open(r'phrsalverbs/MOVE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a73))
            return
        
        
        if theoption1phrasal== "RUN AWAY":
            a74 = codecs.open(r'phrsalverbs/RUN AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a74))
            return
        
        if theoption1phrasal== "MOVE ON1":
            a75 = codecs.open(r'phrsalverbs/MOVE ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a75))
            return
        
        if theoption1phrasal== "ASK IN":
            a76 = codecs.open(r'phrsalverbs/ASK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a76))
            return
        
        if theoption1phrasal== "RUN BY":
            a77 = codecs.open(r'phrsalverbs/RUN BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a77))
            return
        
        
        if theoption1phrasal== "MOVE OUT":
            a78 = codecs.open(r'phrsalverbs/MOVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a78))
            return
        
        if theoption1phrasal== "RUN DOWN1":
            a79 = codecs.open(r'phrsalverbs/RUN DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a79))
            return
        
        if theoption1phrasal== "DAMP DOWN":
            a80 = codecs.open(r'phrsalverbs/DAMP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a80))
            return
        
        if theoption1phrasal== "DAMP OFF":
            a81 = codecs.open(r'phrsalverbs/DAMP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a81))
            return
        
        if theoption1phrasal== "BE AWAY":
            a82 = codecs.open(r'phrsalverbs/BE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a82))
            return
        
        if theoption1phrasal== "DAMP DOWN1":
            a83 = codecs.open(r'phrsalverbs/DAMP DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a83))
            return
        
        if theoption1phrasal== "MOVE TOWARDS":
            a84 = codecs.open(r'phrsalverbs/MOVE TOWARDS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a84))
            return
        
        if theoption1phrasal== "RUN DOWN2":
            a85 = codecs.open(r'phrsalverbs/RUN DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a85))
            return
        
        if theoption1phrasal== "RUN DOWN3":
            a86 = codecs.open(r'phrsalverbs/RUN DOWN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a86))
            return
        
        if theoption1phrasal== "DASH DOWN":
            a87 = codecs.open(r'phrsalverbs/DASH DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a87))
            return
        
        if theoption1phrasal== "MOVE UP":
            a88 = codecs.open(r'phrsalverbs/MOVE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a88))
            return
    
        if theoption1phrasal== "RUN FOR":
            a89 = codecs.open(r'phrsalverbs/RUN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a89))
            return
        
        if theoption1phrasal== "DASH OFF":
            a90 = codecs.open(r'phrsalverbs/DASH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a90))
            return
        
        
        
        if theoption1phrasal== "MOVE UP1":
            a91 = codecs.open(r'phrsalverbs/MOVE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a91))
            return
        
        if theoption1phrasal== "RUN IN":
            a92 = codecs.open(r'phrsalverbs/RUN IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a92))
            return
        
        
        if theoption1phrasal== "COME OUT OF":
            a93 = codecs.open(r'phrsalverbs/COME OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a93))
            return
        
        if theoption1phrasal== "NAFF OFF":
            a94 = codecs.open(r'phrsalverbs/NAFF OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a94))
            return
        
        
        if theoption1phrasal== "RUN IN1":
            a95 = codecs.open(r'phrsalverbs/RUN IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a95))
            return
        
        if theoption1phrasal== "DASH OFF1":
            a96 = codecs.open(r'phrsalverbs/DASH OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a96))
            return
        
        if theoption1phrasal== "DAWN ON":
            a97 = codecs.open(r'phrsalverbs/DAWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a97))
            return
        
        
        if theoption1phrasal== "NAG AT":
            a98 = codecs.open(r'phrsalverbs/NAG AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a98))
            return
        
        
        if theoption1phrasal== "NAIL DOWN":
            a99 = codecs.open(r'phrsalverbs/NAIL DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a99))
            return
        
        
        
        
        if theoption1phrasal== "DEAL IN":
            a100 = codecs.open(r'phrsalverbs/DEAL IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a100))
            return
        
        if theoption1phrasal== "RUN IN3":
            a101 = codecs.open(r'phrsalverbs/RUN IN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a101))
            return
        
        if theoption1phrasal== "NAIL DOWN1":
            a102 = codecs.open(r'phrsalverbs/NAIL DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a102))
            return
        
        if theoption1phrasal== "KIP DOWN":
            a103 = codecs.open(r'phrsalverbs/KIP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a103))
            return
        
        if theoption1phrasal== "RUN INTO":
            a104 = codecs.open(r'phrsalverbs/RUN INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a104))
            return
        
        if theoption1phrasal== "DEAL WITH":
            a105 = codecs.open(r'phrsalverbs/DEAL WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a105))
            return
        
        if theoption1phrasal== "NAIL DOWN2":
            a106 = codecs.open(r'phrsalverbs/NAIL DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a106))
            return
        
        
        if theoption1phrasal== "RUN INTO1":
            a107 = codecs.open(r'phrsalverbs/RUN INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a107))
            return
        
        if theoption1phrasal== "DECIDE ON":
            a108 = codecs.open(r'phrsalverbs/DECIDE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a108))
            return
        
        if theoption1phrasal== "NAIL DOWN3":
            a109 = codecs.open(r'phrsalverbs/NAIL DOWN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a109))
            return
        
        if theoption1phrasal== "RUN OFF":
            a110 = codecs.open(r'phrsalverbs/RUN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a110))
            return
        
        if theoption1phrasal== "RUN IN2":
            a111 = codecs.open(r'phrsalverbs/RUN IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a111))
            return
        
        if theoption1phrasal== "DEAL IN1":
            a112 = codecs.open(r'phrsalverbs/DEAL IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a112))
            return
        
        
        if theoption1phrasal== "DECIDE UPON":
            a113 = codecs.open(r'phrsalverbs/DECIDE UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a113))
            return
        
        if theoption1phrasal== "NAME AFTER":
            a114 = codecs.open(r'phrsalverbs/NAME AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a114))
            return
        
        if theoption1phrasal== "RUN OFF WITH":
            a115 = codecs.open(r'phrsalverbs/RUN OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a115))
            return
        
        if theoption1phrasal== "ISSUE FORTH":
            a116 = codecs.open(r'phrsalverbs/ISSUE FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a116))
            return
        
        if theoption1phrasal== "ASK FOR":
            a117 = codecs.open(r'phrsalverbs/ASK FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a117))
            return
        
        if theoption1phrasal== "DECK OUT":
            a118 = codecs.open(r'phrsalverbs/DECK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a118))
            return
        
        
        if theoption1phrasal== "NARROW DOWN":
            a119 = codecs.open(r'phrsalverbs/NARROW DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a119))
            return
        
        if theoption1phrasal== "NERD OUT":
            a120 = codecs.open(r'phrsalverbs/NERD OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a120))
            return
        
        
        if theoption1phrasal== "DIAL IN":
            a121 = codecs.open(r'phrsalverbs/DIAL IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a121))
            return
        
        if theoption1phrasal== "NERD OUT1":
            a122 = codecs.open(r'phrsalverbs/NERD OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a122))
            return
        
        if theoption1phrasal== "RUN OFF WITH1":
            a123 = codecs.open(r'phrsalverbs/RUN OFF WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a123))
            return
        
        if theoption1phrasal== "DIAL INTO":
            a124 = codecs.open(r'phrsalverbs/DIAL INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a124))
            return
        
        if theoption1phrasal== "NIP OFF":
            a125 = codecs.open(r'phrsalverbs/NIP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a125))
            return
        
        if theoption1phrasal== "RUN ON":
            a126 = codecs.open(r'phrsalverbs/RUN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a126))
            return
        
        if theoption1phrasal== "DIAL UP":
            a127 = codecs.open(r'phrsalverbs/DIAL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a127))
            return
        
        if theoption1phrasal== "BE CUT OUT FOR":
            a128 = codecs.open(r'phrsalverbs/BE CUT OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a128))
            return
        
        
        if theoption1phrasal== "NIP OUT":
            a129 = codecs.open(r'phrsalverbs/NIP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a129))
            return
            
        if theoption1phrasal== "RUN OUT OF":
            a130 = codecs.open(r'phrsalverbs/RUN OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a130))
            return
            
            
            
            
        if theoption1phrasal== "COME OUT":
            a139 = codecs.open(r'phrsalverbs/COME OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a139))
            return   
            
            
        if theoption1phrasal== "DIE AWAY":
            a131 = codecs.open(r'phrsalverbs/DIE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a131))
            return
        
        if theoption1phrasal== "NOD OFF":
            a132 = codecs.open(r'phrsalverbs/NOD OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a132))
            return
        
        if theoption1phrasal== "RUN OVER":
            a133 = codecs.open(r'phrsalverbs/RUN OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a133))
            return
        
        if theoption1phrasal== "DIE BACK":
            a134 = codecs.open(r'phrsalverbs/DIE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a134))
            return
        
        if theoption1phrasal== "NOD THROUGH":
            a135 = codecs.open(r'phrsalverbs/NOD THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a135))
            return
        
        if theoption1phrasal== "RUN OVER1":
            a136 = codecs.open(r'phrsalverbs/RUN OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a136))
            return
            
        if theoption1phrasal== "DIE DOWN":
            a137 = codecs.open(r'phrsalverbs/DIE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a137))
            return  
            
        if theoption1phrasal== "NOSE ABOUT":
            a138 = codecs.open(r'phrsalverbs/NOSE ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a138))
            return
            
            
        



































            
        if theoption1phrasal== "RUN OVER2":
            a140 = codecs.open(r'phrsalverbs/RUN OVER2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a140))
            return
        
        if theoption1phrasal== "DIE FOR":
            a141 = codecs.open(r'phrsalverbs/DIE FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a141))
            return
        
        if theoption1phrasal== "NOSE AROUND":
            a142 = codecs.open(r'phrsalverbs/NOSE AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a142))
            return
        
        if theoption1phrasal== "RUN PAST":
            a143 = codecs.open(r'phrsalverbs/RUN PAST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a143))
            return
        
        if theoption1phrasal== "DIE OFF":
            a144 = codecs.open(r'phrsalverbs/DIE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a144))
            return
        
        if theoption1phrasal== "NOSE OUT":
            a145 = codecs.open(r'phrsalverbs/NOSE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a145))
            return
        
        
        if theoption1phrasal== "RUN THROUGH":
            a146 = codecs.open(r'phrsalverbs/RUN THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a146))
            return
        
        
        if theoption1phrasal== "DIE ON":
            a147 = codecs.open(r'phrsalverbs/DIE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a147))
            return
        
        if theoption1phrasal== "NOSE OUT1":
            a148 = codecs.open(r'phrsalverbs/NOSE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a148))
            return
        
        
        if theoption1phrasal== "RUN THROUGH1":
            a149 = codecs.open(r'phrsalverbs/RUN THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a149))
            return
        if theoption1phrasal== "COME OUT IN":
            a150 = codecs.open(r'phrsalverbs/COME OUT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a150))
            return
        
        
        

        if theoption1phrasal== "DIE OUT":
            a151 = codecs.open(r'phrsalverbs/DIE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a151))
            return
        
        if theoption1phrasal== "NOTE DOWN":
            a152 = codecs.open(r'phrsalverbs/NOTE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a152))
            return
        
        if theoption1phrasal== "RUN TO":
            a153 = codecs.open(r'phrsalverbs/RUN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a153))
            return
        
        if theoption1phrasal== "DIG IN":
            a154 = codecs.open(r'phrsalverbs/DIG IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a154))
            return
        
        if theoption1phrasal== "NUT OUT":
            a155 = codecs.open(r'phrsalverbs/NUT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a155))
            return
        
        if theoption1phrasal== "RUN TO":
            a156 = codecs.open(r'phrsalverbs/RUN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a156))
            return
        
        if theoption1phrasal== "RUN TO1":
            a157 = codecs.open(r'phrsalverbs/RUN TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a157))
            return
        
        
        if theoption1phrasal== "DIG IN1":
            a158 = codecs.open(r'phrsalverbs/DIG IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a158))
            return
        
        
        if theoption1phrasal== "NUZZLE UP":
            a159 = codecs.open(r'phrsalverbs/NUZZLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a159))
            return
        
        
        if theoption1phrasal== "RUN TO2":
            a160 = codecs.open(r'phrsalverbs/RUN TO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a160))
            return
        
        if theoption1phrasal== "DIG INTO":
            a161 = codecs.open(r'phrsalverbs/DIG INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a161))
            return
        
        if theoption1phrasal== "ASK FOR1":
            a162 = codecs.open(r'phrsalverbs/ASK FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a162))
            return
        
        if theoption1phrasal== "NUZZLE UP TO":
            a163 = codecs.open(r'phrsalverbs/NUZZLE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a163))
            return
        
        if theoption1phrasal== "RUN UP":
            a164 = codecs.open(r'phrsalverbs/RUN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a164))
            return
        
        
        if theoption1phrasal== "DIG OUT":
            a165 = codecs.open(r'phrsalverbs/DIG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a165))
            return
        
        if theoption1phrasal== "OCCUR TO":
            a166 = codecs.open(r'phrsalverbs/OCCUR TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a166))
            return
        
        if theoption1phrasal== "RUN UP1":
            a167 = codecs.open(r'phrsalverbs/RUN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a167))
            return
        
        if theoption1phrasal== "DIG OUT1":
            a168 = codecs.open(r'phrsalverbs/DIG OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a168))
            return
        
        
        if theoption1phrasal== "OPEN UP":
            a169 = codecs.open(r'phrsalverbs/OPEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a169))
            return
        
        if theoption1phrasal== "RUN UP2":
            a170 = codecs.open(r'phrsalverbs/RUN UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a170))
            return
        
        
        if theoption1phrasal== "DIG UP":
            a171 = codecs.open(r'phrsalverbs/DIG UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a171))
            return
        
        if theoption1phrasal== "OPEN UP1":
            a172 = codecs.open(r'phrsalverbs/OPEN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a172))
            return
        
        if theoption1phrasal== "BE CUT UP":
            a173 = codecs.open(r'phrsalverbs/BE CUT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a173))
            return
        
        if theoption1phrasal== "RUN UP3":
            a174 = codecs.open(r'phrsalverbs/RUN UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a174))
            return
        
        if theoption1phrasal== "DIG UP1":
            a175 = codecs.open(r'phrsalverbs/DIG UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a175))
            return
            
        
        if theoption1phrasal== "OPEN UP2":
            a176 = codecs.open(r'phrsalverbs/OPEN UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a176))
            return 
            
        
        if theoption1phrasal== "RUN UP AGAINST":
            a177 = codecs.open(r'phrsalverbs/RUN UP AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a177))
            return 
            
            
        if theoption1phrasal== "DIG UP2":
            a178 = codecs.open(r'phrsalverbs/DIG UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a178))
            return   
            
            
        if theoption1phrasal== "OPERATE ON":
            a179 = codecs.open(r'phrsalverbs/OPERATE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a179))
            return
            
        if theoption1phrasal== "RUN UP ON":
            a180 = codecs.open(r'phrsalverbs/RUN UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a180))
            return    
        
        if theoption1phrasal== "DIME OUT":
            a181 = codecs.open(r'phrsalverbs/DIME OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a181))
            return 
            
        if theoption1phrasal== "OPT FOR":
            a182 = codecs.open(r'phrsalverbs/OPT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a182))
            return    
            
        if theoption1phrasal== "RUN WITH":
            a183 = codecs.open(r'phrsalverbs/RUN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a183))
            return   
            
        if theoption1phrasal== "KIP DOWN ON":
            a184 = codecs.open(r'phrsalverbs/KIP DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a184))
            return    
            
        if theoption1phrasal== "DINE OUT":
            a185 = codecs.open(r'phrsalverbs/DINE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a185))
            return     
            
        if theoption1phrasal== "OPT IN":
            a186 = codecs.open(r'phrsalverbs/OPT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a186))
            return  
        
        if theoption1phrasal== "SACK OUT":
            a187 = codecs.open(r'phrsalverbs/SACK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a187))
            return
        
        if theoption1phrasal== "DINE OUT ON":
            a188 = codecs.open(r'phrsalverbs/DINE OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a188))
            return
        if theoption1phrasal== "OPT INTO":
            a189 = codecs.open(r'phrsalverbs/OPT INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a189))
            return 
        
        if theoption1phrasal== "SADDLE UP":
            a190 = codecs.open(r'phrsalverbs/SADDLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a190))
            return 
        
        if theoption1phrasal== "MOVE ALONG1":
            a191 = codecs.open(r'phrsalverbs/MOVE ALONG1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a191))
            return
        
        if theoption1phrasal== "DIP IN":
            a192 = codecs.open(r'phrsalverbs/DIP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a192))
            return
        
        if theoption1phrasal== "OPT OUT":
            a193 = codecs.open(r'phrsalverbs/OPT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a193))
            return
        
        if theoption1phrasal== "SADDLE WITH":
            a194 = codecs.open(r'phrsalverbs/SADDLE WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a194))
            return
        
        if theoption1phrasal== "DIP INTO":
            a195 = codecs.open(r'phrsalverbs/DIP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a195))
            return
        
        if theoption1phrasal== "COME OUT1":
            a196 = codecs.open(r'phrsalverbs/COME OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a196))
            return
        
        if theoption1phrasal== "ORDER ABOUT":
            a197 = codecs.open(r'phrsalverbs/ORDER ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a197))
            return
        
        if theoption1phrasal== "SAG OFF":
            a198 = codecs.open(r'phrsalverbs/SAG OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a198))
            return
        
        if theoption1phrasal== "DIP INTO":
            a199 = codecs.open(r'phrsalverbs/DIP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a199))
            return
        if theoption1phrasal== "ORDER AROUND":
            a200 = codecs.open(r'phrsalverbs/ORDER AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a200))
            return
        

        if theoption1phrasal== "DIP INTO1":
            a201 = codecs.open(r'phrsalverbs/DIP INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a201))
            return
        

        if theoption1phrasal== "SAIL INTO":
            a202 = codecs.open(r'phrsalverbs/SAIL INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a202))
            return
        
        if theoption1phrasal== "DIP OUT":
            a203 = codecs.open(r'phrsalverbs/DIP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a203))
            return
        

        if theoption1phrasal== "ORDER IN":
            a204 = codecs.open(r'phrsalverbs/ORDER IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a204))
            return
        
        if theoption1phrasal== "SAIL THROUGH":
            a205 = codecs.open(r'phrsalverbs/SAIL THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a205))
            return
        
        if theoption1phrasal== "DISAGREE WITH":
            a206 = codecs.open(r'phrsalverbs/DISAGREE WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a206))
            return
        
        if theoption1phrasal== "ORDER OUT":
            a207 = codecs.open(r'phrsalverbs/ORDER OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a207))
            return
        
        if theoption1phrasal== "KISS OFF":
            a208 = codecs.open(r'phrsalverbs/KISS OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a208))
            return
        

        if theoption1phrasal== "SALLY FORTH":
            a209 = codecs.open(r'phrsalverbs/SALLY FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a209))
            return
         
            
        if theoption1phrasal== "DISH OUT":
            a210 = codecs.open(r'phrsalverbs/DISH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a210))
            return  
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        if theoption1phrasal== "ORDER OUT FOR":
            a211 = codecs.open(r'phrsalverbs/ORDER OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a211))
            return

        if theoption1phrasal== "SALLY OUT":
            a212 = codecs.open(r'phrsalverbs/SALLY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a212))
            return

        if theoption1phrasal== "DISH OUT1":
            a213 = codecs.open(r'phrsalverbs/DISH OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a213))
            return

        if theoption1phrasal== "ORDER UP":
            a214 = codecs.open(r'phrsalverbs/ORDER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a214))
            return

        if theoption1phrasal== "SALT AWAY":
            a215 = codecs.open(r'phrsalverbs/SALT AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a215))
            return

        if theoption1phrasal== "DISH OUT2":
            a216 = codecs.open(r'phrsalverbs/DISH OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a216))
            return

        if theoption1phrasal== "OWE TO":
            a217 = codecs.open(r'phrsalverbs/OWE TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a217))
            return

        if theoption1phrasal== "SAVE ON":
            a218 = codecs.open(r'phrsalverbs/SAVE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a218))
            return

        if theoption1phrasal== "ASK AROUND":
            a219 = codecs.open(r'phrsalverbs/ASK AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a219))
            return

        if theoption1phrasal== "DISH UP":
            a220 = codecs.open(r'phrsalverbs/DISH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a220))
            return


















        if theoption1phrasal== "OWN UP":
            a221 = codecs.open(r'phrsalverbs/OWN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a221))
            return
        
        if theoption1phrasal== "SAVE UP":
            a222 = codecs.open(r'phrsalverbs/SAVE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a222))
            return
        
        if theoption1phrasal== "DIVE IN":
            a223 = codecs.open(r'phrsalverbs/DIVE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a223))
            return

        if theoption1phrasal== "PACK AWAY":
            a224 = codecs.open(r'phrsalverbs/PACK AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a224))
            return
        
        if theoption1phrasal== "SAVE UP1":
            a225 = codecs.open(r'phrsalverbs/SAVE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a225))
            return
        
        if theoption1phrasal== "DIVE IN1":
            a226 = codecs.open(r'phrsalverbs/DIVE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a226))
            return
        
        if theoption1phrasal== "PACK IT IN":
            a227 = codecs.open(r'phrsalverbs/PACK IT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a227))
            return

        if theoption1phrasal== "SAW OFF":
            a228 = codecs.open(r'phrsalverbs/SAW OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a228))
            return
        
        if theoption1phrasal== "DIVE INTO":
            a229 = codecs.open(r'phrsalverbs/DIVE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a229))
            return

        if theoption1phrasal== "BACK OFF":
            a230 = codecs.open(r'phrsalverbs/BACK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a230))
            return
        
        if theoption1phrasal=="BE DOWN":
            a231 = codecs.open(r'phrsalverbs/BE DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a231))
            return
        
        if theoption1phrasal=="PACK IN":
            a232 = codecs.open(r'phrsalverbs/PACK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a232))
            return
        
        if theoption1phrasal== "SAW UP":
            a233 = codecs.open(r'phrsalverbs/SAW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a233))
            return
        
        if theoption1phrasal== "DIVIDE UP":
            a234 = codecs.open(r'phrsalverbs/DIVIDE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a234))
            return
        
        if theoption1phrasal== "PACK IN1":
            a235 = codecs.open(r'phrsalverbs/PACK IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a235))
            return
        
        if theoption1phrasal== "SCALE BACK":
            a236 = codecs.open(r'phrsalverbs/SCALE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a236))
            return
        
        if theoption1phrasal== "DIVVY OUT":
            a237 = codecs.open(r'phrsalverbs/DIVVY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a237))
            return
        
        if theoption1phrasal== "PACK IN2":
            a238 = codecs.open(r'phrsalverbs/PACK IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a238))
            return
        
        if theoption1phrasal== "SCALE BACK":
            a239 = codecs.open(r'phrsalverbs/SCALE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a239))
            return
        
        if theoption1phrasal== "DIVVY UP":
            a240 = codecs.open(r'phrsalverbs/DIVVY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a240))
            return
        
        if theoption1phrasal== "PACK IN3":
            a241 = codecs.open(r'phrsalverbs/PACK IN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a241))
            return


        if theoption1phrasal== "SCALE BACK1":
            a242 = codecs.open(r'phrsalverbs/SCALE BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a242))
            return
        

        if theoption1phrasal== "COME OUT2":
            a243 = codecs.open(r'phrsalverbs/COME OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a243))
            return
        
        if theoption1phrasal== "SCALE DOWN":
            a244 = codecs.open(r'phrsalverbs/SCALE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a244))
            return
        
        if theoption1phrasal== "DO AWAY WITH":
            a245 = codecs.open(r'phrsalverbs/DO AWAY WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a245))
            return
        
        if theoption1phrasal== "PACK OFF":
            a246 = codecs.open(r'phrsalverbs/PACK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a246))
            return
        
        if theoption1phrasal== "SCALE UP":
            a247 = codecs.open(r'phrsalverbs/SCALE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a247))
            return
        
        if theoption1phrasal== "DO IN":
            a248 = codecs.open(r'phrsalverbs/DO IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a248))
            return
        
        if theoption1phrasal== "PACK OUT":
            a249 = codecs.open(r'phrsalverbs/PACK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a249))
            return
        
        if theoption1phrasal== "SCARE AWAY":
            a250 = codecs.open(r'phrsalverbs/SCARE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(a250))
            return

























        if theoption1phrasal== "DO IN1":
            b1 = codecs.open(r'phrsalverbs/DO IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b1))
            return


        if theoption1phrasal== "PACK UP":
            b2 = codecs.open(r'phrsalverbs/PACK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b2))
            return
        

        if theoption1phrasal== "SCARE OFF":
            b3 = codecs.open(r'phrsalverbs/SCARE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b3))
            return
        
        if theoption1phrasal== "KISS OFF1":
            b4 = codecs.open(r'phrsalverbs/KISS OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b4))
            return
        
        if theoption1phrasal== "DO OUT OF":
            b5 = codecs.open(r'phrsalverbs/DO OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b5))
            return
        
        if theoption1phrasal== "PACK UP":
            b6 = codecs.open(r'phrsalverbs/PACK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b6))
            return
        
        if theoption1phrasal== "PACK UP1":
            b7 = codecs.open(r'phrsalverbs/PACK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b7))
            return
        
        if theoption1phrasal== "SCOUT ABOUT":
            b8 = codecs.open(r'phrsalverbs/SCOUT ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b8))
            return
        
        if theoption1phrasal== "DO OVER":
            b9 = codecs.open(r'phrsalverbs/DO OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b9))
            return
        
        if theoption1phrasal== "PACK UP2":
            b10 = codecs.open(r'phrsalverbs/PACK UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b10))
            return
        
        if theoption1phrasal== "SCOUT AROUND":
            b11 = codecs.open(r'phrsalverbs/SCOUT AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b11))
            return
        
        if theoption1phrasal== "DO UP":
            b12 = codecs.open(r'phrsalverbs/DO UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b12))
            return
        
        if theoption1phrasal== "PAD DOWN":
            b13 = codecs.open(r'phrsalverbs/PAD DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b13))
            return
        
        if theoption1phrasal== "SCOUT OUT":
            b14 = codecs.open(r'phrsalverbs/SCOUT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b14))
            return
        
        if theoption1phrasal== "DO UP":
            b15 = codecs.open(r'phrsalverbs/DO UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b15))
            return
        
        if theoption1phrasal== "BE DOWN1":
            b16 = codecs.open(r'phrsalverbs/BE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b16))
            return
        
        if theoption1phrasal== "PAD OUT":
            b17 = codecs.open(r'phrsalverbs/PAD OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b17))
            return
        
        if theoption1phrasal== "SCOUT ROUND":
            b18 = codecs.open(r'phrsalverbs/SCOUT ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b18))
            return
        
        if theoption1phrasal== "DO WITH":
            b19 = codecs.open(r'phrsalverbs/DO WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b19))
            return
        
        if theoption1phrasal== "PAIR OFF":
            b20 = codecs.open(r'phrsalverbs/PAIR OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b20))
            return
        
        if theoption1phrasal== "DO UP1":
            b21 = codecs.open(r'phrsalverbs/DO UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b21))
            return
        
        if theoption1phrasal== "SCOUT UP":
            b22 = codecs.open(r'phrsalverbs/SCOUT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b22))
            return
        
        if theoption1phrasal== "DO WITHOUT":
            b23 = codecs.open(r'phrsalverbs/DO WITHOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b23))
            return
        
        if theoption1phrasal== "PAIR OFF1":
            b24 = codecs.open(r'phrsalverbs/PAIR OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b24))
            return
        
        if theoption1phrasal== "SCRAPE ALONG":
            b25 = codecs.open(r'phrsalverbs/SCRAPE ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b25))
            return
        
        if theoption1phrasal== "DOB IN":
            b26 = codecs.open(r'phrsalverbs/DOB IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b26))
            return
        
        if theoption1phrasal== "PAIR OFF2":
            b27 = codecs.open(r'phrsalverbs/PAIR OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b27))
            return
        
        if theoption1phrasal== "COME OUT3":
            b28 = codecs.open(r'phrsalverbs/COME OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b28))
            return
        
        if theoption1phrasal== "SCRAPE BY":
            b29 = codecs.open(r'phrsalverbs/SCRAPE BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b29))
            return
        
        if theoption1phrasal== "DOB IN1":
            b30 = codecs.open(r'phrsalverbs/DOB IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b30))
            return
        
        if theoption1phrasal== "PAIR OFF WITH":
            b31 = codecs.open(r'phrsalverbs/PAIR OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b31))
            return

        if theoption1phrasal== "SCRAPE IN":
            b32 = codecs.open(r'phrsalverbs/SCRAPE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b32))
            return
        
        if theoption1phrasal== "DOB IN2":
            b33 = codecs.open(r'phrsalverbs/DOB IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b33))
            return
        
        if theoption1phrasal== "PAIR UP":
            b34 = codecs.open(r'phrsalverbs/PAIR UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b34))
            return
        
        if theoption1phrasal== "SCRAPE INTO":
            b35 = codecs.open(r'phrsalverbs/SCRAPE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b35))
            return
        
        if theoption1phrasal== "DOLE OUT":
            b36 = codecs.open(r'phrsalverbs/DOLE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b36))
            return
        
        if theoption1phrasal== "PAL ABOUT":
            b37 = codecs.open(r'phrsalverbs/PAL ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b37))
            return
        
        if theoption1phrasal== "SCRAPE THROUGH":
            b38 = codecs.open(r'phrsalverbs/SCRAPE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b38))
            return
        
        if theoption1phrasal== "KISS UP TO":
            b39 = codecs.open(r'phrsalverbs/KISS UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b39))
            return
        
        if theoption1phrasal== "DOSS ABOUT":
            b40 = codecs.open(r'phrsalverbs/DOSS ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b40))
            return

        if theoption1phrasal== "PAL UP":
            b41 = codecs.open(r'phrsalverbs/PAL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b41))
            return

        if theoption1phrasal== "SCRAPE TOGETHER":
            b42 = codecs.open(r'phrsalverbs/SCRAPE TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b42))
            return

        if theoption1phrasal== "DOSS AROUND":
            b43 = codecs.open(r'phrsalverbs/DOSS AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b43))
            return

        if theoption1phrasal== "PAL AROUND":
            b44 = codecs.open(r'phrsalverbs/PAL AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b44))
            return

        if theoption1phrasal== "SCRAPE UP":
            b45 = codecs.open(r'phrsalverbs/SCRAPE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b45))
            return
        
        if theoption1phrasal== "DOSS DOWN":
            b46 = codecs.open(r'phrsalverbs/DOSS DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b46))
            return
        
        if theoption1phrasal== "PALM OFF":
            b47 = codecs.open(r'phrsalverbs/PALM OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b47))
            return
        
        if theoption1phrasal== "SCRATCH AROUND FOR":
            b48 = codecs.open(r'phrsalverbs/SCRATCH AROUND FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b48))
            return
        
        if theoption1phrasal== "DOUBLE AS":
            b49 = codecs.open(r'phrsalverbs/DOUBLE AS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b49))
            return
        
        if theoption1phrasal== "ASK AROUND1":
            b50 = codecs.open(r'phrsalverbs/ASK AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b50))
            return

        if theoption1phrasal== "PALM OFF1":
            b51 = codecs.open(r'phrsalverbs/PALM OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b51))
            return
        
        if theoption1phrasal== "SCREEN OFF":
            b52 = codecs.open(r'phrsalverbs/SCREEN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b52))
            return
        
        if theoption1phrasal== "DOUBLE BACK":
            b53 = codecs.open(r'phrsalverbs/DOUBLE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b53))
            return
        
        if theoption1phrasal== "PAN OUT":
            b54 = codecs.open(r'phrsalverbs/PAN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b54))
            return
        
        if theoption1phrasal== "SCREEN OUT":
            b55 = codecs.open(r'phrsalverbs/SCREEN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b55))
            return
        
        if theoption1phrasal== "DOUBLE DOWN":
            b56 = codecs.open(r'phrsalverbs/DOUBLE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b56))
            return
        
        if theoption1phrasal== "PAPER OVER":
            b57 = codecs.open(r'phrsalverbs/PAPER OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b57))
            return
        
        if theoption1phrasal== "PARE BACK":
            b58 = codecs.open(r'phrsalverbs/PARE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b58))
            return
        
        if theoption1phrasal== "DOUBLE DOWN ON":
            b59 = codecs.open(r'phrsalverbs/DOUBLE DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b59))
            return
        
        if theoption1phrasal== "PARE DOWN":
            b60 = codecs.open(r'phrsalverbs/PARE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b60))
            return
        
        if theoption1phrasal== "BE DOWN ON":
            b61 = codecs.open(r'phrsalverbs/BE DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b61))
            return
        
        if theoption1phrasal== "SCREEN OUT":
            b62 = codecs.open(r'phrsalverbs/SCREEN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b62))
            return
        
        if theoption1phrasal== "DOUBLE OVER":
            b63 = codecs.open(r'phrsalverbs/DOUBLE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b63))
            return
        
        if theoption1phrasal== "PART WITH":
            b64 = codecs.open(r'phrsalverbs/PART WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b64))
            return
        
        if theoption1phrasal== "SCREEN OUT1":
            b65 = codecs.open(r'phrsalverbs/SCREEN OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b65))
            return
        
        if theoption1phrasal== "DOUBLE UP":
            b66 = codecs.open(r'phrsalverbs/DOUBLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b66))
            return

        if theoption1phrasal== "PASS AROUND":
            b67 = codecs.open(r'phrsalverbs/PASS AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b67))
            return
        
        if theoption1phrasal== "SCREW AROUND":
            b68 = codecs.open(r'phrsalverbs/SCREW AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b68))
            return
        
        if theoption1phrasal== "DOUBLE UP1":
            b69 = codecs.open(r'phrsalverbs/DOUBLE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b69))
            return
        
        if theoption1phrasal== "PASS AS":
            b70 = codecs.open(r'phrsalverbs/PASS AS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b70))
            return
        
        if theoption1phrasal== "SCREEN OUT2":
            b71 = codecs.open(r'phrsalverbs/SCREEN OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b71))
            return
        
        if theoption1phrasal== "SCREW AROUND1":
            b72 = codecs.open(r'phrsalverbs/SCREW AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b72))
            return
        
        if theoption1phrasal== "COME OUT4":
            b73 = codecs.open(r'phrsalverbs/COME OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b73))
            return
        
        if theoption1phrasal== "DOUBLE UP AS":
            b74 = codecs.open(r'phrsalverbs/DOUBLE UP AS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b74))
            return
        
        if theoption1phrasal== "PASS AWAY":
            b75 = codecs.open(r'phrsalverbs/PASS AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b75))
            return
        
        if theoption1phrasal== "SCREW OVER":
            b76 = codecs.open(r'phrsalverbs/SCREW OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b76))
            return
        
        if theoption1phrasal== "DOZE OFF":
            b77 = codecs.open(r'phrsalverbs/DOZE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b77))
            return
        
        if theoption1phrasal== "PASS BACK":
            b78 = codecs.open(r'phrsalverbs/PASS BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b78))
            return
        
        if theoption1phrasal== "SCREW UP":
            b79 = codecs.open(r'phrsalverbs/SCREW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b79))
            return
        
        if theoption1phrasal== "DRAG ON":
            b80 = codecs.open(r'phrsalverbs/DRAG ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b80))
            return

        if theoption1phrasal== "PASS BY":
            b81 = codecs.open(r'phrsalverbs/PASS BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b81))
            return
        
        if theoption1phrasal== "SCUZZ UP":
            b82 = codecs.open(r'phrsalverbs/SCUZZ UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b82))
            return
        
        if theoption1phrasal== "DRAW BACK":
            b83 = codecs.open(r'phrsalverbs/DRAW BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b83))
            return
        
        if theoption1phrasal== "KNUCKLE DOWN":
            b84 = codecs.open(r'phrsalverbs/KNUCKLE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b84))
            return
        
        if theoption1phrasal== "PASS BY":
            b85 = codecs.open(r'phrsalverbs/PASS BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b85))
            return
        
        if theoption1phrasal== "SEE ABOUT":
            b86 = codecs.open(r'phrsalverbs/SEE ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b86))
            return
        
        if theoption1phrasal== "DRAW DOWN":
            b87 = codecs.open(r'phrsalverbs/DRAW DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b87))
            return
        
        if theoption1phrasal== "PASS BY1":
            b88 = codecs.open(r'phrsalverbs/PASS BY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b88))
            return
        
        if theoption1phrasal== "SEE INTO":
            b89 = codecs.open(r'phrsalverbs/SEE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b89))
            return
        
        if theoption1phrasal== "DRAW DOWN1":
            b90 = codecs.open(r'phrsalverbs/DRAW DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b90))
            return
        
        if theoption1phrasal== "PASS BY2":
            b91 = codecs.open(r'phrsalverbs/PASS BY2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b91))
            return
        
        if theoption1phrasal== "SEE INTO":
            b92 = codecs.open(r'phrsalverbs/SEE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b92))
            return
        
        if theoption1phrasal== "PASS DOWN":
            b93 = codecs.open(r'phrsalverbs/PASS DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b93))
            return
        
        if theoption1phrasal== "SEE OFF":
            b94 = codecs.open(r'phrsalverbs/SEE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b94))
            return
        
        if theoption1phrasal== "DRAW DOWN2":
            b95 = codecs.open(r'phrsalverbs/DRAW DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b95))
            return
        
        if theoption1phrasal== "PASS FOR":
            b96 = codecs.open(r'phrsalverbs/PASS FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b96))
            return
        
        if theoption1phrasal== "BACK DOWN":
            b97 = codecs.open(r'phrsalverbs/BACK DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b97))
            return
        
        if theoption1phrasal== "ASK AFTER":
            b98 = codecs.open(r'phrsalverbs/ASK AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b98))
            return
        
        if theoption1phrasal== "DRAW EVEN":
            b99 = codecs.open(r'phrsalverbs/DRAW EVEN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b99))
            return
        
        if theoption1phrasal== "PASS OFF":
            b100 = codecs.open(r'phrsalverbs/PASS OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b100))
            return
        
        if theoption1phrasal== "SEE OFF1":
            b101 = codecs.open(r'phrsalverbs/SEE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b101))
            return
        
       
       
       
       
       
        if theoption1phrasal== "SEE OUT":
            b102 = codecs.open(r'phrsalverbs/SEE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b102))
            return
        
        if theoption1phrasal== "DRAW IN":
            b103 = codecs.open(r'phrsalverbs/DRAW IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b103))
            return
        
        if theoption1phrasal== "PASS OFF1":
            b104 = codecs.open(r'phrsalverbs/PASS OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b104))
            return
        
        if theoption1phrasal== "SEE THROUGH":
            b105 = codecs.open(r'phrsalverbs/SEE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b105))
            return
        
        if theoption1phrasal== "DRAW IN1":
            b106 = codecs.open(r'phrsalverbs/DRAW IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b106))
            return
        
        if theoption1phrasal== "PASS ON":
            b107 = codecs.open(r'phrsalverbs/PASS ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b107))
            return
        
        if theoption1phrasal== "SEE THROUGH1":
            b109 = codecs.open(r'phrsalverbs/SEE THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b109))
            return
        
        if theoption1phrasal== "BE DOWN WITH":
            b110 = codecs.open(r'phrsalverbs/BE DOWN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b110))
            return


        if theoption1phrasal== "DRAW INTO":
            b111 = codecs.open(r'phrsalverbs/DRAW INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b111))
            return
        
        if theoption1phrasal== "PASS ON1":
            b112 = codecs.open(r'phrsalverbs/PASS ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b112))
            return
        
        if theoption1phrasal== "SEE TO":
            b113 = codecs.open(r'phrsalverbs/SEE TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b113))
            return
        
        if theoption1phrasal== "DRAW ON":
            b114 = codecs.open(r'phrsalverbs/DRAW ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b114))
            return
        
        if theoption1phrasal== "PASS ON2":
            b115 = codecs.open(r'phrsalverbs/PASS ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b115))
            return
        
        if theoption1phrasal== "SELL OFF":
            b116 = codecs.open(r'phrsalverbs/SELL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b116))
            return
        
        if theoption1phrasal== "DRAW ON1":
            b117 = codecs.open(r'phrsalverbs/DRAW ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b117))
            return
        
        if theoption1phrasal== "PASS ON TO":
            b118 = codecs.open(r'phrsalverbs/PASS ON TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b118))
            return
        
        if theoption1phrasal== "SELL OFF1":
            b119 = codecs.open(r'phrsalverbs/SELL OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b119))
            return
        
        if theoption1phrasal== "DRAW ON2":
            b120 = codecs.open(r'phrsalverbs/DRAW ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b120))
            return
        
        if theoption1phrasal== "BE FED UP":
            b121 = codecs.open(r'phrsalverbs/BE FED UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b121))
            return
        
        if theoption1phrasal== "PASS OUT":
            b122 = codecs.open(r'phrsalverbs/PASS OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b122))
            return
        
        if theoption1phrasal== "SELL ON":
            b123 = codecs.open(r'phrsalverbs/SELL ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b123))
            return
        
        if theoption1phrasal== "DRAW OUT":
            b124 = codecs.open(r'phrsalverbs/DRAW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b124))
            return
        
        if theoption1phrasal== "PASS OUT1":
            b125 = codecs.open(r'phrsalverbs/PASS OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b125))
            return
        
        if theoption1phrasal== "SELL ON":
            b126 = codecs.open(r'phrsalverbs/SELL ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b126))
            return
        
        if theoption1phrasal== "DRAW OUT1":
            b127 = codecs.open(r'phrsalverbs/DRAW OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b127))
            return
        
        if theoption1phrasal== "PASS OVER":
            b128 = codecs.open(r'phrsalverbs/PASS OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b128))
            return
        
        if theoption1phrasal== "SELL OUT":
            b129 = codecs.open(r'phrsalverbs/SELL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b129))
            return 
        
        if theoption1phrasal== "DRAW UP":
            b130 = codecs.open(r'phrsalverbs/DRAW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b130))
            return
        
        if theoption1phrasal== "SELL ON1":
            b131 = codecs.open(r'phrsalverbs/SELL ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b131))
            return

        if theoption1phrasal== "SELL ON":
            b132 = codecs.open(r'phrsalverbs/SELL ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b132))
            return
        
        if theoption1phrasal== "PASS OVER1":
            b133 = codecs.open(r'phrsalverbs/PASS OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b133))
            return
        
        if theoption1phrasal== "KNUCKLE UNDER":
            b134 = codecs.open(r'phrsalverbs/KNUCKLE UNDER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b134))
            return
        
        if theoption1phrasal== "SELL OUT1":
            b135 = codecs.open(r'phrsalverbs/SELL OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b135))
            return
        
        if theoption1phrasal== "DRAW UP1":
            b136 = codecs.open(r'phrsalverbs/DRAW UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b136))
            return
        
        if theoption1phrasal== "PASS ROUND":
            b137 = codecs.open(r'phrsalverbs/PASS ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b137))
            return
        
        if theoption1phrasal== "SELL UP":
            b138 = codecs.open(r'phrsalverbs/SELL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b138))
            return
        
        if theoption1phrasal== "DRAW UPON":
            b139 = codecs.open(r'phrsalverbs/DRAW UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b139))
            return
        
        if theoption1phrasal== "PASS THROUGH":
            b140 = codecs.open(r'phrsalverbs/PASS THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b140))
            return

        if theoption1phrasal== "SEEK OUT":
            b141 = codecs.open(r'phrsalverbs/SEEK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b141))
            return
        
        if theoption1phrasal== "DREAM OF":
            b142 = codecs.open(r'phrsalverbs/DREAM OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b142))
            return
        
        if theoption1phrasal== "PASS UP":
            b143 = codecs.open(r'phrsalverbs/PASS UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b143))
            return
        
        if theoption1phrasal== "SEND BACK":
            b144 = codecs.open(r'phrsalverbs/SEND BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b144))
            return
        
        if theoption1phrasal== "COME ON":
            b145 = codecs.open(r'phrsalverbs/COME ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b145))
            return
        
        if theoption1phrasal== "DREAM UP":
            b146 = codecs.open(r'phrsalverbs/DREAM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b146))
            return
        
        if theoption1phrasal== "PASS TO":
            b147 = codecs.open(r'phrsalverbs/PASS TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b147))
            return
        
        if theoption1phrasal== "SEND FOR":
            b148 = codecs.open(r'phrsalverbs/SEND FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b148))
            return
        
        if theoption1phrasal== "DREDGE UP":
            b149 = codecs.open(r'phrsalverbs/DREDGE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b149))
            return
        
        if theoption1phrasal== "PASS TO1":
            b150 = codecs.open(r'phrsalverbs/PASS TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b150))
            return
        
        if theoption1phrasal== "SEND IN":
            b151 = codecs.open(r'phrsalverbs/SEND IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b151))
            return
        
        if theoption1phrasal== "DRESS DOWN":
            b152 = codecs.open(r'phrsalverbs/DRESS DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b152))
            return
        
        if theoption1phrasal== "PAT DOWN":
            b153 = codecs.open(r'phrsalverbs/PAT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b153))
            return
        
        if theoption1phrasal== "SEND IN1":
            b154 = codecs.open(r'phrsalverbs/SEND IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b154))
            return
        
        if theoption1phrasal== "DRESS DOWN1":
            b155 = codecs.open(r'phrsalverbs/DRESS DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b155))
            return
        
        if theoption1phrasal== "ASK ABOUT":
            b156 = codecs.open(r'phrsalverbs/ASK ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b156))
            return
        
        if theoption1phrasal== "PATCH TOGETHER":
            b157 = codecs.open(r'phrsalverbs/PATCH TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b157))
            return
        
        if theoption1phrasal== "SEND OFF":
            b158 = codecs.open(r'phrsalverbs/SEND OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b158))
            return
        
        if theoption1phrasal== "DRESS UP":
            b159 = codecs.open(r'phrsalverbs/DRESS UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b159))
            return
        if theoption1phrasal== "PATCH UP":
            b160 = codecs.open(r'phrsalverbs/PATCH UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b160))
            return
        
        if theoption1phrasal== "SEND OFF1":
            b161 = codecs.open(r'phrsalverbs/SEND OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b161))
            return
        
        if theoption1phrasal== "DRIFT APART":
            b162 = codecs.open(r'phrsalverbs/DRIFT APART.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b162))
            return
        
        if theoption1phrasal== "PATCH UP1":
            b163 = codecs.open(r'phrsalverbs/PATCH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b163))
            return
        
        if theoption1phrasal== "SEND OFF FOR":
            b164 = codecs.open(r'phrsalverbs/SEND OFF FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b164))
            return
        
        if theoption1phrasal== "DRIFT OFF":
            b165 = codecs.open(r'phrsalverbs/DRIFT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b165))
            return
        
        if theoption1phrasal== "PAY BACK":
            b166 = codecs.open(r'phrsalverbs/PAY BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b166))
            return
        
        if theoption1phrasal== "LAND IN":
            b167 = codecs.open(r'phrsalverbs/LAND IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b167))
            return
        
        if theoption1phrasal== "SEND OUT":
            b168 = codecs.open(r'phrsalverbs/SEND OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b168))
            return
        
        if theoption1phrasal== "DRILL DOWN":
            b169 = codecs.open(r'phrsalverbs/DRILL DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b169))
            return
        
        if theoption1phrasal== "PAY BACK1":
            b170 = codecs.open(r'phrsalverbs/PAY BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b170))
            return



        if theoption1phrasal== "DRILL DOWN THROUGH":
            b171 = codecs.open(r'phrsalverbs/DRILL DOWN THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b171))
            return
        
        if theoption1phrasal== "SEND OUT FOR":
            b172 = codecs.open(r'phrsalverbs/SEND OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b172))
            return
        
        if theoption1phrasal== "PAY DOWN":
            b173 = codecs.open(r'phrsalverbs/PAY DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b173))
            return
        
        if theoption1phrasal== "SEND UP":
            b174 = codecs.open(r'phrsalverbs/SEND UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b174))
            return
        
        if theoption1phrasal== "DRILL INTO":
            b175 = codecs.open(r'phrsalverbs/DRILL INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b175))
            return
        
        if theoption1phrasal== "PAY FOR":
            b176 = codecs.open(r'phrsalverbs/PAY FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b176))
            return
        
        if theoption1phrasal== "SET ABOUT":
            b177 = codecs.open(r'phrsalverbs/SET ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b177))
            return
        
        if theoption1phrasal== "COME ON1":
            b178 = codecs.open(r'phrsalverbs/COME ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b178))
            return
        
        if theoption1phrasal== "DRINK UP":
            b179 = codecs.open(r'phrsalverbs/DRINK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b179))
            return
        
        if theoption1phrasal== "PAY INTO":
            b180 = codecs.open(r'phrsalverbs/PAY INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b180))
            return
        
        








        if theoption1phrasal== "SET ABOUT1":
            b181 = codecs.open(r'phrsalverbs/SET ABOUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b181))
            return
        
        if theoption1phrasal== "DRIVE AWAY":
            b182 = codecs.open(r'phrsalverbs/DRIVE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b182))
            return
        
        if theoption1phrasal== "PAY OFF":
            b183 = codecs.open(r'phrsalverbs/PAY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b183))
            return
        
        if theoption1phrasal== "SET APART":
            b184 = codecs.open(r'phrsalverbs/SET APART.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b184))
            return
        
        if theoption1phrasal== "DRIVE BACK":
            b185 = codecs.open(r'phrsalverbs/DRIVE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b185))
            return
        
        if theoption1phrasal== "PAY OFF":
            b186 = codecs.open(r'phrsalverbs/PAY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b186))
            return
        
        if theoption1phrasal== "SET ASIDE":
            b187 = codecs.open(r'phrsalverbs/SET ASIDE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b187))
            return
        
        if theoption1phrasal== "DRIVE BY":
            b188 = codecs.open(r'phrsalverbs/DRIVE BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b188))
            return
        
        if theoption1phrasal== "LAND UP IN":
            b189 = codecs.open(r'phrsalverbs/LAND UP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b189))
            return
        
        if theoption1phrasal== "PECK AT":
            b190 = codecs.open(r'phrsalverbs/PECK AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b190))
            return


        if theoption1phrasal== "PAY OFF1":
            b191 = codecs.open(r'phrsalverbs/PAY OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b191))
            return
        
        if theoption1phrasal== "SET BACK":
            b192 = codecs.open(r'phrsalverbs/SET BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b192))
            return
        
        if theoption1phrasal== "DRIVE OFF":
            b193 = codecs.open(r'phrsalverbs/DRIVE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b193))
            return
        
        if theoption1phrasal== "PEEL AWAY":
            b194 = codecs.open(r'phrsalverbs/PEEL AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b194))
            return
        
        if theoption1phrasal== "SET BACK":
            b195 = codecs.open(r'phrsalverbs/SET BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b195))
            return
        
        if theoption1phrasal== "DRIVE OUT":
            b196 = codecs.open(r'phrsalverbs/DRIVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b196))
            return
        
        if theoption1phrasal== "PEEL AWAY FROM":
            b197 = codecs.open(r'phrsalverbs/PEEL AWAY FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b197))
            return
        
        if theoption1phrasal== "SET FORTH":
            b198 = codecs.open(r'phrsalverbs/SET FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b198))
            return
        
        if theoption1phrasal== "DRIVE UP":
            b199 = codecs.open(r'phrsalverbs/DRIVE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b199))
            return
        
        if theoption1phrasal== "PEEL OFF":
            b200 = codecs.open(r'phrsalverbs/PEEL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b200))
            return
        
        if theoption1phrasal== "SET BACK1":
            b201 = codecs.open(r'phrsalverbs/SET BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b201))
            return
        
        if theoption1phrasal== "SET FORTH1":
            b202 = codecs.open(r'phrsalverbs/SET FORTH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b202))
            return
        








        if theoption1phrasal== "DRIVE OUT":
            b202 = codecs.open(r'phrsalverbs/DRIVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b202))
            return
        
        if theoption1phrasal== "PEEL AWAY FROM":
            b203 = codecs.open(r'phrsalverbs/PEEL AWAY FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b203))
            return
        
        if theoption1phrasal== "SET FORTH":
            b204 = codecs.open(r'phrsalverbs/SET FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b204))
            return
        
        if theoption1phrasal== "DRIVE UP1":
            b205 = codecs.open(r'phrsalverbs/DRIVE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b205))
            return
        
        if theoption1phrasal== "PEEL OFF FROM":
            b206 = codecs.open(r'phrsalverbs/PEEL OFF FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b206))
            return
        
        if theoption1phrasal== "SET IN":
            b207 = codecs.open(r'phrsalverbs/SET IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b207))
            return
        
        if theoption1phrasal== "DRONE ON":
            b208 = codecs.open(r'phrsalverbs/DRONE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b208))
            return
        
        if theoption1phrasal== "PEEL OUT":
            b209 = codecs.open(r'phrsalverbs/PEEL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b209))
            return
        
        if theoption1phrasal== "SET OFF":
            b210 = codecs.open(r'phrsalverbs/SET OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b210))
            return
        
        if theoption1phrasal== "LAND WITH":
            b211 = codecs.open(r'phrsalverbs/LAND WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b211))
            return
        



        if theoption1phrasal== "DROP AROUND":
            b212 = codecs.open(r'phrsalverbs/DROP AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b212))
            return
        
        if theoption1phrasal== "PEG AWAY":
            b213 = codecs.open(r'phrsalverbs/PEG AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b213))
            return
        
        if theoption1phrasal== "SET OFF1":
            b214 = codecs.open(r'phrsalverbs/SET OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b214))
            return
        
        if theoption1phrasal== "JACK AROUND":
            b215 = codecs.open(r'phrsalverbs/JACK AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b215))
            return
        
        if theoption1phrasal== "COME ON2":
            b216 = codecs.open(r'phrsalverbs/COME ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b216))
            return
        
        if theoption1phrasal== "DROP AROUND1":
            b217 = codecs.open(r'phrsalverbs/DROP AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b217))
            return
        
        if theoption1phrasal== "PEG DOWN":
            b218 = codecs.open(r'phrsalverbs/PEG DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b218))
            return
        
        if theoption1phrasal== "SET OFF2":
            b219 = codecs.open(r'phrsalverbs/SET OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b219))
            return
        
        if theoption1phrasal== "DROP AWAY":
            b220 = codecs.open(r'phrsalverbs/DROP AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b220))
            return
        
        if theoption1phrasal== "PEG IT":
            b221 = codecs.open(r'phrsalverbs/PEG IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b221))
            return
        
        if theoption1phrasal== "SET OFF3":
            b222 = codecs.open(r'phrsalverbs/SET OFF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b222))
            return
        
        if theoption1phrasal== "DROP BACK":
            b223 = codecs.open(r'phrsalverbs/DROP BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b223))
            return
        
        if theoption1phrasal== "PEG OUT":
            b224 = codecs.open(r'phrsalverbs/PEG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b224))
            return
        
        if theoption1phrasal== "SET OFF4":
            b225 = codecs.open(r'phrsalverbs/SET OFF4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b225))
            return
        
        if theoption1phrasal== "DROP BEHIND":
            b226 = codecs.open(r'phrsalverbs/DROP BEHIND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b226))
            return
        
        if theoption1phrasal== "LAP UP":
            b227 = codecs.open(r'phrsalverbs/LAP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b227))
            return
        
        if theoption1phrasal== "PEG OUT1":
            b228 = codecs.open(r'phrsalverbs/PEG OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b228))
            return
        
        if theoption1phrasal== "SET OFF5":
            b229 = codecs.open(r'phrsalverbs/SET OFF5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b229))
            return
        
        if theoption1phrasal== "DROP BY":
            b230 = codecs.open(r'phrsalverbs/DROP BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b230))
            return
        
        if theoption1phrasal== "PEG OUT2":
            b231 = codecs.open(r'phrsalverbs/PEG OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b231))
            return
        
        if theoption1phrasal== "SET ON":
            b232 = codecs.open(r'phrsalverbs/SET ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b232))
            return
        
        if theoption1phrasal== "DROP IN":
            b233 = codecs.open(r'phrsalverbs/DROP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b233))
            return
        
        if theoption1phrasal== "PEN IN":
            b234 = codecs.open(r'phrsalverbs/PEN IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b234))
            return
        if theoption1phrasal== "SET OUT":
            b235 = codecs.open(r'phrsalverbs/SET OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b235))
            return
        
        if theoption1phrasal== "DROP OFF":
            b236 = codecs.open(r'phrsalverbs/DROP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b236))
            return
        
        if theoption1phrasal== "PEN UP":
            b237 = codecs.open(r'phrsalverbs/PEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b237))
            return
        
        if theoption1phrasal== "LARGE IT UP":
            b238 = codecs.open(r'phrsalverbs/LARGE IT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b238))
            return
        
        if theoption1phrasal== "SET OUT1":
            b239 = codecs.open(r'phrsalverbs/SET OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b239))
            return
        
        if theoption1phrasal== "DROP OFF1":
            b240 = codecs.open(r'phrsalverbs/DROP OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b240))
            return
        
        if theoption1phrasal== "PENCIL IN":
            b241 = codecs.open(r'phrsalverbs/PENCIL IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b241))
            return
        
        if theoption1phrasal== "SET OUT2":
            b242 = codecs.open(r'phrsalverbs/SET OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b242))
            return
        
        if theoption1phrasal== "DROP OFF2":
            b243 = codecs.open(r'phrsalverbs/DROP OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b243))
            return
        
        if theoption1phrasal== "PEP UP":
            b244 = codecs.open(r'phrsalverbs/PEP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b244))
            return
        
        if theoption1phrasal== "SET TO":
            b245 = codecs.open(r'phrsalverbs/SET TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b245))
            return
        
        if theoption1phrasal== "DROP OUT":
            b246 = codecs.open(r'phrsalverbs/DROP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b246))
            return
        
        if theoption1phrasal== "PEP UP1":
            b247 = codecs.open(r'phrsalverbs/PEP UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b247))
            return
        
        if theoption1phrasal== "SET UP":
            b248 = codecs.open(r'phrsalverbs/SET UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b248))
            return
        
        if theoption1phrasal== "COME OFF IT":
            b249 = codecs.open(r'phrsalverbs/COME OFF IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b249))
            return
        
        if theoption1phrasal== "DROP OVER":
            b250 = codecs.open(r'phrsalverbs/DROP OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(b250))
            return


        






        if theoption1phrasal== "PERK UP":
            d1 = codecs.open(r'phrsalverbs/PERK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d1))
            return
        
        if theoption1phrasal== "SET UP1":
            d2 = codecs.open(r'phrsalverbs/SET UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d2))
            return
        
        if theoption1phrasal== "DROP ROUND":
            d3 = codecs.open(r'phrsalverbs/DROP ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d3))
            return
        
        if theoption1phrasal== "PETER OUT":
            d4 = codecs.open(r'phrsalverbs/PETER OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d4))
            return
        
        if theoption1phrasal== "SET UP2":
            d5 = codecs.open(r'phrsalverbs/SET UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d5))
            return
        
        if theoption1phrasal== "DROP ROUND1":
            d6 = codecs.open(r'phrsalverbs/DROP ROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d6))
            return
        
        if theoption1phrasal== "PHASE IN":
            d7 = codecs.open(r'phrsalverbs/PHASE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d7))
            return
        
        if theoption1phrasal== "SET UP3":
            d8 = codecs.open(r'phrsalverbs/SET UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d8))
            return
        
        if theoption1phrasal== "DROP SOMEONE IN IT":
            d9 = codecs.open(r'phrsalverbs/DROP SOMEONE IN IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d9))
            return
        
        if theoption1phrasal== "LARK ABOUT":
            d10 = codecs.open(r'phrsalverbs/LARK ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d10))
            return
        
        if theoption1phrasal== "PHASE OUT":
            d11 = codecs.open(r'phrsalverbs/PHASE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d11))
            return
        
        if theoption1phrasal== "SET UPON":
            d12 = codecs.open(r'phrsalverbs/SET UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d12))
            return
        
        if theoption1phrasal== "DROP THROUGH":
            d13 = codecs.open(r'phrsalverbs/DROP THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d13))
            return
        
        if theoption1phrasal== "PHONE IN":
            d14 = codecs.open(r'phrsalverbs/PHONE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d14))
            return
        
        if theoption1phrasal== "SETTLE DOWN":
            d15 = codecs.open(r'phrsalverbs/SETTLE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d15))
            return
        
        if theoption1phrasal== "DROWN IN":
            d16 = codecs.open(r'phrsalverbs/DROWN IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d16))
            return
        
        if theoption1phrasal== "PHONE IN1":
            d17 = codecs.open(r'phrsalverbs/PHONE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d17))
            return
        
        if theoption1phrasal== "SETTLE FOR":
            d18 = codecs.open(r'phrsalverbs/SETTLE FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d18))
            return
        
        if theoption1phrasal== "DROWN OUT":
            d19 = codecs.open(r'phrsalverbs/DROWN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d19))
            return
        
        if theoption1phrasal== "PHONE IN2":
            d20 = codecs.open(r'phrsalverbs/PHONE IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d20))
            return
        
        if theoption1phrasal== "LARK AROUND":
            d21 = codecs.open(r'phrsalverbs/LARK AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d21))
            return
        
        if theoption1phrasal== "SETTLE IN":
            d22 = codecs.open(r'phrsalverbs/SETTLE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d22))
            return
        
        if theoption1phrasal== "DRUM INTO":
            d23 = codecs.open(r'phrsalverbs/DRUM INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d23))
            return
        
        if theoption1phrasal== "SETTLE ON":
            d24 = codecs.open(r'phrsalverbs/SETTLE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d24))
            return
        
        if theoption1phrasal== "DRUM OUT":
            d25 = codecs.open(r'phrsalverbs/DRUM OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d25))
            return
        
        if theoption1phrasal== "PICK APART":
            d26 = codecs.open(r'phrsalverbs/PICK APART.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d26))
            return
        
        if theoption1phrasal== "SETTLE UP":
            d27 = codecs.open(r'phrsalverbs/SETTLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d27))
            return
        
        if theoption1phrasal== "DRUM UP":
            d28 = codecs.open(r'phrsalverbs/DRUM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d28))
            return
        
        if theoption1phrasal== "PICK AT":
            d29 = codecs.open(r'phrsalverbs/PICK AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d29))
            return
        
        if theoption1phrasal== "SEX UP":
            d30 = codecs.open(r'phrsalverbs/SEX UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d30))
            return
        
        if theoption1phrasal== "DRY OFF":
            d31 = codecs.open(r'phrsalverbs/DRY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d31))
            return
        
        if theoption1phrasal== "COME OFF":
            d32 = codecs.open(r'phrsalverbs/COME OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d32))
            return
        
        if theoption1phrasal== "PICK AT1":
            d33 = codecs.open(r'phrsalverbs/PICK AT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d33))
            return
        
        if theoption1phrasal== "SHACK UP":
            d34 = codecs.open(r'phrsalverbs/SHACK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d34))
            return
        
        if theoption1phrasal== "DRY OUT":
            d35 = codecs.open(r'phrsalverbs/DRY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d35))
            return

        if theoption1phrasal== "PICK OFF":
            d36 = codecs.open(r'phrsalverbs/PICK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d36))
            return

        if theoption1phrasal== "SHACK UP1":
            d37 = codecs.open(r'phrsalverbs/SHACK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d37))
            return
        
        if theoption1phrasal== "DRY OUT":
            d38 = codecs.open(r'phrsalverbs/DRY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d38))
            return
        
        if theoption1phrasal== "PICK ON":
            d39 = codecs.open(r'phrsalverbs/PICK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d39))
            return
        
        if theoption1phrasal== "SHADE IN":
            d40 = codecs.open(r'phrsalverbs/SHADE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d40))
            return

        if theoption1phrasal== "DRY OUT1":
            d41 = codecs.open(r'phrsalverbs/DRY OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d41))
            return
        
        if theoption1phrasal== "DRY UP":
            d42 = codecs.open(r'phrsalverbs/DRY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d42))
            return
        
        if theoption1phrasal== "PICK OUT":
            d43 = codecs.open(r'phrsalverbs/PICK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d43))
            return
        
        if theoption1phrasal== "LASH DOWN":
            d44 = codecs.open(r'phrsalverbs/LASH DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d44))
            return
        
        if theoption1phrasal== "SHADE OUT":
            d45 = codecs.open(r'phrsalverbs/SHADE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d45))
            return
        
        if theoption1phrasal== "DRY UP1":
            d46 = codecs.open(r'phrsalverbs/DRY UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d46))
            return
        
        if theoption1phrasal== "PICK OUT1":
            d47 = codecs.open(r'phrsalverbs/PICK OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d47))
            return
        
        if theoption1phrasal== "SHAPE UP":
            d48 = codecs.open(r'phrsalverbs/SHAPE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d48))
            return
        
        if theoption1phrasal== "DRY UP1":
            d49 = codecs.open(r'phrsalverbs/DRY UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d49))
            return
        
        if theoption1phrasal== "PICK THROUGH":
            d50 = codecs.open(r'phrsalverbs/PICK THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d50))
            return
        
        if theoption1phrasal== "DRY UP2":
            d51 = codecs.open(r'phrsalverbs/DRY UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d51))
            return
        
        if theoption1phrasal== "DRY UP3":
            d52 = codecs.open(r'phrsalverbs/DRY UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d52))
            return
        
        if theoption1phrasal== "SHAPE UP1":
            d53 = codecs.open(r'phrsalverbs/SHAPE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d53))
            return
        
        if theoption1phrasal== "PICK UP":
            d54 = codecs.open(r'phrsalverbs/PICK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d54))
            return
        
        if theoption1phrasal== "SHARE IN":
            d55 = codecs.open(r'phrsalverbs/SHARE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d55))
            return
        
        if theoption1phrasal== "LASH OUT":
            d56 = codecs.open(r'phrsalverbs/LASH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d56))
            return
        
        if theoption1phrasal== "DUCK OUT OF":
            d57 = codecs.open(r'phrsalverbs/DUCK OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d57))
            return
        
        if theoption1phrasal== "PICK UP1":
            d58 = codecs.open(r'phrsalverbs/PICK UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d58))
            return
        
        if theoption1phrasal== "SHARE OUT":
            d59 = codecs.open(r'phrsalverbs/SHARE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d59))
            return

        if theoption1phrasal== "DUFF UP":
            d60 = codecs.open(r'phrsalverbs/DUFF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d60))
            return

        if theoption1phrasal== "PICK UP2":
            d61 = codecs.open(r'phrsalverbs/PICK UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d61))
            return
        
        if theoption1phrasal== "SHAVE BY":
            d62 = codecs.open(r'phrsalverbs/SHAVE BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d62))
            return
        
        if theoption1phrasal== "DUMB DOWN":
            d63 = codecs.open(r'phrsalverbs/DUMB DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d63))
            return
        
        if theoption1phrasal== "PICK UP3":
            d64 = codecs.open(r'phrsalverbs/PICK UP4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d64))
            return
        
        if theoption1phrasal== "SHAVE FROM":
            d65 = codecs.open(r'phrsalverbs/SHAVE FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d65))
            return
        
        if theoption1phrasal== "DUMP ON":
            d66 = codecs.open(r'phrsalverbs/DUMP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d66))
            return
        
        if theoption1phrasal== "COME OFF1":
            d67 = codecs.open(r'phrsalverbs/COME OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d67))
            return

        if theoption1phrasal== "PICK UP4":
            d68 = codecs.open(r'phrsalverbs/PICK UP5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d68))
            return
        
        if theoption1phrasal== "SHAVE OFF":
            d69 = codecs.open(r'phrsalverbs/SHAVE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d69))
            return
        
        if theoption1phrasal== "DUMP ON1":
            d70 = codecs.open(r'phrsalverbs/DUMP ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d70))
            return
        
        if theoption1phrasal== "COME OFF1":
            d71 = codecs.open(r'phrsalverbs/COME OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d71))
            return

        if theoption1phrasal== "PICK UP5":
            d71 = codecs.open(r'phrsalverbs/PICK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d71))
            return
        
        if theoption1phrasal== "SHAVE OFF1":
            d72 = codecs.open(r'phrsalverbs/SHAVE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d72))
            return
        
        if theoption1phrasal== "DUMP ON2":
            d73= codecs.open(r'phrsalverbs/DUMP ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d73))
            return
        
        if theoption1phrasal== "PICK UP AFTER":
            d74= codecs.open(r'phrsalverbs/PICK UP AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d74))
            return
        
        if theoption1phrasal== "SHELL OUT":
            d75= codecs.open(r'phrsalverbs/SHELL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d75))
            return
        
        if theoption1phrasal== "DUST DOWN":
            d76 = codecs.open(r'phrsalverbs/DUST DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d76))
            return
        
        if theoption1phrasal== "PICK UP ON":
            d77 = codecs.open(r'phrsalverbs/PICK UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d77))
            return
        
        if theoption1phrasal== "BACK INTO":
            d78 = codecs.open(r'phrsalverbs/BACK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d78))
            return
        
        if theoption1phrasal== "LARK IT UP":
            d79 = codecs.open(r'phrsalverbs/LARK IT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d79))
            return
        
        if theoption1phrasal== "SHIP OFF":
            d80 = codecs.open(r'phrsalverbs/SHIP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d80))
            return
        
        if theoption1phrasal== "DUST OFF":
            d81 = codecs.open(r'phrsalverbs/DUST OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d81))
            return
        
        if theoption1phrasal== "PICK UP ON":
            d82 = codecs.open(r'phrsalverbs/PICK UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d82))
            return
        
        if theoption1phrasal== "SHIP OUT":
            d83 = codecs.open(r'phrsalverbs/SHIP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d83))
            return
        
        if theoption1phrasal== "DWELL ON":
            d84 = codecs.open(r'phrsalverbs/DWELL ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d84))
            return
        
        if theoption1phrasal== "PICK UP ON1":
            d85 = codecs.open(r'phrsalverbs/PICK UP ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d85))
            return
        
        if theoption1phrasal== "SHIP OUT1":
            d86 = codecs.open(r'phrsalverbs/SHIP OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d86))
            return
        
        if theoption1phrasal== "DWELL UPON":
            d87 = codecs.open(r'phrsalverbs/DWELL UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d87))
            return
        
        if theoption1phrasal== "PICK UP ON2":
            d88 = codecs.open(r'phrsalverbs/PICK UP ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d88))
            return
        
        if theoption1phrasal== "SHOOT AWAY":
            d89 = codecs.open(r'phrsalverbs/SHOOT AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d89))
            return
        
        if theoption1phrasal== "LASH OUT1":
            d90 = codecs.open(r'phrsalverbs/LASH OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d90))
            return
        
        if theoption1phrasal== "PICK UP ON3":
            d91 = codecs.open(r'phrsalverbs/PICK UP ON3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d91))
            return
        
        if theoption1phrasal== "EASE OFF":
            d92 = codecs.open(r'phrsalverbs/EASE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d92))
            return
        
        if theoption1phrasal== "PICK YOURSELF UP":
            d93 = codecs.open(r'phrsalverbs/PICK YOURSELF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d93))
            return
        
        if theoption1phrasal== "SHOOT BACK":
            d94 = codecs.open(r'phrsalverbs/SHOOT BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d94))
            return
        
        if theoption1phrasal== "EASE UP":
            d95 = codecs.open(r'phrsalverbs/EASE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d95))
            return
        
        if theoption1phrasal== "PIG OFF":
            d96 = codecs.open(r'phrsalverbs/PIG OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d96))
            return
        
        if theoption1phrasal== "SHOOT FOR":
            d97 = codecs.open(r'phrsalverbs/SHOOT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d97))
            return
        
        if theoption1phrasal== "EAT AWAY":
            d98 = codecs.open(r'phrsalverbs/EAT AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d98))
            return
        
        if theoption1phrasal== "PIG OUT":
            d99 = codecs.open(r'phrsalverbs/PIG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d99))
            return
        
        if theoption1phrasal== "SHOOT OFF":
            d100 = codecs.open(r'phrsalverbs/SHOOT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d100))
            return
        
        if theoption1phrasal== "EAT IN":
            d101 = codecs.open(r'phrsalverbs/EAT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d101))
            return
        
        if theoption1phrasal== "COME INTO USE":
            d102 = codecs.open(r'phrsalverbs/COME INTO USE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d102))
            return
        
        if theoption1phrasal== "PILE IN":
            d103 = codecs.open(r'phrsalverbs/PILE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d103))
            return
        
        if theoption1phrasal== "SHOOT OUT":
            d104 = codecs.open(r'phrsalverbs/SHOOT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d104))
            return
        
        if theoption1phrasal== "EAT INTO":
            d105 = codecs.open(r'phrsalverbs/EAT INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d105))
            return
        
        if theoption1phrasal== "PILE INTO":
            d106 = codecs.open(r'phrsalverbs/PILE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d106))
            return
        
        if theoption1phrasal== "SHOOT UP":
            d107 = codecs.open(r'phrsalverbs/SHOOT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d107))
            return
        
        if theoption1phrasal== "EAT OUT":
            d108 = codecs.open(r'phrsalverbs/EAT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d108))
            return
        
        if theoption1phrasal== "PILE ON":
            d109 = codecs.open(r'phrsalverbs/PILE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d109))
            return
        
        if theoption1phrasal== "SHOOT UP1":
            d110 = codecs.open(r'phrsalverbs/SHOOT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d110))
            return
        
        if theoption1phrasal== "EAT UP":
            d111 = codecs.open(r'phrsalverbs/EAT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d111))
            return
        
        if theoption1phrasal== "PILE ON1":
            d112 = codecs.open(r'phrsalverbs/PILE ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d112))
            return
        
        if theoption1phrasal== "LASH OUT2":
            d113 = codecs.open(r'phrsalverbs/LASH OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d113))
            return
        
        if theoption1phrasal== "SHOOT UP2":
            d114 = codecs.open(r'phrsalverbs/SHOOT UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d114))
            return
        
        if theoption1phrasal== "EAT UP1":
            d115 = codecs.open(r'phrsalverbs/EAT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d115))
            return
        
        if theoption1phrasal== "PILE OUT":
            d116 = codecs.open(r'phrsalverbs/PILE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d116))
            return
        
        if theoption1phrasal== "SHOOT UP3":
            d117 = codecs.open(r'phrsalverbs/SHOOT UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d117))
            return
        
        if theoption1phrasal== "EAT UP2":
            d118 = codecs.open(r'phrsalverbs/EAT UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d118))
            return
        
        if theoption1phrasal== "PILE UP":
            d119 = codecs.open(r'phrsalverbs/PILE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d119))
            return
        
        if theoption1phrasal== "SHOP AROUND":
            d120 = codecs.open(r'phrsalverbs/SHOP AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d120))
            return
        
        if theoption1phrasal== "EBB AWAY":
            d121 = codecs.open(r'phrsalverbs/EBB AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d121))
            return
        
        if theoption1phrasal== "PILE UP1":
            d122 = codecs.open(r'phrsalverbs/PILE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d122))
            return
        
        if theoption1phrasal== "SHORE UP":
            d123 = codecs.open(r'phrsalverbs/SHORE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d123))
            return
        
        if theoption1phrasal== "LASH DOWN1":
            d124 = codecs.open(r'phrsalverbs/LASH DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d124))
            return
        
        if theoption1phrasal== "EDGE OUT":
            d125 = codecs.open(r'phrsalverbs/EDGE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d125))
            return
        
        if theoption1phrasal== "PIN DOWN":
            d126 = codecs.open(r'phrsalverbs/PIN DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d126))
            return
        
        if theoption1phrasal== "SHORT OUT":
            d127 = codecs.open(r'phrsalverbs/SHORT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d127))
            return
        
        if theoption1phrasal== "EDGE UP":
            d128 = codecs.open(r'phrsalverbs/EDGE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d128))
            return
        
        if theoption1phrasal== "PIN DOWN1":
            d129 = codecs.open(r'phrsalverbs/PIN DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d129))
            return
        
        if theoption1phrasal== "SHOUT DOWN":
            d130 = codecs.open(r'phrsalverbs/SHOUT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d130))
            return

        if theoption1phrasal== "EGG ON":
            d131 = codecs.open(r'phrsalverbs/EGG ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d131))
            return
        
        if theoption1phrasal== "PIN ON":
            d132 = codecs.open(r'phrsalverbs/PIN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d132))
            return

        if theoption1phrasal== "SHOUT OUT":
            d133 = codecs.open(r'phrsalverbs/SHOUT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d133))
            return
        
        if theoption1phrasal== "EKE OUT":
            d134 = codecs.open(r'phrsalverbs/EKE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d134))
            return
        
        if theoption1phrasal== "COME INTO":
            d135 = codecs.open(r'phrsalverbs/COME INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d135))
            return
        
        if theoption1phrasal== "PIN UP":
            d136 = codecs.open(r'phrsalverbs/PIN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d136))
            return
        
        if theoption1phrasal== "SHOW AROUND":
            d137 = codecs.open(r'phrsalverbs/SHOW AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d137))
            return
        
        if theoption1phrasal== "EMBARK ON":
            d138 = codecs.open(r'phrsalverbs/EMBARK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d138))
            return
        
        if theoption1phrasal== "PINE AWAY":
            d139 = codecs.open(r'phrsalverbs/PINE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d139))
            return
        
        if theoption1phrasal== "SHOW IN":
            d140 = codecs.open(r'phrsalverbs/SHOW IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d140))
            return
        
        if theoption1phrasal== "EMBARK UPON":
            d141 = codecs.open(r'phrsalverbs/EMBARK UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d141))
            return
        
        if theoption1phrasal== "PINE FOR":
            d142 = codecs.open(r'phrsalverbs/PINE FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d142))
            return
        
        if theoption1phrasal== "SHOW OFF":
            d143 = codecs.open(r'phrsalverbs/SHOW OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d143))
            return
        
        if theoption1phrasal== "EMPTY OUT":
            d144 = codecs.open(r'phrsalverbs/EMPTY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d144))
            return
        
        if theoption1phrasal== "PIPE DOWN":
            d145 = codecs.open(r'phrsalverbs/PIPE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d145))
            return
        
        if theoption1phrasal== "LASH INTO":
            d146 = codecs.open(r'phrsalverbs/LASH INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d146))
            return
        
        if theoption1phrasal== "SHOW OFF1":
            d147 = codecs.open(r'phrsalverbs/SHOW OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d147))
            return
        
        if theoption1phrasal== "EMPTY OUT1":
            d148 = codecs.open(r'phrsalverbs/EMPTY OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d148))
            return
        
        if theoption1phrasal== "PIPE UP":
            d149 = codecs.open(r'phrsalverbs/PIPE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d149))
            return
        
        if theoption1phrasal== "SHOW OFF2":
            d150 = codecs.open(r'phrsalverbs/SHOW OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d150))
            return
        
        if theoption1phrasal== "END IN":
            d151 = codecs.open(r'phrsalverbs/END IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d151))
            return
        
        if theoption1phrasal== "PIT AGAINST":
            d152 = codecs.open(r'phrsalverbs/PIT AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d152))
            return
        
        if theoption1phrasal== "SHOW OUT":
            d153 = codecs.open(r'phrsalverbs/SHOW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d153))
            return
        
        if theoption1phrasal== "END UP":
            d154 = codecs.open(r'phrsalverbs/END UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d154))
            return
        
        if theoption1phrasal== "PIT OUT":
            d155 = codecs.open(r'phrsalverbs/PIT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d155))
            return
        
        if theoption1phrasal== "SHOW OVER":
            d156 = codecs.open(r'phrsalverbs/SHOW OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d156))
            return
        
        if theoption1phrasal== "BE UP FOR":
            d157 = codecs.open(r'phrsalverbs/BE UP FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d157))
            return
        
        if theoption1phrasal== "END UP WITH":
            d158 = codecs.open(r'phrsalverbs/END UP WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d158))
            return
        
        if theoption1phrasal== "PITCH FOR":
            d159 = codecs.open(r'phrsalverbs/PITCH FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d159))
            return
        
        if theoption1phrasal== "SHOW ROUND":
            d160 = codecs.open(r'phrsalverbs/SHOW ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d160))
            return
        
        if theoption1phrasal== "ENTER FOR":
            d161 = codecs.open(r'phrsalverbs/ENTER FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d161))
            return
        
        if theoption1phrasal== "PITCH IN":
            d162 = codecs.open(r'phrsalverbs/PITCH IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d162))
            return
        
        if theoption1phrasal== "SHOW THROUGH":
            d163 = codecs.open(r'phrsalverbs/SHOW THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d163))
            return
        
        if theoption1phrasal== "ENTER INTO":
            d164 = codecs.open(r'phrsalverbs/ENTER INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d164))
            return
        
        if theoption1phrasal== "PITCH INTO":
            d165 = codecs.open(r'phrsalverbs/PITCH INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d165))
            return
        
        if theoption1phrasal== "SHOW UP":
            d166 = codecs.open(r'phrsalverbs/SHOW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d166))
            return
        
        if theoption1phrasal== "EYE UP":
            d167 = codecs.open(r'phrsalverbs/EYE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d167))
            return
        
        if theoption1phrasal== "LASH OUT AGAINST":
            d168 = codecs.open(r'phrsalverbs/LASH OUT AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d168))
            return
        
        if theoption1phrasal== "PLANT OUT":
            d169 = codecs.open(r'phrsalverbs/PLANT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d169))
            return
        
        if theoption1phrasal== "SHOW UP1":
            d170 = codecs.open(r'phrsalverbs/SHOW UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d170))
            return
        
        if theoption1phrasal== "FACE OFF":
            d171 = codecs.open(r'phrsalverbs/FACE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d171))
            return
        
        if theoption1phrasal== "PLATE UP":
            d172 = codecs.open(r'phrsalverbs/PLATE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d172))
            return
        
        if theoption1phrasal== "SHOW UP2":
            d173 = codecs.open(r'phrsalverbs/SHOW UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d173))
            return
        
        if theoption1phrasal== "FACE UP TO":
            d174 = codecs.open(r'phrsalverbs/FACE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d174))
            return
        
        if theoption1phrasal== "PLAY ABOUT":
            d175 = codecs.open(r'phrsalverbs/PLAY ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d175))
            return
        
        if theoption1phrasal== "SHUT AWAY":
            d176 = codecs.open(r'phrsalverbs/SHUT AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d176))
            return
        
        if theoption1phrasal== "FAFF ABOUT":
            d177 = codecs.open(r'phrsalverbs/FAFF ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d177))
            return
        
        if theoption1phrasal== "PLAY AROUND":
            d178 = codecs.open(r'phrsalverbs/PLAY AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d178))
            return
        
        if theoption1phrasal== "COME INTO1":
            d179 = codecs.open(r'phrsalverbs/COME INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d179))
            return
        
        if theoption1phrasal== "SHUT DOWN":
            d180 = codecs.open(r'phrsalverbs/SHUT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d180))
            return
        
        if theoption1phrasal== "FAFF AROUND":
            d181 = codecs.open(r'phrsalverbs/FAFF AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d181))
            return
        
        if theoption1phrasal== "PLAY AROUND1":
            d182 = codecs.open(r'phrsalverbs/PLAY AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d182))
            return
        
        if theoption1phrasal== "SHUT DOWN1":
            d183 = codecs.open(r'phrsalverbs/SHUT DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d183))
            return
        
        if theoption1phrasal== "FALL ABOUT":
            d184 = codecs.open(r'phrsalverbs/FALL ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d184))
            return
        
        if theoption1phrasal== "PLAY ALONG":
            d185 = codecs.open(r'phrsalverbs/PLAY ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d185))
            return
        
        if theoption1phrasal== "SHUT IN":
            d186 = codecs.open(r'phrsalverbs/SHUT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d186))
            return

        if theoption1phrasal== "FALL APART":
            d187 = codecs.open(r'phrsalverbs/FALL APART.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d187))
            return
        
        if theoption1phrasal== "PLAY ABOUT1":
            d188 = codecs.open(r'phrsalverbs/PLAY ABOUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d188))
            return
        
        if theoption1phrasal== "SHUT OFF":
            d189 = codecs.open(r'phrsalverbs/SHUT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d189))
            return
        
        if theoption1phrasal== "JACK IN":
            d190 = codecs.open(r'phrsalverbs/JACK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d190))
            return
        
        if theoption1phrasal== "LASH OUT AT":
            d191 = codecs.open(r'phrsalverbs/LASH OUT AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d191))
            return
        
        if theoption1phrasal== "FALL APART1":
            d192 = codecs.open(r'phrsalverbs/FALL APART1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d192))
            return
        
        if theoption1phrasal== "PLAY AT":
            d193 = codecs.open(r'phrsalverbs/PLAY AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d193))
            return
        
        if theoption1phrasal== "SHUT OUT":
            d194 = codecs.open(r'phrsalverbs/SHUT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d194))
            return
        
        if theoption1phrasal== "FALL BACK":
            d195 = codecs.open(r'phrsalverbs/FALL BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d195))
            return
        
        if theoption1phrasal== "PLAY AWAY":
            d196 = codecs.open(r'phrsalverbs/PLAY AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d196))
            return
        
        if theoption1phrasal== "SHUT OUT1":
            d197 = codecs.open(r'phrsalverbs/SHUT OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d197))
            return
        
        if theoption1phrasal== "FALL BACK ON":
            d198 = codecs.open(r'phrsalverbs/FALL BACK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d198))
            return
        
        if theoption1phrasal== "PLAY BACK":
            d199 = codecs.open(r'phrsalverbs/PLAY BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d199))
            return
        
        if theoption1phrasal== "SHUT OUT OF":
            d200 = codecs.open(r'phrsalverbs/SHUT OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d200))
            return
        
        if theoption1phrasal== "FALL BEHIND":
            d201 = codecs.open(r'phrsalverbs/FALL BEHIND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d201))
            return
        
        if theoption1phrasal== "BE UP TO":
            d202 = codecs.open(r'phrsalverbs/BE UP TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d202))
            return
        
        if theoption1phrasal== "PLAY DOWN":
            d203 = codecs.open(r'phrsalverbs/PLAY DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d203))
            return
        
        if theoption1phrasal== "SHUT UP":
            d204 = codecs.open(r'phrsalverbs/SHUT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d204))
            return
        
        if theoption1phrasal== "FALL DOWN":
            d205 = codecs.open(r'phrsalverbs/FALL DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d205))
            return
        
        if theoption1phrasal== "PLAY OFF":
            d206 = codecs.open(r'phrsalverbs/PLAY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d206))
            return
        
        if theoption1phrasal== "SHUT UP1":
            d207 = codecs.open(r'phrsalverbs/SHUT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d207))
            return
        
        if theoption1phrasal== "FALL DOWN1":
            d208 = codecs.open(r'phrsalverbs/FALL DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d208))
            return
        
        if theoption1phrasal== "PLAY OFF1":
            d209 = codecs.open(r'phrsalverbs/PLAY OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d209))
            return
        
        if theoption1phrasal== "SHUT YOURSELF AWAY":
            d210 = codecs.open(r'phrsalverbs/SHUT YOURSELF AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d210))
            return

        if theoption1phrasal== "FALL FOR":
            d211 = codecs.open(r'phrsalverbs/FALL FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d211))
            return
        
        if theoption1phrasal== "PLAY ON":
            d212 = codecs.open(r'phrsalverbs/PLAY ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d212))
            return
        
        if theoption1phrasal== "COME IN FOR":
            d213 = codecs.open(r'phrsalverbs/COME IN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d213))
            return
        
        if theoption1phrasal== "SHY AWAY":
            d214 = codecs.open(r'phrsalverbs/SHY AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d214))
            return
        
        if theoption1phrasal== "FALL FOR1":
            d215 = codecs.open(r'phrsalverbs/FALL FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d215))
            return
        
        if theoption1phrasal== "PLAY ON1":
            d216 = codecs.open(r'phrsalverbs/PLAY ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d216))
            return
        
        if theoption1phrasal== "SHY AWAY FROM":
            d217 = codecs.open(r'phrsalverbs/SHY AWAY FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d217))
            return
        
        if theoption1phrasal== "FALL IN":
            d218 = codecs.open(r'phrsalverbs/FALL IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d218))
            return
        
        if theoption1phrasal== "PLAY ON2":
            d219 = codecs.open(r'phrsalverbs/PLAY ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d219))
            return
        
        if theoption1phrasal== "SIDE WITH":
            d220 = codecs.open(r'phrsalverbs/SIDE WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d220))
            return
        
        if theoption1phrasal== "FALL INTO":
            d221 = codecs.open(r'phrsalverbs/FALL INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d221))
            return
        
        if theoption1phrasal== "PLAY ON3":
            d222 = codecs.open(r'phrsalverbs/PLAY ON3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d222))
            return
        
        if theoption1phrasal== "SIDLE UP TO":
            d223 = codecs.open(r'phrsalverbs/SIDLE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d223))
            return
        
        if theoption1phrasal== "LASH OUT AT1":
            d224 = codecs.open(r'phrsalverbs/LASH OUT AT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d224))
            return
        
        if theoption1phrasal== "FALL OFF":
            d225 = codecs.open(r'phrsalverbs/FALL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d225))
            return
        
        if theoption1phrasal== "PLAY OUT":
            d226 = codecs.open(r'phrsalverbs/PLAY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d226))
            return
        
        if theoption1phrasal== "SIFT THROUGH":
            d227 = codecs.open(r'phrsalverbs/SIFT THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d227))
            return
        
        if theoption1phrasal== "FALL OUT":
            d228 = codecs.open(r'phrsalverbs/FALL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d228))
            return
        
        if theoption1phrasal== "PLAY OUT1":
            d229 = codecs.open(r'phrsalverbs/PLAY OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d229))
            return
        
        if theoption1phrasal== "SIGN AWAY":
            d230 = codecs.open(r'phrsalverbs/SIGN AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d230))
            return
        
        if theoption1phrasal== "FALL OUT":
            d231 = codecs.open(r'phrsalverbs/FALL OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d231))
            return
        
        if theoption1phrasal== "PLAY OUT2":
            d232 = codecs.open(r'phrsalverbs/PLAY OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d232))
            return
        
        if theoption1phrasal== "SIGN FOR":
            d233 = codecs.open(r'phrsalverbs/SIGN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d233))
            return
        
        if theoption1phrasal== "FALL OVER":
            d234 = codecs.open(r'phrsalverbs/FALL OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d234))
            return
        
        if theoption1phrasal== "BE UP TO1":
            d235 = codecs.open(r'phrsalverbs/BE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d235))
            return
        
        if theoption1phrasal== "PLAY OUT3":
            d236 = codecs.open(r'phrsalverbs/PLAY OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d236))
            return
        
        if theoption1phrasal== "SIGN IN":
            d237 = codecs.open(r'phrsalverbs/SIGN IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d237))
            return
        
        if theoption1phrasal== "FALL THROUGH":
            d238 = codecs.open(r'phrsalverbs/FALL THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d238))
            return
        
        if theoption1phrasal== "PLAY UP":
            d239 = codecs.open(r'phrsalverbs/PLAY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d239))
            return
        
        if theoption1phrasal== "SIGN IN1":
            d240 = codecs.open(r'phrsalverbs/SIGN IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d240))
            return
        
        if theoption1phrasal== "FALL OUT1":
            d241 = codecs.open(r'phrsalverbs/FALL OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d241))
            return
        
        if theoption1phrasal== "FALL UNDER":
            d242 = codecs.open(r'phrsalverbs/FALL UNDER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d242))
            return
        
        if theoption1phrasal== "PLAY UP TO":
            d243 = codecs.open(r'phrsalverbs/PLAY UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d243))
            return
        
        if theoption1phrasal== "SIGN IN2":
            d244 = codecs.open(r'phrsalverbs/SIGN IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d244))
            return
        
        if theoption1phrasal== "FARM OUT":
            d245 = codecs.open(r'phrsalverbs/FARM OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d245))
            return
        
        if theoption1phrasal== "PLAY UP TO1":
            d246 = codecs.open(r'phrsalverbs/PLAY UP TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d246))
            return
        
        if theoption1phrasal== "LASH OUT ON":
            d247 = codecs.open(r'phrsalverbs/LASH OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d247))
            return
        
        if theoption1phrasal== "SIGN INTO":
            d248 = codecs.open(r'phrsalverbs/SIGN INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d248))
            return
        
        if theoption1phrasal== "FART ABOUT":
            d249 = codecs.open(r'phrsalverbs/FART ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d249))
            return
        
        if theoption1phrasal== "PLAY UPON":
            d250 = codecs.open(r'phrsalverbs/PLAY UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(d250))
            return














        if theoption1phrasal== "SIGN OFF":
            e1 = codecs.open(r'phrsalverbs/SIGN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e1))
            return
        
        if theoption1phrasal== "FART AROUND":
            e2 = codecs.open(r'phrsalverbs/FART AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e2))
            return
        
        if theoption1phrasal== "PLAY WITH":
            e3 = codecs.open(r'phrsalverbs/PLAY WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e3))
            return
        
        if theoption1phrasal== "SIGN OFF1":
            e4 = codecs.open(r'phrsalverbs/SIGN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e4))
            return
        
        if theoption1phrasal== "FASTEN DOWN":
            e5 = codecs.open(r'phrsalverbs/FASTEN DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e5))
            return
        
        if theoption1phrasal== "PLAY WITH1":
            e6 = codecs.open(r'phrsalverbs/PLAY WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e6))
            return
        
        if theoption1phrasal== "FART AROUND1":
            e7 = codecs.open(r'phrsalverbs/FART AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e7))
            return
        
        if theoption1phrasal== "BEAM UP":
            e8 = codecs.open(r'phrsalverbs/BEAM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e8))
            return
        
        if theoption1phrasal== "FASTEN ON":
            e9 = codecs.open(r'phrsalverbs/FASTEN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e9))
            return
        
        if theoption1phrasal== "PLAY WITH2":
            e10 = codecs.open(r'phrsalverbs/PLAY WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e10))
            return
        
        if theoption1phrasal== "SIGN OFF2":
            e11 = codecs.open(r'phrsalverbs/SIGN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e11))
            return
        
        if theoption1phrasal== "FASTEN ONTO":
            e12 = codecs.open(r'phrsalverbs/FASTEN ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e12))
            return
        
        if theoption1phrasal== "PLEAD OUT":
            e13 = codecs.open(r'phrsalverbs/PLEAD OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e13))
            return
        
        if theoption1phrasal== "PLAY WITH3":
            e14 = codecs.open(r'phrsalverbs/PLAY WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e14))
            return
        
        if theoption1phrasal== "FASTEN ONTO1":
            e15 = codecs.open(r'phrsalverbs/FASTEN ONTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e15))
            return
        
        if theoption1phrasal== "PLOW BACK":
            e16 = codecs.open(r'phrsalverbs/PLOW BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e16))
            return
        
        if theoption1phrasal== "SIGN OFF3":
            e17 = codecs.open(r'phrsalverbs/SIGN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e17))
            return
        
        if theoption1phrasal== "FASTEN UP":
            e18 = codecs.open(r'phrsalverbs/FASTEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e18))
            return
        
        if theoption1phrasal== "LATCH ON":
            e19 = codecs.open(r'phrsalverbs/LATCH ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e19))
            return
        
        if theoption1phrasal== "PLOW INTO":
            e20 = codecs.open(r'phrsalverbs/PLOW INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e20))
            return
        
        if theoption1phrasal== "SIGN OFF4":
            e21 = codecs.open(r'phrsalverbs/SIGN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e21))
            return
        
        if theoption1phrasal== "SIGN OFF5":
            e22 = codecs.open(r'phrsalverbs/SIGN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e22))
            return
        
        if theoption1phrasal== "SIGN OFF6":
            e23 = codecs.open(r'phrsalverbs/SIGN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e23))
            return
        
        if theoption1phrasal== "SIGN OFF7":
            e24 = codecs.open(r'phrsalverbs/SIGN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e24))
            return
        
        if theoption1phrasal== "FATHOM OUT":
            e25 = codecs.open(r'phrsalverbs/FATHOM OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e25))
            return
        
        if theoption1phrasal== "PLOW ON":
            e26 = codecs.open(r'phrsalverbs/PLOW ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e26))
            return
        
        if theoption1phrasal== "PLOW THROUGH":
            e27 = codecs.open(r'phrsalverbs/PLOW THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e27))
            return
        
        if theoption1phrasal== "FATTEN UP":
            e28 = codecs.open(r'phrsalverbs/FATTEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e28))
            return
        
        if theoption1phrasal== "FAWN ON":
            e29 = codecs.open(r'phrsalverbs/FAWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e29))
            return
        
        if theoption1phrasal== "PLOW THROUGH1":
            e30 = codecs.open(r'phrsalverbs/PLOW THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e30))
            return
        
        if theoption1phrasal== "BE OUT TO":
            e31 = codecs.open(r'phrsalverbs/BE OUT TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e31))
            return
        
        if theoption1phrasal== "FAWN OVER":
            e32 = codecs.open(r'phrsalverbs/FAWN OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e32))
            return
        
        if theoption1phrasal== "PLOW THROUGH2":
            e33 = codecs.open(r'phrsalverbs/PLOW THROUGH3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e33))
            return
        
        if theoption1phrasal== "FAWN ON1":
            e34 = codecs.open(r'phrsalverbs/FAWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e34))
            return
        
        if theoption1phrasal== "FEED OFF":
            e35 = codecs.open(r'phrsalverbs/FEED OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e35))
            return
        
        if theoption1phrasal== "PLOW UP":
            e36 = codecs.open(r'phrsalverbs/PLOW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e36))
            return
        
        if theoption1phrasal== "SIGN OFF8":
            e37 = codecs.open(r'phrsalverbs/SIGN OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e37))
            return
        
        if theoption1phrasal== "FEED OFF":
            e38 = codecs.open(r'phrsalverbs/FEED OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e38))
            return
        
        if theoption1phrasal== "PLUCK AT":
            e39 = codecs.open(r'phrsalverbs/PLUCK AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e39))
            return
        
        if theoption1phrasal== "SIGN OFF9":
            e40 = codecs.open(r'phrsalverbs/SIGN OFF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e40))
            return
        
        if theoption1phrasal== "FEED OFF1":
            e41 = codecs.open(r'phrsalverbs/FEED OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e41))
            return
        
        if theoption1phrasal== "BACK UP":
            e42 = codecs.open(r'phrsalverbs/BACK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e42))
            return
        
        if theoption1phrasal== "FEED ON":
            e43 = codecs.open(r'phrsalverbs/FEED ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e43))
            return
        
        if theoption1phrasal== "PLUCK UP":
            e44 = codecs.open(r'phrsalverbs/PLUCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e44))
            return
        
        if theoption1phrasal== "SIGN OFF ON":
            e45 = codecs.open(r'phrsalverbs/SIGN OFF ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e45))
            return
        
        if theoption1phrasal== "FEED ON1":
            e46 = codecs.open(r'phrsalverbs/FEED ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e46))
            return
        
        if theoption1phrasal== "PLUG AWAY":
            e47 = codecs.open(r'phrsalverbs/PLUG AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e47))
            return
        
        if theoption1phrasal== "SIGN ON":
            e48 = codecs.open(r'phrsalverbs/SIGN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e48))
            return
        
        if theoption1phrasal== "FEED ON2":
            e49 = codecs.open(r'phrsalverbs/FEED ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e49))
            return
        
        if theoption1phrasal== "PLUG IN":
            e50 = codecs.open(r'phrsalverbs/PLUG IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e50))
            return


        if theoption1phrasal== "SIGN ON1":
            e51 = codecs.open(r'phrsalverbs/SIGN ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e51))
            return
        
        if theoption1phrasal== "FEED UP":
            e52 = codecs.open(r'phrsalverbs/FEED UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e52))
            return
        
        if theoption1phrasal== "JACK UP":
            e53 = codecs.open(r'phrsalverbs/JACK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e53))
            return
        
        if theoption1phrasal== "COUNT ON":
            e54 = codecs.open(r'phrsalverbs/COUNT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e54))
            return
        
        if theoption1phrasal== "PLUG INTO":
            e55 = codecs.open(r'phrsalverbs/PLUG INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e55))
            return
        
        if theoption1phrasal== "SIGN ON2":
            e56 = codecs.open(r'phrsalverbs/SIGN ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e56))
            return
        
        if theoption1phrasal== "FEEL UP":
            e57 = codecs.open(r'phrsalverbs/FEEL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e57))
            return
        
        if theoption1phrasal== "PLUMP DOWN":
            e58 = codecs.open(r'phrsalverbs/PLUMP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e58))
            return
        
        if theoption1phrasal== "SIGN ON3":
            e59 = codecs.open(r'phrsalverbs/SIGN ON3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e59))
            return
        
        if theoption1phrasal== "FEEL UP TO":
            e60 = codecs.open(r'phrsalverbs/FEEL UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e60))
            return
        
        if theoption1phrasal== "PLUMP FOR":
            e61 = codecs.open(r'phrsalverbs/PLUMP FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e61))
            return
        
        if theoption1phrasal== "SIGN ON WITH":
            e62 = codecs.open(r'phrsalverbs/SIGN ON WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e62))
            return
        
        if theoption1phrasal== "FENCE IN":
            e63 = codecs.open(r'phrsalverbs/FENCE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e63))
            return
        
        if theoption1phrasal== "PLUMP UP":
            e64 = codecs.open(r'phrsalverbs/PLUMP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e64))
            return
        
        if theoption1phrasal== "JOG ALONG":
            e65 = codecs.open(r'phrsalverbs/JOG ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e65))
            return
        
        if theoption1phrasal== "SIGN OUT":
            e66 = codecs.open(r'phrsalverbs/SIGN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e66))
            return
        
        if theoption1phrasal== "FENCE OFF":
            e67 = codecs.open(r'phrsalverbs/FENCE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e67))
            return
        
        if theoption1phrasal== "PLUMP YOURSELF DOWN":
            e68 = codecs.open(r'phrsalverbs/PLUMP YOURSELF DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e68))
            return
        
        if theoption1phrasal== "SIGN OUT1":
            e69 = codecs.open(r'phrsalverbs/SIGN OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e69))
            return

        if theoption1phrasal== "FEND FOR":
            e70 = codecs.open(r'phrsalverbs/FEND FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e70))
            return

        if theoption1phrasal== "POINT OUT":
            e71 = codecs.open(r'phrsalverbs/POINT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e71))
            return
        
        if theoption1phrasal== "SIGN OUT OF":
            e72 = codecs.open(r'phrsalverbs/SIGN OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e72))
            return
        
        if theoption1phrasal== "FEND OFF":
            e73 = codecs.open(r'phrsalverbs/FEND OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e73))
            return
        
        if theoption1phrasal== "POKE ABOUT":
            e74 = codecs.open(r'phrsalverbs/POKE ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e74))
            return
        
        if theoption1phrasal== "SIGN UP":
            e75 = codecs.open(r'phrsalverbs/SIGN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e75))
            return
        
        if theoption1phrasal== "ADD UP":
            e76 = codecs.open(r'phrsalverbs/ADD UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e76))
            return
        
        if theoption1phrasal== "FEND OFF1":
            e77 = codecs.open(r'phrsalverbs/FEND OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e77))
            return
        
        if theoption1phrasal== "SIGN UP1":
            e78 = codecs.open(r'phrsalverbs/SIGN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e78))
            return
        
        if theoption1phrasal== "SINGLE OUT":
            e79 = codecs.open(r'phrsalverbs/SINGLE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e79))
            return
        
        if theoption1phrasal== "FERRET ABOUT":
            e80 = codecs.open(r'phrsalverbs/FERRET ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e80))
            return
        
        if theoption1phrasal== "SIGN WITH":
            e81 = codecs.open(r'phrsalverbs/SIGN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e81))
            return
        
        if theoption1phrasal== "SINK IN":
            e82 = codecs.open(r'phrsalverbs/SINK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e82))
            return
        
        if theoption1phrasal== "FERRET AROUND":
            e83 = codecs.open(r'phrsalverbs/FERRET AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e83))
            return
        
        if theoption1phrasal== "SIMMER DOWN":
            e84 = codecs.open(r'phrsalverbs/SIMMER DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e84))
            return
        
        if theoption1phrasal== "SIT ABOUT":
            e85 = codecs.open(r'phrsalverbs/SIT ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e85))
            return
        
        if theoption1phrasal== "FERRET OUT":
            e86 = codecs.open(r'phrsalverbs/FERRET OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e86))
            return
        
        if theoption1phrasal== "JOG ON":
            e87 = codecs.open(r'phrsalverbs/JOG ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e87))
            return
        
        if theoption1phrasal== "SING ALONG":
            e88 = codecs.open(r'phrsalverbs/SING ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e88))
            return

        if theoption1phrasal== "SIT AROUND":
            e89 = codecs.open(r'phrsalverbs/SIT AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e89))
            return
        
        if theoption1phrasal== "FESS UP":
            e90 = codecs.open(r'phrsalverbs/FESS UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e90))
            return
        
        if theoption1phrasal== "SING OUT":
            e91 = codecs.open(r'phrsalverbs/SING OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e91))
            return
        
        if theoption1phrasal== "SIT BACK":
            e92 = codecs.open(r'phrsalverbs/SIT BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e92))
            return
        
        if theoption1phrasal== "FESS UP1":
            e93 = codecs.open(r'phrsalverbs/FESS UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e93))
            return
        
        if theoption1phrasal== "SING OUT1":
            e94 = codecs.open(r'phrsalverbs/SING OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e94))
            return
        
        if theoption1phrasal== "SIT BACK1":
            e95 = codecs.open(r'phrsalverbs/SIT BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e95))
            return

        if theoption1phrasal== "FESS UP TO":
            e96 = codecs.open(r'phrsalverbs/FESS UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e96))
            return
        
        if theoption1phrasal== "SING UP":
            e97 = codecs.open(r'phrsalverbs/SING UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e97))
            return
        
        if theoption1phrasal== "BAG OUT":
            e98 = codecs.open(r'phrsalverbs/BAG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e98))
            return
        
        if theoption1phrasal== "SIT BY":
            e99 = codecs.open(r'phrsalverbs/SIT BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e99))
            return
        
        if theoption1phrasal== "FETCH UP":
            e100 = codecs.open(r'phrsalverbs/FETCH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e100))
            return
        
        if theoption1phrasal== "POKE AROUND":
            e101 = codecs.open(r'phrsalverbs/POKE AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e101))
            return
        
        if theoption1phrasal== "SIT DOWN":
            e102 = codecs.open(r'phrsalverbs/SIT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e102))
            return
        
        if theoption1phrasal== "FIDDLE ABOUT":
            e103 = codecs.open(r'phrsalverbs/FIDDLE ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e103))
            return
        
        if theoption1phrasal== "POLISH OFF":
            e104 = codecs.open(r'phrsalverbs/POLISH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e104))
            return
        
        if theoption1phrasal== "SIT FOR":
            e105 = codecs.open(r'phrsalverbs/SIT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e105))
            return
        
        if theoption1phrasal== "FIDDLE AROUND":
            e106 = codecs.open(r'phrsalverbs/FIDDLE AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e106))
            return
        
        if theoption1phrasal== "POLISH UP":
            e107 = codecs.open(r'phrsalverbs/POLISH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e107))
            return
        
        if theoption1phrasal== "SIT FOR1":
            e108 = codecs.open(r'phrsalverbs/SIT FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e108))
            return
        
        if theoption1phrasal== "COUNT ON1":
            e109 = codecs.open(r'phrsalverbs/COUNT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e109))
            return
        
        if theoption1phrasal== "FIDDLE AROUND1":
            e110 = codecs.open(r'phrsalverbs/FIDDLE AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e110))
            return
        
        if theoption1phrasal== "PONY UP":
            e111 = codecs.open(r'phrsalverbs/PONY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e111))
            return
        
        if theoption1phrasal== "SIT IN":
            e112 = codecs.open(r'phrsalverbs/SIT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e112))
            return
        
        if theoption1phrasal== "FIDDLE AWAY":
            e113 = codecs.open(r'phrsalverbs/FIDDLE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e113))
            return
        
        if theoption1phrasal== "POOP OUT":
            e114 = codecs.open(r'phrsalverbs/POOP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e114))
            return
        
        if theoption1phrasal== "SIT IN FOR":
            e115 = codecs.open(r'phrsalverbs/SIT IN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e115))
            return
        
        if theoption1phrasal== "FIGHT BACK":
            e116 = codecs.open(r'phrsalverbs/FIGHT BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e116))
            return
        
        if theoption1phrasal== "POOP OUT ON":
            e117 = codecs.open(r'phrsalverbs/POOP OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e117))
            return
        
        if theoption1phrasal== "SIT IN ON":
            e118 = codecs.open(r'phrsalverbs/SIT IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e118))
            return
        
        if theoption1phrasal== "FIGHT BACK1":
            e119 = codecs.open(r'phrsalverbs/FIGHT BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e119))
            return
        
        if theoption1phrasal== "JOIN IN":
            e120 = codecs.open(r'phrsalverbs/JOIN IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e120))
            return
        
        if theoption1phrasal== "POOTLE ALONG":
            e121 = codecs.open(r'phrsalverbs/POOTLE ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e121))
            return
        
        if theoption1phrasal== "SIT ON":
            e122 = codecs.open(r'phrsalverbs/SIT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e122))
            return
        
        if theoption1phrasal== "FIGHT IT OUT":
            e123 = codecs.open(r'phrsalverbs/FIGHT IT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e123))
            return
        
        if theoption1phrasal== "POP DOWN":
            e124 = codecs.open(r'phrsalverbs/POP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e124))
            return
        
        if theoption1phrasal== "SIT ON1":
            e125 = codecs.open(r'phrsalverbs/SIT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e125))
            return
        
        if theoption1phrasal== "FIGHT OFF":
            e126 = codecs.open(r'phrsalverbs/FIGHT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e126))
            return
        
        if theoption1phrasal== "POP DOWN TO":
            e127 = codecs.open(r'phrsalverbs/POP DOWN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e127))
            return
        
        if theoption1phrasal== "SIT ON2":
            e128 = codecs.open(r'phrsalverbs/SIT ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e128))
            return
        
        if theoption1phrasal== "FIGHT OFF1":
            e129 = codecs.open(r'phrsalverbs/FIGHT OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e129))
            return
        
        if theoption1phrasal== "POP IN":
            e130 = codecs.open(r'phrsalverbs/POP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e130))
            return
        
        if theoption1phrasal== "BAIL OUT":
            e131 = codecs.open(r'phrsalverbs/BAIL OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e131))
            return
        
        if theoption1phrasal== "SIT OUT":
            e132 = codecs.open(r'phrsalverbs/SIT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e132))
            return
        
        if theoption1phrasal== "FIGURE ON":
            e133 = codecs.open(r'phrsalverbs/FIGURE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e133))
            return
        
        if theoption1phrasal== "POP OFF":
            e134 = codecs.open(r'phrsalverbs/POP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e134))
            return
        
        if theoption1phrasal== "SIT OVER":
            e135 = codecs.open(r'phrsalverbs/SIT OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e135))
            return
        
        if theoption1phrasal== "FIGURE OUT":
            e136 = codecs.open(r'phrsalverbs/FIGURE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e136))
            return
        
        if theoption1phrasal== "POP OFF1":
            e137 = codecs.open(r'phrsalverbs/POP OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e137))
            return
        
        if theoption1phrasal== "SIT THROUGH":
            e138 = codecs.open(r'phrsalverbs/SIT THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e138))
            return
        
        if theoption1phrasal== "FILE AWAY":
            e139 = codecs.open(r'phrsalverbs/FILE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e139))
            return
        
        if theoption1phrasal== "POP OFF2":
            e140 = codecs.open(r'phrsalverbs/POP OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e140))
            return
        
        if theoption1phrasal== "SIT UP":
            e141 = codecs.open(r'phrsalverbs/SIT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e141))
            return
        
        if theoption1phrasal== "JOT DOWN":
            e142 = codecs.open(r'phrsalverbs/JOT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e142))
            return
        
        if theoption1phrasal== "FILE FOR":
            e143 = codecs.open(r'phrsalverbs/FILE FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e143))
            return
        
        if theoption1phrasal== "POP OUT":
            e144 = codecs.open(r'phrsalverbs/POP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e144))
            return
        
        if theoption1phrasal== "SIT UP1":
            e145 = codecs.open(r'phrsalverbs/SIT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e145))
            return
        
        if theoption1phrasal== "FILL IN":
            e146 = codecs.open(r'phrsalverbs/FILL IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e146))
            return
        
        if theoption1phrasal== "POP UP":
            e147 = codecs.open(r'phrsalverbs/POP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e147))
            return
        
        if theoption1phrasal== "SIT WITH":
            e148 = codecs.open(r'phrsalverbs/SIT WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e148))
            return
        
        if theoption1phrasal== "FILL IN1":
            e149 = codecs.open(r'phrsalverbs/FILL IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e149))
            return

        if theoption1phrasal== "POP UP1":
            e150 = codecs.open(r'phrsalverbs/POP UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e150))
            return
        
        if theoption1phrasal== "SIZE UP":
            e151 = codecs.open(r'phrsalverbs/SIZE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e151))
            return
        
        if theoption1phrasal== "FILL IN ON":
            e152 = codecs.open(r'phrsalverbs/FILL IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e152))
            return
        
        if theoption1phrasal== "COUNT OFF":
            e153 = codecs.open(r'phrsalverbs/COUNT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e153))
            return
        
        if theoption1phrasal== "PORE OVER":
            e154 = codecs.open(r'phrsalverbs/PORE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e154))
            return
        
        if theoption1phrasal== "SIZE UP1":
            e155 = codecs.open(r'phrsalverbs/SIZE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e155))
            return
        
        if theoption1phrasal== "FILL OUT":
            e156 = codecs.open(r'phrsalverbs/FILL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e156))
            return
        
        if theoption1phrasal== "POTTER ABOUT":
            e157 = codecs.open(r'phrsalverbs/POTTER ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e157))
            return
        
        if theoption1phrasal== "SKEEVE OUT":
            e158 = codecs.open(r'phrsalverbs/SKEEVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e158))
            return
        
        if theoption1phrasal== "FILL UP":
            e159 = codecs.open(r'phrsalverbs/FILL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e159))
            return
        
        if theoption1phrasal== "POTTER AROUND":
            e160 = codecs.open(r'phrsalverbs/POTTER AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e160))
            return
        
        if theoption1phrasal== "SKIN UP":
            e161 = codecs.open(r'phrsalverbs/SKIN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e161))
            return

        if theoption1phrasal== "FILTER IN":
            e162 = codecs.open(r'phrsalverbs/FILLTER IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e162))
            return
        
        if theoption1phrasal== "PLOUGH BACK":
            e163 = codecs.open(r'phrsalverbs/PLOUGH BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e163))
            return
        
        if theoption1phrasal== "BACK OUT":
            e164 = codecs.open(r'phrsalverbs/BACK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e164))
            return
        
        if theoption1phrasal== "JUICE UP":
            e165 = codecs.open(r'phrsalverbs/JUICE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e165))
            return
        
        if theoption1phrasal== "SKIN UP1":
            e166 = codecs.open(r'phrsalverbs/SKIN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e166))
            return
        
        if theoption1phrasal== "FILTER OUT":
            e167 = codecs.open(r'phrsalverbs/FILTER OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e167))
            return
        
        if theoption1phrasal== "PLOUGH INTO":
            e168 = codecs.open(r'phrsalverbs/PLOUGH INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e168))
            return
        
        if theoption1phrasal== "SKIVE OFF":
            e169 = codecs.open(r'phrsalverbs/SKIVE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e169))
            return
        
        if theoption1phrasal== "FIND OUT":
            e170 = codecs.open(r'phrsalverbs/FIND OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e170))
            return
        
        if theoption1phrasal== "PLOUGH ON":
            e171 = codecs.open(r'phrsalverbs/PLOUGH ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e171))
            return
        
        if theoption1phrasal== "SLACK OFF":
            e172 = codecs.open(r'phrsalverbs/SLACK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e172))
            return

        if theoption1phrasal== "FINISH OFF":
            e173 = codecs.open(r'phrsalverbs/FINISH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e173))
            return
        
        if theoption1phrasal== "PLOUGH THROUGH":
            e174 = codecs.open(r'phrsalverbs/PLOUGH THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e174))
            return

        if theoption1phrasal== "SLACKEN OFF":
            e175 = codecs.open(r'phrsalverbs/SLACKEN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e175))
            return
        
        if theoption1phrasal== "ADD UP TO":
            e176 = codecs.open(r'phrsalverbs/ADD UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e176))
            return

        if theoption1phrasal== "FINISH OFF1":
            e177 = codecs.open(r'phrsalverbs/FINISH OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e177))
            return
        
        if theoption1phrasal== "PLOUGH THROUGH1":
            e178 = codecs.open(r'phrsalverbs/PLOUGH THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e178))
            return
        
        if theoption1phrasal== "SLAG OFF":
            e179 = codecs.open(r'phrsalverbs/SLAG OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e179))
            return

        if theoption1phrasal== "FINISH OFF2":
            e180 = codecs.open(r'phrsalverbs/FINISH OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e180))
            return
        
        if theoption1phrasal== "PLOUGH THROUGH2":
            e181 = codecs.open(r'phrsalverbs/PLOUGH THROUGH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e181))
            return
        
        if theoption1phrasal== "SLEEP AROUND":
            e182 = codecs.open(r'phrsalverbs/SLEEP AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e182))
            return
        
        if theoption1phrasal== "FINISH UP":
            e183 = codecs.open(r'phrsalverbs/FINISH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e183))
            return
        
        if theoption1phrasal== "PLOUGH UP":
            e184 = codecs.open(r'phrsalverbs/PLOUGH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e184))
            return
        
        if theoption1phrasal== "SLEEP IN":
            e185 = codecs.open(r'phrsalverbs/SLEEP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e185))
            return
        
        if theoption1phrasal== "FINISH UP WITH":
            e186 = codecs.open(r'phrsalverbs/FINISH UP WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e186))
            return
        
        if theoption1phrasal== "BAIL OUT1":
            e187 = codecs.open(r'phrsalverbs/BAIL OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e187))
            return
        
        if theoption1phrasal== "POUR DOWN":
            e188 = codecs.open(r'phrsalverbs/POUR DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e188))
            return
        
        if theoption1phrasal== "SLEEP OFF":
            e189 = codecs.open(r'phrsalverbs/SLEEP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e189))
            return

        if theoption1phrasal== "FINISH WITH":
            e190 = codecs.open(r'phrsalverbs/FINISH WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e190))
            return
        
        if theoption1phrasal== "BAIL OUT1":
            e191 = codecs.open(r'phrsalverbs/BAIL OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e191))
            return
        
        if theoption1phrasal== "BAIL OUT2":
            e192 = codecs.open(r'phrsalverbs/BAIL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e192))
            return
        
        if theoption1phrasal== "POUR FORTH":
            e193 = codecs.open(r'phrsalverbs/POUR FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e193))
            return

        if theoption1phrasal== "SLEEP ON":
            e194 = codecs.open(r'phrsalverbs/SLEEP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e194))
            return
        
        if theoption1phrasal== "FINISH WITH1":
            e195 = codecs.open(r'phrsalverbs/FINISH WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e195))
            return
        
        if theoption1phrasal== "POWER DOWN":
            e196 = codecs.open(r'phrsalverbs/POWER DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e196))
            return
        
        if theoption1phrasal== "SLEEP OUT":
            e197 = codecs.open(r'phrsalverbs/SLEEP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e197))
            return
        
        if theoption1phrasal== "FINISH WITH2":
            e198 = codecs.open(r'phrsalverbs/FINISH WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e198))
            return
        
        if theoption1phrasal== "FINISH WITH2":
            e199 = codecs.open(r'phrsalverbs/FINISH WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e199))
            return
        
        if theoption1phrasal== "POWER OFF":
            e200 = codecs.open(r'phrsalverbs/POWER OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e200))
            return
        
        if theoption1phrasal== "JUMP AT":
            e201 = codecs.open(r'phrsalverbs/JUMP AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e201))
            return
        
        if theoption1phrasal== "SLEEP OVER":
            e202 = codecs.open(r'phrsalverbs/SLEEP OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e202))
            return
        
        if theoption1phrasal== "FINK ON":
            e203 = codecs.open(r'phrsalverbs/FINK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e203))
            return
        
        if theoption1phrasal== "POWER UP":
            e204 = codecs.open(r'phrsalverbs/POWER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e204))
            return
        
        if theoption1phrasal== "SLEEP THROUGH":
            e205 = codecs.open(r'phrsalverbs/SLEEP THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e205))
            return
        
        if theoption1phrasal== "FINK OUT":
            e206 = codecs.open(r'phrsalverbs/FINK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e206))
            return
        
        if theoption1phrasal== "PRATTLE ON":
            e207 = codecs.open(r'phrsalverbs/PRATTLE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e207))
            return
        
        if theoption1phrasal== "SLEEP TOGETHER":
            e208 = codecs.open(r'phrsalverbs/SLEEP TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e208))
            return
        
        if theoption1phrasal== "FIRE AWAY":
            e209 = codecs.open(r'phrsalverbs/FIRE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e209))
            return
        
        if theoption1phrasal== "PRESS AHEAD":
            e210 = codecs.open(r'phrsalverbs/PRESS AHEAD.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e210))
            return
        
        if theoption1phrasal== "SLICE OFF":
            e211 = codecs.open(r'phrsalverbs/SLICE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e211))
            return
        
        if theoption1phrasal== "COUNT IN":
            e212 = codecs.open(r'phrsalverbs/COUNT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e212))
            return
        
        if theoption1phrasal== "FIRE OFF":
            e213 = codecs.open(r'phrsalverbs/FIRE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e213))
            return
        
        if theoption1phrasal== "PRESS FOR":
            e214 = codecs.open(r'phrsalverbs/PRESS FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e214))
            return
        
        if theoption1phrasal== "SLICE UP":
            e215 = codecs.open(r'phrsalverbs/SLICE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e215))
            return
        
        if theoption1phrasal== "FIRE OFF":
            e216 = codecs.open(r'phrsalverbs/FIRE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e216))
            return
        
        if theoption1phrasal== "PRESS FORWARD WITH":
            e217 = codecs.open(r'phrsalverbs/PRESS FORWARD WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e217))
            return

        if theoption1phrasal== "SLIP AWAY":
            e218 = codecs.open(r'phrsalverbs/SLIP AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e218))
            return

        if theoption1phrasal== "FIRE UP":
            e219 = codecs.open(r'phrsalverbs/FIRE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e219))
            return
        
        if theoption1phrasal== "FIRE OFF1":
            e220 = codecs.open(r'phrsalverbs/FIRE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e220))
            return
        
        if theoption1phrasal== "PRESS INTO":
            e221 = codecs.open(r'phrsalverbs/PRESS INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e221))
            return
        
        if theoption1phrasal== "SLIP AWAY1":
            e222 = codecs.open(r'phrsalverbs/SLIP AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e222))
            return
        
        if theoption1phrasal== "FIRE UP1":
            e223 = codecs.open(r'phrsalverbs/FIRE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e223))
            return
        
        if theoption1phrasal== "JUMP IN":
            e224 = codecs.open(r'phrsalverbs/JUMP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e224))
            return
        
        if theoption1phrasal== "PRESS ON":
            e225 = codecs.open(r'phrsalverbs/PRESS ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e225))
            return
        
        if theoption1phrasal== "SLIP BY":
            e226 = codecs.open(r'phrsalverbs/SLIP BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e226))
            return
        
        if theoption1phrasal== "FIRM UP":
            e227 = codecs.open(r'phrsalverbs/FIRM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e227))
            return
        
        if theoption1phrasal== "PRESS UPON":
            e228 = codecs.open(r'phrsalverbs/PRESS UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e228))
            return

        if theoption1phrasal== "SLIP BY1":
            e229 = codecs.open(r'phrsalverbs/SLIP BY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e229))
            return
        
        if theoption1phrasal== "FIRM UP1":
            e230 = codecs.open(r'phrsalverbs/FIRM UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e230))
            return

        if theoption1phrasal== "PREY ON":
            e231 = codecs.open(r'phrsalverbs/PREY ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e231))
            return
        
        if theoption1phrasal== "SLIP DOWN":
            e232 = codecs.open(r'phrsalverbs/SLIP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e232))
            return
        
        if theoption1phrasal== "FISH FOR":
            e233 = codecs.open(r'phrsalverbs/FISH FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e233))
            return
        
        if theoption1phrasal== "PREY ON1":
            e234 = codecs.open(r'phrsalverbs/PREY ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e234))
            return
        
        if theoption1phrasal== "JUMP OFF":
            e235 = codecs.open(r'phrsalverbs/JUMP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e235))
            return
        
        if theoption1phrasal== "SLIP IN":
            e236 = codecs.open(r'phrsalverbs/SLIP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e236))
            return
        
        if theoption1phrasal== "FISH OUT":
            e237 = codecs.open(r'phrsalverbs/FISH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e237))
            return
        
        if theoption1phrasal== "PREY UPON":
            e238 = codecs.open(r'phrsalverbs/PREY UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e238))
            return
        
        if theoption1phrasal== "SLIP INTO":
            e239 = codecs.open(r'phrsalverbs/SLIP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e239))
            return
        
        if theoption1phrasal== "FISH OUT1":
            e240 = codecs.open(r'phrsalverbs/FISH OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e240))
            return
        
        if theoption1phrasal== "PREY UPON1":
            e241 = codecs.open(r'phrsalverbs/PREY UPON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e241))
            return
        
        if theoption1phrasal== "SLIP INTO1":
            e242 = codecs.open(r'phrsalverbs/SLIP INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e242))
            return
        
        if theoption1phrasal== "FIT IN":
            e243 = codecs.open(r'phrsalverbs/FIT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e243))
            return
        
        if theoption1phrasal== "PRICE IN":
            e244 = codecs.open(r'phrsalverbs/PRICE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e244))
            return
        
        if theoption1phrasal== "SLIP OFF":
            e245 = codecs.open(r'phrsalverbs/SLIP OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e245))
            return
        
        if theoption1phrasal== "BAIL OUT2":
            e246 = codecs.open(r'phrsalverbs/BAIL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e246))
            return
        
        if theoption1phrasal== "FIT IN1":
            e247 = codecs.open(r'phrsalverbs/FIT IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e247))
            return
        
        if theoption1phrasal== "PRICE UP":
            e248 = codecs.open(r'phrsalverbs/PRICE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e248))
            return
        
        if theoption1phrasal== "SLIP OFF":
            e249 = codecs.open(r'phrsalverbs/SLIP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e249))
            return

        if theoption1phrasal== "FIT IN WITH":
            e250 = codecs.open(r'phrsalverbs/FIT IN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e250))
            return

        if theoption1phrasal== "PRINT OUT":
            e251 = codecs.open(r'phrsalverbs/PRINT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e251))
            return
        
        if theoption1phrasal== "SLIP OFF TO":
            e252 = codecs.open(r'phrsalverbs/SLIP OFF TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e252))
            return
        
        if theoption1phrasal== "FIT IN WITH1":
            e253 = codecs.open(r'phrsalverbs/FIT IN WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e253))
            return
        
        if theoption1phrasal== "PROP UP":
            e254 = codecs.open(r'phrsalverbs/PROP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e254))
            return
        
        if theoption1phrasal== "SLIP ON":
            e255 = codecs.open(r'phrsalverbs/SLIP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e255))
            return
        
        if theoption1phrasal== "FIT INTO":
            e256 = codecs.open(r'phrsalverbs/FIT INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e256))
            return
        
        if theoption1phrasal== "JUMP ON":
            e257 = codecs.open(r'phrsalverbs/JUMP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e257))
            return
        
        if theoption1phrasal== "PSYCH OUT":
            e258 = codecs.open(r'phrsalverbs/PSYCH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e258))
            return
        
        if theoption1phrasal== "SLIP OUT":
            e259 = codecs.open(r'phrsalverbs/SLIP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e259))
            return
        
        if theoption1phrasal== "FIT OUT":
            e260 = codecs.open(r'phrsalverbs/FIT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e260))
            return

        if theoption1phrasal== "PSYCH OUT1":
            e261 = codecs.open(r'phrsalverbs/PSYCH OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e261))
            return
        
        if theoption1phrasal== "SLIP THROUGH":
            e262 = codecs.open(r'phrsalverbs/SLIP THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e262))
            return
        
        if theoption1phrasal== "FIT OUT WITH":
            e263 = codecs.open(r'phrsalverbs/FIT OUT WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e263))
            return
        
        if theoption1phrasal== "PSYCH UP":
            e264 = codecs.open(r'phrsalverbs/PSYCH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e264))
            return
        
        if theoption1phrasal== "SLIP UP":
            e265 = codecs.open(r'phrsalverbs/SLIP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e265))
            return
        
        if theoption1phrasal== "FIT UP":
            e266 = codecs.open(r'phrsalverbs/FIT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e266))
            return
        
        if theoption1phrasal== "PUCKER UP":
            e267 = codecs.open(r'phrsalverbs/PUCKER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e267))
            return
        
        if theoption1phrasal== "COUNT FOR":
            e268 = codecs.open(r'phrsalverbs/COUNT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e268))
            return
        
        if theoption1phrasal== "SLOB ABOUT":
            e269 = codecs.open(r'phrsalverbs/SLOB ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e269))
            return
        
        if theoption1phrasal== "FIT UP1":
            e270 = codecs.open(r'phrsalverbs/FIT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e270))
            return
        
        if theoption1phrasal== "PUKE UP":
            e271 = codecs.open(r'phrsalverbs/PUKE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e271))
            return
        
        if theoption1phrasal== "SLOPE OFF":
            e272 = codecs.open(r'phrsalverbs/SLOPE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e272))
            return
        
        if theoption1phrasal== "FIX UP":
            e273 = codecs.open(r'phrsalverbs/FIX UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e273))
            return
        
        if theoption1phrasal== "PUMP INTO":
            e274 = codecs.open(r'phrsalverbs/PUMP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e274))
            return
        
        if theoption1phrasal== "SLOUGH OFF":
            e275 = codecs.open(r'phrsalverbs/SLOUGH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e275))
            return
        
        if theoption1phrasal== "FIX UP1":
            e276 = codecs.open(r'phrsalverbs/FIX UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e276))
            return
        
        if theoption1phrasal== "PUMP INTO":
            e277 = codecs.open(r'phrsalverbs/PUMP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(e277))
            return
        
        if theoption1phrasal== "MUDDLE THROUGH":
            f1 = codecs.open(r'phrsalverbs/MUDDLE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f1))
            return
        
        if theoption1phrasal== "FIX UP2":
            f2 = codecs.open(r'phrsalverbs/FIX UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f2))
            return
        
        if theoption1phrasal== "PUMP INTO1":
            f3 = codecs.open(r'phrsalverbs/PUMP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f3))
            return
        
        if theoption1phrasal== "SLOUGH OFF1":
            f4 = codecs.open(r'phrsalverbs/SLOUGH OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f4))
            return
        
        if theoption1phrasal== "JACK UP1":
            f5 = codecs.open(r'phrsalverbs/JACK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f5))
            return
        
        if theoption1phrasal== "KEEL OVER":
            f6 = codecs.open(r'phrsalverbs/KEEL OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f6))
            return
        
        if theoption1phrasal== "FIZZLE OUT":
            f7 = codecs.open(r'phrsalverbs/FIZZLE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f7))
            return
        
        if theoption1phrasal== "PUMP OUT":
            f8 = codecs.open(r'phrsalverbs/PUMP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f8))
            return
        
        if theoption1phrasal== "SLOUGH OFF2":
            f9 = codecs.open(r'phrsalverbs/SLOUGH OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f9))
            return
        
        if theoption1phrasal== "FLAG DOWN":
            f10 = codecs.open(r'phrsalverbs/FLAG DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f10))
            return
        
        if theoption1phrasal== "PUMP OUT1":
            f11 = codecs.open(r'phrsalverbs/PUMP OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f11))
            return
        
        if theoption1phrasal== "SLOB AROUND":
            f12 = codecs.open(r'phrsalverbs/SLOB AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f12))
            return
        
        if theoption1phrasal== "FLAG UP":
            f13 = codecs.open(r'phrsalverbs/FLAG UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f13))
            return
        
        if theoption1phrasal== "PUMP UP":
            f14 = codecs.open(r'phrsalverbs/PUMP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f14))
            return
        
        if theoption1phrasal== "SLOW DOWN":
            f15 = codecs.open(r'phrsalverbs/SLOW DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f15))
            return
        
        if theoption1phrasal== "FLAKE OUT":
            f16 = codecs.open(r'phrsalverbs/FLAKE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f16))
            return
        
        if theoption1phrasal== "BAIL OUT OF":
            f17 = codecs.open(r'phrsalverbs/BAIL OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f17))
            return
        
        if theoption1phrasal== "PUMP UP1":
            f18 = codecs.open(r'phrsalverbs/PUMP UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f18))
            return
        
        if theoption1phrasal== "SLOW UP":
            f19 = codecs.open(r'phrsalverbs/SLOW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f19))
            return
        
        if theoption1phrasal== "FLAME OUT":
            f20 = codecs.open(r'phrsalverbs/FLAME OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f20))
            return
        
        if theoption1phrasal== "PUMP UP2":
            f21 = codecs.open(r'phrsalverbs/PUMP UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f21))
            return
        
        if theoption1phrasal== "SLOW DOWN1":
            f22 = codecs.open(r'phrsalverbs/SLOW DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f22))
            return
        
        if theoption1phrasal== "FLAME UP":
            f23 = codecs.open(r'phrsalverbs/FLAME UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f23))
            return
        
        if theoption1phrasal== "PUSH ABOUT":
            f24 = codecs.open(r'phrsalverbs/PUSH ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f24))
            return
        
        if theoption1phrasal== "SLOB AROUND":
            f25 = codecs.open(r'phrsalverbs/SLOB AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f25))
            return
        
        if theoption1phrasal== "FLARE OUT":
            f26 = codecs.open(r'phrsalverbs/FLARE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f26))
            return
        
        if theoption1phrasal== "PUSH AHEAD":
            f27 = codecs.open(r'phrsalverbs/PUSH AHEAD.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f27))
            return
        
        if theoption1phrasal== "KEEL OVER1":
            f28 = codecs.open(r'phrsalverbs/KEEL OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f28))
            return
        
        if theoption1phrasal== "SLUG IT OUT":
            f29 = codecs.open(r'phrsalverbs/SLUG IT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f29))
            return
        
        if theoption1phrasal== "FLARE UP":
            f30 = codecs.open(r'phrsalverbs/FLARE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f30))
            return
        
        if theoption1phrasal== "PUSH ALONG":
            f31 = codecs.open(r'phrsalverbs/PUSH ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f31))
            return
        
        if theoption1phrasal== "SMACK OF":
            f32 = codecs.open(r'phrsalverbs/SMACK OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f32))
            return
        
        if theoption1phrasal== "FLASH ABOUT":
            f33 = codecs.open(r'phrsalverbs/FLASH ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f33))
            return
        
        if theoption1phrasal== "PUSH AROUND":
            f34 = codecs.open(r'phrsalverbs/PUSH AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f34))
            return
        
        if theoption1phrasal== "SMASH DOWN":
            f35 = codecs.open(r'phrsalverbs/SMASH DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f35))
            return
        
        if theoption1phrasal== "FLASH AROUND":
            f36 = codecs.open(r'phrsalverbs/FLASH AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f36))
            return
        
        if theoption1phrasal== "PUSH IN":
            f37 = codecs.open(r'phrsalverbs/PUSH IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f37))
            return
        
        if theoption1phrasal== "SMASH IN":
            f38 = codecs.open(r'phrsalverbs/SMASH IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f38))
            return
        
        if theoption1phrasal== "COUNT DOWN":
            f39 = codecs.open(r'phrsalverbs/COUNT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f39))
            return
        
        if theoption1phrasal== "FLASH BACK":
            f40 = codecs.open(r'phrsalverbs/FLASH BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f40))
            return
        
        if theoption1phrasal== "PUSH OFF":
            f41 = codecs.open(r'phrsalverbs/PUSH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f41))
            return
        
        if theoption1phrasal== "SMASH UP":
            f42 = codecs.open(r'phrsalverbs/SMASH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f42))
            return
        
        if theoption1phrasal== "FLASH BY":
            f43 = codecs.open(r'phrsalverbs/FLASH BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f43))
            return
        
        if theoption1phrasal== "PUSH OFF1":
            f44 = codecs.open(r'phrsalverbs/PUSH OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f44))
            return
        
        if theoption1phrasal== "SMOKE OUT":
            f45 = codecs.open(r'phrsalverbs/SMOKE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f45))
            return
        
        if theoption1phrasal== "FLASH PAST":
            f46 = codecs.open(r'phrsalverbs/FLASH PAST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f46))
            return
        
        if theoption1phrasal== "PUSH ON":
            f47 = codecs.open(r'phrsalverbs/PUSH ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f47))
            return
        
        if theoption1phrasal== "SNAFFLE UP":
            f48 = codecs.open(r'phrsalverbs/SNAFFLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f48))
            return
        
        if theoption1phrasal== "FLESH OUT":
            f49 = codecs.open(r'phrsalverbs/FLESH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f49))
            return

        if theoption1phrasal== "KEEL OVER2":
            f50 = codecs.open(r'phrsalverbs/KEEL OVER2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f50))
            return


        if theoption1phrasal== "PUSH OUT":
            f51 = codecs.open(r'phrsalverbs/PUSH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f51))
            return
        
        if theoption1phrasal== "SNAP OFF":
            f52 = codecs.open(r'phrsalverbs/SNAP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f52))
            return
        
        if theoption1phrasal== "FLICK OVER":
            f53 = codecs.open(r'phrsalverbs/FLICK OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f53))
            return
        
        if theoption1phrasal== "PUSH OVER":
            f54 = codecs.open(r'phrsalverbs/PUSH OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f54))
            return
        
        if theoption1phrasal== "SNAP OUT OF":
            f55 = codecs.open(r'phrsalverbs/SNAP OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f55))
            return
        
        if theoption1phrasal== "FLICK THROUGH":
            f56 = codecs.open(r'phrsalverbs/FLICK THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f56))
            return
        
        if theoption1phrasal== "PUSH THROUGH":
            f57 = codecs.open(r'phrsalverbs/PUSH THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f57))
            return
        
        if theoption1phrasal== "SNAP TO IT":
            f58 = codecs.open(r'phrsalverbs/SNAP TO IT!.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f58))
            return
        
        if theoption1phrasal== "FLICK THROUGH1":
            f59 = codecs.open(r'phrsalverbs/FLICK THROGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f59))
            return
        
        if theoption1phrasal== "PUT ACROSS":
            f60 = codecs.open(r'phrsalverbs/PUT ACROSS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f60))
            return
        

        if theoption1phrasal== "ADD UP TO1":
            f61 = codecs.open(r'phrsalverbs/ADD UP TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f61))
            return
        
        if theoption1phrasal== "SNAP UP":
            f62 = codecs.open(r'phrsalverbs/SNAP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f62))
            return
        
        if theoption1phrasal== "FLIP OFF":
            f63 = codecs.open(r'phrsalverbs/FLIP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f63))
            return
        
        if theoption1phrasal== "PUT AWAY":
            f64 = codecs.open(r'phrsalverbs/PUT AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f64))
            return
        
        if theoption1phrasal== "SNARL UP":
            f65 = codecs.open(r'phrsalverbs/SNARL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f65))
            return
        
        if theoption1phrasal== "FLIP OUT":
            f66 = codecs.open(r'phrsalverbs/FLIP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f66))
            return
        
        if theoption1phrasal== "PUT BACK":
            f67 = codecs.open(r'phrsalverbs/PUT BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f67))
            return
        
        if theoption1phrasal== "SNEAK OUT":
            f68 = codecs.open(r'phrsalverbs/SNEAK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f68))
            return
        
        if theoption1phrasal== "FLIP THROUGH":
            f69 = codecs.open(r'phrsalverbs/FLIP THROGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f69))
            return

        if theoption1phrasal== "PUT BY":
            f70 = codecs.open(r'phrsalverbs/PUT BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f70))
            return

        if theoption1phrasal== "SNEAK UP ON":
            f71 = codecs.open(r'phrsalverbs/SNEAK UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f71))
            return
        
        if theoption1phrasal== "KEEP AROUND":
            f72 = codecs.open(r'phrsalverbs/KEEP AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f72))
            return
        
        if theoption1phrasal== "FLOAT ABOUT":
            f73 = codecs.open(r'phrsalverbs/FLOAT ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f73))
            return
        
        if theoption1phrasal== "PUT DOWN":
            f74 = codecs.open(r'phrsalverbs/PUT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f74))
            return
        
        if theoption1phrasal== "SNEEZE AT":
            f75 = codecs.open(r'phrsalverbs/SNEEZE AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f75))
            return
        
        if theoption1phrasal== "FLOAT AROUND":
            f76 = codecs.open(r'phrsalverbs/FLOAT AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f76))
            return

        if theoption1phrasal== "PUT DOWN1":
            f77 = codecs.open(r'phrsalverbs/PUT DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f77))
            return
        
        if theoption1phrasal== "SNIFF AROUND":
            f78 = codecs.open(r'phrsalverbs/SNIFF AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f78))
            return
        
        if theoption1phrasal== "FLOG OFF":
            f79 = codecs.open(r'phrsalverbs/FLOG OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f79))
            return
        
        if theoption1phrasal== "PUT DOWN FOR":
            f80 = codecs.open(r'phrsalverbs/PUT DOWN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f80))
            return
        
        if theoption1phrasal== "SNIFF AT":
            f81 = codecs.open(r'phrsalverbs/SNIFF AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f81))
            return
        
        if theoption1phrasal== "FLOOR IT":
            f82 = codecs.open(r'phrsalverbs/FLOOR IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f82))
            return
        
        if theoption1phrasal== "BAIL OUT ON":
            f83 = codecs.open(r'phrsalverbs/BAIL OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f83))
            return
        
        if theoption1phrasal== "PUT DOWN TO":
            f84 = codecs.open(r'phrsalverbs/PUT DOWN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f84))
            return
        
        if theoption1phrasal== "SNIFF OUT":
            f85 = codecs.open(r'phrsalverbs/SNIFF OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f85))
            return
        
        if theoption1phrasal== "FLOUNCE OFF":
            f86 = codecs.open(r'phrsalverbs/FLOUNCE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f86))
            return
        
        if theoption1phrasal== "PUT FORWARD":
            f87 = codecs.open(r'phrsalverbs/PUT FORWARD.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f87))
            return
        
        if theoption1phrasal== "SNIFF OUT1":
            f88 = codecs.open(r'phrsalverbs/SNIFF OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f88))
            return
        
        if theoption1phrasal== "FLOUNCE OUT":
            f89 = codecs.open(r'phrsalverbs/FLOUNCE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f89))
            return
        
        if theoption1phrasal== "PUT IN":
            f90 = codecs.open(r'phrsalverbs/PUT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f90))
            return
        
        if theoption1phrasal== "SNITCH ON":
            f91 = codecs.open(r'phrsalverbs/SNITCH ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f91))
            return
        
        if theoption1phrasal== "FLUFF OUT":
            f92 = codecs.open(r'phrsalverbs/FLUFF OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f92))
            return
        
        if theoption1phrasal== "SNUFF OUT":
            f93 = codecs.open(r'phrsalverbs/SNUFF OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f93))
            return

        if theoption1phrasal== "AGREE WITH":
            f94 = codecs.open(r'phrsalverbs/AGREE WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f94))
            return
        
        if theoption1phrasal== "SNUGGLE UP":
            f95 = codecs.open(r'phrsalverbs/SNUGGLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f95))
            return
        
        if theoption1phrasal== "FLUFF UP":
            f96 = codecs.open(r'phrsalverbs/FLUFF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f96))
            return

        if theoption1phrasal== "SNUGGLE UP TO":
            f97 = codecs.open(r'phrsalverbs/SNUGGLE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f97))
            return
        
        if theoption1phrasal== "SNUFF OUT1":
            f98 = codecs.open(r'phrsalverbs/SNUFF OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f98))
            return
        
        if theoption1phrasal== "FLY ABOUT":
            f99 = codecs.open(r'phrsalverbs/FLY ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f99))
            return
        
        if theoption1phrasal== "PUT IN FOR":
            f100 = codecs.open(r'phrsalverbs/PUT IN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f100))
            return
        
        if theoption1phrasal== "SNUFF OUT2":
            f101 = codecs.open(r'phrsalverbs/SNUFF OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f101))
            return
        
        if theoption1phrasal== "FLY AROUND":
            f102 = codecs.open(r'phrsalverbs/FLY AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f102))
            return
        
        if theoption1phrasal== "PUT OFF":
            f103 = codecs.open(r'phrsalverbs/PUT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f103))
            return
        
        if theoption1phrasal== "SOAK UP":
            f104 = codecs.open(r'phrsalverbs/SOAK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f104))
            return

        if theoption1phrasal== "KEEP AT":
            f105 = codecs.open(r'phrsalverbs/KEEP AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f105))
            return

        if theoption1phrasal== "FLY AT":
            f106 = codecs.open(r'phrsalverbs/FLY AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f106))
            return

        if theoption1phrasal== "PUT OFF1":
            f107 = codecs.open(r'phrsalverbs/PUT OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f107))
            return
        
        if theoption1phrasal== "SOAK UP1":
            f108 = codecs.open(r'phrsalverbs/SOAK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f108))
            return
        
        if theoption1phrasal== "FLY AT1":
            f109 = codecs.open(r'phrsalverbs/FLY AT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f109))
            return
        
        if theoption1phrasal== "PUT ON":
            f110 = codecs.open(r'phrsalverbs/PUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f110))
            return

        if theoption1phrasal== "SOBER UP":
            f111 = codecs.open(r'phrsalverbs/SOBER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f111))
            return
        
        if theoption1phrasal== "FLY BY":
            f112 = codecs.open(r'phrsalverbs/FLY BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f112))
            return
        
        if theoption1phrasal== "PUT ON1":
            f113 = codecs.open(r'phrsalverbs/PUT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f113))
            return
        
        if theoption1phrasal== "SOCK AWAY":
            f114 = codecs.open(r'phrsalverbs/SOCK AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f114))
            return
        
        if theoption1phrasal== "FLY INTO":
            f115 = codecs.open(r'phrsalverbs/FLY INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f115))
            return
        
        if theoption1phrasal== "BRING DOWN":
            f116 = codecs.open(r'phrsalverbs/BRING DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f116))
            return
        
        if theoption1phrasal== "ACT  UPON":
            f117 = codecs.open(r'phrsalverbs/ACT UPON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f117))
            return
        
        if theoption1phrasal== "COUNT AMONG":
            f118 = codecs.open(r'phrsalverbs/COUNT AMONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f118))
            return
        
        if theoption1phrasal== "PUT ON2":
            f119 = codecs.open(r'phrsalverbs/PUT ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f119))
            return
        
        if theoption1phrasal== "SOCK IN":
            f120 = codecs.open(r'phrsalverbs/SOCK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f120))
            return
        
        if theoption1phrasal== "FOB OFF":
            f121 = codecs.open(r'phrsalverbs/FOB OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f121))
            return
        
        if theoption1phrasal== "PUT OUT":
            f122 = codecs.open(r'phrsalverbs/PUT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f122))
            return

        if theoption1phrasal== "SOLDIER ON":
            f123 = codecs.open(r'phrsalverbs/SOLDIER ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f123))
            return
        
        if theoption1phrasal== "FOB OFF1":
            f124 = codecs.open(r'phrsalverbs/FOB OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f124))
            return
        
        if theoption1phrasal== "SORT OUT":
            f125 = codecs.open(r'phrsalverbs/SORT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f125))
            return
        
        if theoption1phrasal== "FOB OFF ON":
            f126 = codecs.open(r'phrsalverbs/FOB OFF ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f126))
            return
        
        if theoption1phrasal== "PUT OUT1":
            f127 = codecs.open(r'phrsalverbs/PUT OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f127))
            return
        
        if theoption1phrasal== "SOUND OFF":
            f128 = codecs.open(r'phrsalverbs/SOUND OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f128))
            return
        
        if theoption1phrasal== "KEEP AWAY":
            f129 = codecs.open(r'phrsalverbs/KEEP AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f129))
            return

        if theoption1phrasal== "FOB OFF ONTO":
            f130 = codecs.open(r'phrsalverbs/FOB OFF ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f130))
            return
        
        if theoption1phrasal== "PUT OUT2":
            f131 = codecs.open(r'phrsalverbs/PUT OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f131))
            return
        
        if theoption1phrasal== "SOUND OUT":
            f132 = codecs.open(r'phrsalverbs/SOUND OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f132))
            return
        
        if theoption1phrasal== "FOB OFF WITH":
            f133 = codecs.open(r'phrsalverbs/FOB OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f133))
            return
        
        if theoption1phrasal== "PUT OVER":
            f134 = codecs.open(r'phrsalverbs/PUT OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f134))
            return
        
        if theoption1phrasal== "SPACE OUT":
            f135 = codecs.open(r'phrsalverbs/SPACE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f135))
            return
        
        if theoption1phrasal== "FOCUS ON":
            f136 = codecs.open(r'phrsalverbs/FOCUS ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f136))
            return
        
        if theoption1phrasal== "PUT THROUGH":
            f137 = codecs.open(r'phrsalverbs/PUT THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f137))
            return
        
        if theoption1phrasal== "SPAFF AWAY":
            f138 = codecs.open(r'phrsalverbs/SPAFF AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f138))
            return
        
        if theoption1phrasal== "FOLD UP":
            f139 = codecs.open(r'phrsalverbs/FOLD UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f139))
            return
        
        if theoption1phrasal== "AIM AT":
            f140 = codecs.open(r'phrsalverbs/AIM AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f140))
            return
        
        if theoption1phrasal== "PUT TOGETHER":
            f141 = codecs.open(r'phrsalverbs/PUT TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f141))
            return

        if theoption1phrasal== "SPARK OFF":
            f142 = codecs.open(r'phrsalverbs/SPARK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f142))
            return

        if theoption1phrasal== "FOLLOW ON":
            f143 = codecs.open(r'phrsalverbs/FOLLOW ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f143))
            return
        
        if theoption1phrasal== "PUT TOWARDS":
            f144 = codecs.open(r'phrsalverbs/PUT TOWARDS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f144))
            return
        
        if theoption1phrasal== "SPARK UP":
            f145 = codecs.open(r'phrsalverbs/SPARK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f145))
            return
        
        if theoption1phrasal== "FOLLOW ON1":
            f146 = codecs.open(r'phrsalverbs/FOLLOW ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f146))
            return
        
        if theoption1phrasal== "PUT UP":
            f147 = codecs.open(r'phrsalverbs/PUT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f147))
            return
        
        if theoption1phrasal== "SPEAK OUT":
            f148 = codecs.open(r'phrsalverbs/SPEAK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f148))
            return
        
        if theoption1phrasal== "FOLLOW ON FROM":
            f149 = codecs.open(r'phrsalverbs/FOLLOW ON FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f149))
            return
        
        if theoption1phrasal== "PUT UP1":
            f150 = codecs.open(r'phrsalverbs/PUT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f150))
            return

        if theoption1phrasal== "COUNT AGAINST":
            f151 = codecs.open(r'phrsalverbs/COUNT AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f151))
            return
        
        if theoption1phrasal== "SPEAK TO":
            f152 = codecs.open(r'phrsalverbs/SPEAK TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f152))
            return
        
        if theoption1phrasal== "FOLLOW THROUGH":
            f153 =codecs.open(r'phrsalverbs/FOLLOW THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f153))
            return
        
        if theoption1phrasal== "PUT UP2":
            f154 = codecs.open(r'phrsalverbs/PUT UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f154))
            return
        
        if theoption1phrasal== "SPEAK UP":
            f156 = codecs.open(r'phrsalverbs/SPEAK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f156))
            return
        
        if theoption1phrasal== "FOLLOW THROUGH1":
            f157 = codecs.open(r'phrsalverbs/FOLLOW THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f157))
            return
        
        if theoption1phrasal== "PUT UP TO":
            f158 = codecs.open(r'phrsalverbs/PUT UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f158))
            return
        
        if theoption1phrasal== "SPEED UP":
            f159 = codecs.open(r'phrsalverbs/SPEED UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f159))
            return
        
        if theoption1phrasal== "FOLLOW UP":
            f160 = codecs.open(r'phrsalverbs/FOLLOW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f160))
            return
        
        if theoption1phrasal== "PUT UP WITH":
            f161 = codecs.open(r'phrsalverbs/PUT UP WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f161))
            return
        
        if theoption1phrasal== "SPEED UP1":
            f162 = codecs.open(r'phrsalverbs/SPEED UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f162))
            return

        if theoption1phrasal== "KEEP BACK":
            f163 = codecs.open(r'phrsalverbs/KEEP BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f163))
            return

        if theoption1phrasal== "FOLLOW UP1":
            f164 = codecs.open(r'phrsalverbs/FOLLOW UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f164))
            return
        
        if theoption1phrasal== "QUARREL OUT":
            f165 = codecs.open(r'phrsalverbs/QUARREL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f165))
            return
        
        if theoption1phrasal== "SPELL OUT":
            f166 = codecs.open(r'phrsalverbs/SPELL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f166))
            return
        
        if theoption1phrasal== "FOOL ABOUT":
            f167 = codecs.open(r'phrsalverbs/FOOL ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f167))
            return
        
        if theoption1phrasal== "QUARREL WITH":
            f168 = codecs.open(r'phrsalverbs/QUARREL WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f168))
            return
        

        if theoption1phrasal== "SPELL OUT1":
            f169 = codecs.open(r'phrsalverbs/SPELL OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f169))
            return

        if theoption1phrasal== "FOOL ABOUT1":
            f170 = codecs.open(r'phrsalverbs/FOOL ABOUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f170))
            return
        
        if theoption1phrasal== "QUEER UP":
            f171 = codecs.open(r'phrsalverbs/QUEER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f171))
            return
        
        if theoption1phrasal== "SPEW OUT":
            f172 = codecs.open(r'phrsalverbs/SPEW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f172))
            return
        
        if theoption1phrasal== "FOOL AROUND":
            f173 = codecs.open(r'phrsalverbs/FOOL AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f173))
            return
        
        if theoption1phrasal== "AUCTION OFF1":
            f174 = codecs.open(r'phrsalverbs/AUCTION OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f174))
            return
        
        if theoption1phrasal== "QUIETEN DOWN":
            f175 = codecs.open(r'phrsalverbs/QUIETEN DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f175))
            return

        if theoption1phrasal== "SPEW UP":
            f176 = codecs.open(r'phrsalverbs/SPEW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f176))
            return
        
        if theoption1phrasal== "FOOL AROUND1":
            f177 = codecs.open(r'phrsalverbs/FOOL AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f177))
            return
        
        if theoption1phrasal== "QUIT ON":
            f178 = codecs.open(r'phrsalverbs/QUIT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f178))
            return

        if theoption1phrasal== "SPICE UP":
            f179 = codecs.open(r'phrsalverbs/SPICE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f179))
            return
        
        if theoption1phrasal== "FOOL WITH":
            f180 = codecs.open(r'phrsalverbs/FOOL WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f180))
            return
        
        if theoption1phrasal== "SPICE UP1":
            f181 = codecs.open(r'phrsalverbs/SPICE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f181))
            return
        
        if theoption1phrasal== "QUIT ON1":
            f182 = codecs.open(r'phrsalverbs/QUIT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f182))
            return
        
        if theoption1phrasal== "FORGE AHEAD":
            f183 = codecs.open(r'phrsalverbs/FORGE AHEAD.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f183))
            return

        if theoption1phrasal== "RACE OFF":
            f184 = codecs.open(r'phrsalverbs/RACE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f184))
            return

        if theoption1phrasal== "BAIL UP":
            f185 = codecs.open(r'phrsalverbs/BAIL UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f185))
            return
        
        if theoption1phrasal== "SPIFF UP":
            f186 = codecs.open(r'phrsalverbs/SPIFF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f186))
            return
        
        if theoption1phrasal== "FORGE AHEAD1":
            f187 = codecs.open(r'phrsalverbs/FORGE AHEAD1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f187))
            return
        
        if theoption1phrasal== "RACK OFF":
            f188 = codecs.open(r'phrsalverbs/RACK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f188))
            return
        
        if theoption1phrasal== "SPILL OUT":
            f189 = codecs.open(r'phrsalverbs/SPILL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f189))
            return
        
        if theoption1phrasal== "FORK OUT":
            f190 = codecs.open(r'phrsalverbs/FORK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f190))
            return
        
        if theoption1phrasal== "RACK OUT":
            f191 = codecs.open(r'phrsalverbs/RACK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f191))
            return
        
        if theoption1phrasal== "SPILL OUT1":
            f192 = codecs.open(r'phrsalverbs/SPILL OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f192))
            return
        
        if theoption1phrasal== "FORK OVER":
            f193 = codecs.open(r'phrsalverbs/FORK OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f193))
            return
        
        if theoption1phrasal== "RACK UP":
            f194 = codecs.open(r'phrsalverbs/RACK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f194))
            return
        
        if theoption1phrasal== "SPILL OUT2":
            f195 = codecs.open(r'phrsalverbs/SPILL OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f195))
            return
        
        if theoption1phrasal== "ALLOW FOR":
            f196 = codecs.open(r'phrsalverbs/ALLOW FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f196))
            return
        
        if theoption1phrasal== "FREAK OUT":
            f197 = codecs.open(r'phrsalverbs/FREAK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f197))
            return
        
        if theoption1phrasal== "RACK UP1":
            f198 = codecs.open(r'phrsalverbs/RACK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f198))
            return
        
        if theoption1phrasal== "SPILL OVER":
            f199 = codecs.open(r'phrsalverbs/SPILL OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f199))
            return
        
        if theoption1phrasal== "FREE UP":
            f200 = codecs.open(r'phrsalverbs/FREE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f200))
            return
        
        if theoption1phrasal== "RAIN DOWN ON":
            f201 = codecs.open(r'phrsalverbs/RAIN DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f201))
            return
        
        if theoption1phrasal== "SPILL OVER":
            f202 = codecs.open(r'phrsalverbs/SPILL OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f202))
            return
        
        if theoption1phrasal== "FREE UP1":
            f203 = codecs.open(r'phrsalverbs/FREE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f203))
            return
        
        if theoption1phrasal== "RAIN OFF":
            f204 = codecs.open(r'phrsalverbs/RAIN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f204))
            return
        
        if theoption1phrasal== "SPIN AROUND":
            f205 = codecs.open(r'phrsalverbs/SPIN AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f205))
            return
        
        if theoption1phrasal== "FREEZE OUT":
            f206 = codecs.open(r'phrsalverbs/FREEZE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f206))
            return

        if theoption1phrasal== "COULD DO WITH":
            f207 = codecs.open(r'phrsalverbs/COULD DO WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f207))
            return
        
        if theoption1phrasal== "RAIN OUT":
            f208 = codecs.open(r'phrsalverbs/RAIN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f208))
            return
        
        if theoption1phrasal== "SPIN OFF":
            f209 = codecs.open(r'phrsalverbs/SPIN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f209))
            return
        
        if theoption1phrasal== "FREEZE OUT1":
            f210 = codecs.open(r'phrsalverbs/FREEZE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f210))
            return
        
        if theoption1phrasal== "SPILL OVER1":
            f211 = codecs.open(r'phrsalverbs/SPILL OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f211))
            return
        
        if theoption1phrasal== "RAKE IN":
            f212 = codecs.open(r'phrsalverbs/RAKE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f212))
            return
        
        if theoption1phrasal== "SPIN OFF1":
            f213 = codecs.open(r'phrsalverbs/SPIN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f213))
            return
        
        if theoption1phrasal== "FREEZE OVER":
            f214 = codecs.open(r'phrsalverbs/FREEZE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f214))
            return
        
        if theoption1phrasal== "RAKE OVER":
            f215 = codecs.open(r'phrsalverbs/RAKE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f215))
            return
        
        if theoption1phrasal== "SPIN OFF2":
            f216 = codecs.open(r'phrsalverbs/SPIN OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f216))
            return
        
        if theoption1phrasal== "FREEZE UP":
            f217 = codecs.open(r'phrsalverbs/FREEZE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f217))
            return
        
        if theoption1phrasal== "RAKE UP":
            f218 = codecs.open(r'phrsalverbs/RAKE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f218))
            return
        
        if theoption1phrasal== "KEEP DOWN":
            f219 = codecs.open(r'phrsalverbs/KEEP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f219))
            return
        
        if theoption1phrasal== "SPIN OUT":
            f220 = codecs.open(r'phrsalverbs/SPIN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f220))
            return
        
        if theoption1phrasal== "FREEZE UP1":
            f221 = codecs.open(r'phrsalverbs/FREEZE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f221))
            return
        
        if theoption1phrasal== "RAKE OFF":
            f222 = codecs.open(r'phrsalverbs/RAKE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f222))
            return
        
        if theoption1phrasal== "SPIN OUT1":
            f223 = codecs.open(r'phrsalverbs/SPIN OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f223))
            return
        
        if theoption1phrasal== "FREEZE UP2":
            f224 = codecs.open(r'phrsalverbs/FREEZE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f224))
            return
        
        if theoption1phrasal== "RAKE IT IN":
            f225 = codecs.open(r'phrsalverbs/RAKE IT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f225))
            return
        
        if theoption1phrasal== "SPIRIT AWAY":
            f226 = codecs.open(r'phrsalverbs/SPIRIT AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f226))
            return

        if theoption1phrasal== "FREEZE UP3":
            f227 = codecs.open(r'phrsalverbs/FREEZE UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f227))
            return
        
        if theoption1phrasal== "RAMBLE ON":
            f228 = codecs.open(r'phrsalverbs/RAMBLE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f228))
            return
        
        if theoption1phrasal== "SPIRIT OFF":
            f229 = codecs.open(r'phrsalverbs/SPIRIT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f229))
            return
        

        if theoption1phrasal== "JAM ON":
            f230 = codecs.open(r'phrsalverbs/JAM ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f230))
            return
        
        if theoption1phrasal== "FREEZE UP3":
            f231 = codecs.open(r'phrsalverbs/FREEZE UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f231))
            return
        
        if theoption1phrasal== "RAMBLE ON":
            f232 = codecs.open(r'phrsalverbs/RAMBLE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f232))
            return
        
        if theoption1phrasal== "SPIRIT OFF":
            f233 = codecs.open(r'phrsalverbs/SPIRIT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f233))
            return
        
        if theoption1phrasal== "SPIT OUT":
            f234 = codecs.open(r'phrsalverbs/SPIT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f234))
            return
        
        if theoption1phrasal== "AMOUNT TO":
            f235 = codecs.open(r'phrsalverbs/AMOUNT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f235))
            return
        
        if theoption1phrasal== "FRESHEN UP":
            f236 = codecs.open(r'phrsalverbs/FRESHEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f236))
            return
        
        if theoption1phrasal== "RAMP UP":
            f237 = codecs.open(r'phrsalverbs/RAMP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f237))
            return
        
        if theoption1phrasal== "SPIT IT OUT":
            f238 = codecs.open(r'phrsalverbs/SPIT IT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f238))
            return
        
        if theoption1phrasal== "FRESHEN UP1":
            f239 = codecs.open(r'phrsalverbs/FRESHEN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f239))
            return
        
        if theoption1phrasal== "RAMP UP1":
            f240 = codecs.open(r'phrsalverbs/RAMP UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f240))
            return
        
        if theoption1phrasal== "FRESHEN UP2":
            f241 = codecs.open(r'phrsalverbs/FRESHEN UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f241))
            return
        
        if theoption1phrasal== "RAP OUT":
            f242 = codecs.open(r'phrsalverbs/RAP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f242))
            return
        
        if theoption1phrasal== "SPLASH DOWN":
            f243 = codecs.open(r'phrsalverbs/SPLASH DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f243))
            return
        
        if theoption1phrasal== "FRIGHTEN AWAY":
            f244 = codecs.open(r'phrsalverbs/FRIGHTEN AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f244))
            return
        
        if theoption1phrasal== "BAIL UP1":
            f245 = codecs.open(r'phrsalverbs/BAIL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f245))
            return
        
        if theoption1phrasal== "RAT ON":
            f246 = codecs.open(r'phrsalverbs/RAT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f246))
            return
        
        if theoption1phrasal== "SPLASH OUT":
            f247 = codecs.open(r'phrsalverbs/SPLASH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f247))
            return
        
        if theoption1phrasal== "FRIGHTEN AWAY1":
            f248 = codecs.open(r'phrsalverbs/FRIGHTEN AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f248))
            return
        
        if theoption1phrasal== "RAT ON1":
            f249 = codecs.open(r'phrsalverbs/RAT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f249))
            return
        
        if theoption1phrasal== "SPLASH OUT ON":
            f250 = codecs.open(r'phrsalverbs/SPLASH OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(f250))
            return









        if theoption1phrasal== "FRIGHTEN OFF":
            g1 = codecs.open(r'phrsalverbs/FRIGHTEN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g1))
            return
        
        if theoption1phrasal== "RAT OUT":
            g2 = codecs.open(r'phrsalverbs/RAT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g2))
            return
        
        if theoption1phrasal== "SPLIT UP":
            g3 = codecs.open(r'phrsalverbs/SPLIT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g3))
            return
        
        if theoption1phrasal== "FRIGHTEN OFF1":
            g4 = codecs.open(r'phrsalverbs/FRIGHTEN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g4))
            return
        
        if theoption1phrasal== "RAT THROUGH":
            g5 = codecs.open(r'phrsalverbs/RAT THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g5))
            return
        
        if theoption1phrasal== "KEEP FROM":
            g6 = codecs.open(r'phrsalverbs/KEEP FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g6))
            return
        
        if theoption1phrasal== "SPLIT UP1":
            g7 = codecs.open(r'phrsalverbs/SPLIT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g7))
            return
        
        if theoption1phrasal== "FRITTER AWAY":
            g8 = codecs.open(r'phrsalverbs/FRITTER AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g8))
            return

        if theoption1phrasal== "RATCHET UP":
            g9 = codecs.open(r'phrsalverbs/RATCHET UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g9))
            return
        
        if theoption1phrasal== "SPOIL FOR":
            g10 = codecs.open(r'phrsalverbs/SPOIL FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g10))
            return
        
        if theoption1phrasal== "FRONT FOR":
            g11 = codecs.open(r'phrsalverbs/FRONT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g11))
            return
        
        if theoption1phrasal== "RATTLE OFF":
            g12 = codecs.open(r'phrsalverbs/RATTLE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g12))
            return

        if theoption1phrasal== "SPONGE DOWN":
            g13 = codecs.open(r'phrsalverbs/SPONGE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g13))
            return

        if theoption1phrasal== "FRONT OFF":
            g14 = codecs.open(r'phrsalverbs/FRONT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g14))
            return
        
        if theoption1phrasal== "REACH OUT":
            g15 = codecs.open(r'phrsalverbs/REACH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g15))
            return
        
        if theoption1phrasal== "SPONGE OFF":
            g16 = codecs.open(r'phrsalverbs/SPONGE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g16))
            return
        
        if theoption1phrasal== "ALLOW OF":
            g17 = codecs.open(r'phrsalverbs/ALLOW OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g17))
            return
        
        if theoption1phrasal== "FRONT ONTO":
            g18 = codecs.open(r'phrsalverbs/FRONT ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g18))
            return
        
        if theoption1phrasal== "REACH OUT1":
            g19 = codecs.open(r'phrsalverbs/REACH OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g19))
            return
        
        if theoption1phrasal== "SPONGE ON":
            g20 = codecs.open(r'phrsalverbs/SPONGE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g20))
            return

        if theoption1phrasal== "FRONT OUT":
            g21 = codecs.open(r'phrsalverbs/FRONT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g21))
            return
        
        if theoption1phrasal== "REACH OUT FOR":
            g22 = codecs.open(r'phrsalverbs/REACH OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g22))
            return
        
        if theoption1phrasal== "SPRING BACK":
            g23 = codecs.open(r'phrsalverbs/SPRING BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g23))
            return

        if theoption1phrasal== "FRONT UP":
            g24 = codecs.open(r'phrsalverbs/FRONT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g24))
            return
        
        if theoption1phrasal== "REACH OUT TO":
            g25 = codecs.open(r'phrsalverbs/REACH OUT TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g25))
            return
        
        if theoption1phrasal== "SPRING FOR":
            g26 = codecs.open(r'phrsalverbs/SPRING FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g26))
            return
        
        if theoption1phrasal== "FRONT UP1":
            g27 = codecs.open(r'phrsalverbs/FRONT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g27))
            return

        if theoption1phrasal== "COUGH UP":
            g28 = codecs.open(r'phrsalverbs/COUGH UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g28))
            return
        
        if theoption1phrasal== "REACH OUT TO1":
            g29 = codecs.open(r'phrsalverbs/REACH OUT TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g29))
            return
        
        if theoption1phrasal== "SPRING FROM":
            g30 = codecs.open(r'phrsalverbs/SPRING FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g30))
            return
        
        if theoption1phrasal== "FROWN ON":
            g31 = codecs.open(r'phrsalverbs/FROWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g31))
            return
        
        if theoption1phrasal== "REACH OUT TO2":
            g32 = codecs.open(r'phrsalverbs/REACH OUT TO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g32))
            return
        
        if theoption1phrasal== "SPRING FROM1":
            g33 = codecs.open(r'phrsalverbs/SPRING FROM1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g33))
            return
        
        if theoption1phrasal== "FUEL UP":
            g34 = codecs.open(r'phrsalverbs/FUEL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g34))
            return
        
        if theoption1phrasal== "READ OFF":
            g35 = codecs.open(r'phrsalverbs/READ OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g35))
            return

        if theoption1phrasal== "SPRING ON":
            g36 = codecs.open(r'phrsalverbs/SPRING ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g36))
            return
        
        if theoption1phrasal== "GAD ABOUT":
            g37 = codecs.open(r'phrsalverbs/GAD ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g37))
            return
        
        if theoption1phrasal== "READ OUT":
            g38 = codecs.open(r'phrsalverbs/READ OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g38))
            return
        
        if theoption1phrasal== "KEEP IN":
            g39 = codecs.open(r'phrsalverbs/KEEP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g39))
            return

        if theoption1phrasal== "SPRING UP":
            g40 = codecs.open(r'phrsalverbs/SPRING UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g40))
            return
        
        if theoption1phrasal== "GAD AROUND":
            g41 = codecs.open(r'phrsalverbs/GAD AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g41))
            return
        
        if theoption1phrasal== "READ UP ON":
            g42 = codecs.open(r'phrsalverbs/READ UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g42))
            return
        
        if theoption1phrasal== "SPUR ON":
            g43 = codecs.open(r'phrsalverbs/SPUR ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g43))
            return
        
        if theoption1phrasal== "GAG FOR":
            g44 = codecs.open(r'phrsalverbs/GAG FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g44))
            return
        
        if theoption1phrasal== "REASON OUT":
            g45 = codecs.open(r'phrsalverbs/REASON OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g45))
            return
        
        if theoption1phrasal== "SQUARE AWAY":
            g46 = codecs.open(r'phrsalverbs/SQUARE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g46))
            return
        
        if theoption1phrasal== "GANG UP":
            g47 = codecs.open(r'phrsalverbs/GANG UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g47))
            return
        
        if theoption1phrasal== "RECKON ON":
            g48 = codecs.open(r'phrsalverbs/RECKON ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g48))
            return
        
        if theoption1phrasal== "SQUARE OFF":
            g49 = codecs.open(r'phrsalverbs/SQUARE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g49))
            return

        if theoption1phrasal== "ARGUE DOWN":
            g50 = codecs.open(r'phrsalverbs/ARGUE DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g50))
            return
        
        if theoption1phrasal== "GANG UP AGAINST":
            g51 = codecs.open(r'phrsalverbs/GANG UP AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g51))
            return
        
        if theoption1phrasal== "REEL IN":
            g52 = codecs.open(r'phrsalverbs/REEL IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g52))
            return
        
        if theoption1phrasal== "SQUARE OFF AGAINST":
            g53 = codecs.open(r'phrsalverbs/SQUARE OFF AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g53))
            return
        
        if theoption1phrasal== "GANG UP ON":
            g54 = codecs.open(r'phrsalverbs/GANG UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g54))
            return
        
        if theoption1phrasal== "REEL IN1":
            g55 = codecs.open(r'phrsalverbs/REEL IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g55))
            return
        
        if theoption1phrasal== "SQUARE UP":
            g56 = codecs.open(r'phrsalverbs/SQUARE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g56))
            return
        
        if theoption1phrasal== "GEAR TO":
            g57 = codecs.open(r'phrsalverbs/GEAR TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g57))
            return
        
        if theoption1phrasal== "REEL OFF":
            g58 = codecs.open(r'phrsalverbs/REEL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g58))
            return
        
        if theoption1phrasal== "SQUARE UP1":
            g59 = codecs.open(r'phrsalverbs/SQUARE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g59))
            return
        
        if theoption1phrasal== "GEAR TOWARDS":
            g60 = codecs.open(r'phrsalverbs/GEAR TOWARDS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g60))
            return
        

        if theoption1phrasal== "BALL UP":
            g61 = codecs.open(r'phrsalverbs/BALL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g61))
            return

        if theoption1phrasal== "REEL OFF1":
            g62 = codecs.open(r'phrsalverbs/REEL OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g62))
            return
        
        if theoption1phrasal== "SQUARE WITH":
            g63 = codecs.open(r'phrsalverbs/SQUARE WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g63))
            return

        if theoption1phrasal== "GEAR UP":
            g64 = codecs.open(r'phrsalverbs/GEAR UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g64))
            return
        
        if theoption1phrasal== "REEL OUT":
            g65 = codecs.open(r'phrsalverbs/REEL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g65))
            return
        
        if theoption1phrasal== "SQUARE WITH1":
            g66 = codecs.open(r'phrsalverbs/SQUARE WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g66))
            return
        
        if theoption1phrasal== "GEE UP":
            g67 = codecs.open(r'phrsalverbs/GEE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g67))
            return
        
        if theoption1phrasal== "REIN IN":
            g68 = codecs.open(r'phrsalverbs/REIN IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g68))
            return
        
        if theoption1phrasal== "SQUARE UP TO":
            g69 = codecs.open(r'phrsalverbs/SQUARE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g69))
            return
        
        if theoption1phrasal== "GEE UP1":
            g70 = codecs.open(r'phrsalverbs/GEE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g70))
            return

        if theoption1phrasal== "SQUEEZE UP":
            g71 = codecs.open(r'phrsalverbs/SQUEEZE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g71))
            return
        
        if theoption1phrasal== "AMP UP":
            g72 = codecs.open(r'phrsalverbs/AMP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g72))
            return
        
        if theoption1phrasal== "STACK UP":
            g73 = codecs.open(r'phrsalverbs/STACK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g73))
            return

        if theoption1phrasal== "GEEK OUT":
            g74 = codecs.open(r'phrsalverbs/GEEK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g74))
            return
        
        if theoption1phrasal== "RENT OUT":
            g75 = codecs.open(r'phrsalverbs/RENT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g75))
            return
        
        if theoption1phrasal== "STACK UP1":
            g76 = codecs.open(r'phrsalverbs/STACK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g76))
            return

        if theoption1phrasal== "GET ABOUT":
            g77 = codecs.open(r'phrsalverbs/GET ABOUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g77))
            return
        
        if theoption1phrasal== "RIDE OFF":
            g78 = codecs.open(r'phrsalverbs/RIDE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g78))
            return
        
        if theoption1phrasal== "STACK UP2":
            g79 = codecs.open(r'phrsalverbs/STACK UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g79))
            return
        
        if theoption1phrasal== "GET ABOUT1":
            g80 = codecs.open(r'phrsalverbs/GET ABOUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g80))
            
            return
        
        if theoption1phrasal== "RIDE ON":
            g81 = codecs.open(r'phrsalverbs/RIDE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g81))
            return
        
        if theoption1phrasal== "STACK UP3":
            g82 = codecs.open(r'phrsalverbs/STACK UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g82))
            return
        
        if theoption1phrasal== "COUGH UP1":
            g83 = codecs.open(r'phrsalverbs/COUGH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g83))
            return
        
        if theoption1phrasal== "GET ABOUT2":
            g84 = codecs.open(r'phrsalverbs/GET ABOUT4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g84))
            return

        if theoption1phrasal== "RIDE OUT":
            g85 = codecs.open(r'phrsalverbs/RIDE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g85))
            return
        
        if theoption1phrasal== "STACK UP4":
            g86 = codecs.open(r'phrsalverbs/STACK UP4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g86))
            return
        
        if theoption1phrasal== "GET ABOUT3":
            g87 = codecs.open(r'phrsalverbs/GET ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g87))
            return
        
        if theoption1phrasal== "RIDE UP":
            g88 = codecs.open(r'phrsalverbs/RIDE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g88))
            return
        
        if theoption1phrasal== "STACK UP AGAINST":
            g89 = codecs.open(r'phrsalverbs/STACK UP AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g89))
            return
        
        if theoption1phrasal== "GET ABOVE":
            g90 = codecs.open(r'phrsalverbs/GET ABOVE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g90))
            return
        
        if theoption1phrasal== "RING BACK":
            g91 = codecs.open(r'phrsalverbs/RING BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g91))
            return
        
        if theoption1phrasal== "STAFF UP":
            g92 = codecs.open(r'phrsalverbs/STAFF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g92))
            return
        
        if theoption1phrasal== "GET ACROSS":
            g93 = codecs.open(r'phrsalverbs/GET ACROSS2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g93))
            return
        
        if theoption1phrasal== "BACK OUT OF":
            g94 = codecs.open(r'phrsalverbs/BACK OUT OF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g94))
            return
        
        if theoption1phrasal== "KEEP IN WITH":
            g95 = codecs.open(r'phrsalverbs/KEEP IN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g95))
            return
        
        if theoption1phrasal== "RING IN":
            g96 = codecs.open(r'phrsalverbs/RING IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g96))
            return
        
        if theoption1phrasal== "STAMP OUT":
            g97 = codecs.open(r'phrsalverbs/STAMP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g97))
            return
        
        if theoption1phrasal== "GET ACROSS1":
            g98 = codecs.open(r'phrsalverbs/GET ACROSS1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g98))
            return
        
        if theoption1phrasal== "RING OFF":
            g99 = codecs.open(r'phrsalverbs/RING OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g99))
            return
        
        if theoption1phrasal== "STAND ABOUT":
            g100 = codecs.open(r'phrsalverbs/STAND ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g100))
            return

        if theoption1phrasal== "GET ACROSS2":
            g101 = codecs.open(r'phrsalverbs/GET ACROSS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g101))
            return

        if theoption1phrasal== "RING OUT":
            g102 = codecs.open(r'phrsalverbs/RING OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g102))
            return

        if theoption1phrasal== "STAND AROUND":
            g103 = codecs.open(r'phrsalverbs/STAND AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g103))
            return

        if theoption1phrasal== "GET ACROSS TO":
            g104 = codecs.open(r'phrsalverbs/GET ACROSS TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g104))
            return

        if theoption1phrasal== "RING ROUND":
            g105 = codecs.open(r'phrsalverbs/RING ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g105))
            return

        if theoption1phrasal== "ANSWER BACK":
            g106 = codecs.open(r'phrsalverbs/ANSWER BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g106))
            return

        if theoption1phrasal== "STAND ASIDE":
            g107 = codecs.open(r'phrsalverbs/STAND ASIDE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g107))
            return

        if theoption1phrasal== "GET AFTER":
            g108 = codecs.open(r'phrsalverbs/GET AFTER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g108))
            return

        if theoption1phrasal== "RING UP":
            g109 = codecs.open(r'phrsalverbs/RING UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g109))
            return

        if theoption1phrasal== "STAND BACK":
            g110 = codecs.open(r'phrsalverbs/STAND BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g110))
            return

        if theoption1phrasal== "GET AFTER1":
            g111 = codecs.open(r'phrsalverbs/GET AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g111))
            return
        
        if theoption1phrasal== "RING UP1":
            g112 = codecs.open(r'phrsalverbs/RING UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g112))
            return

        if theoption1phrasal== "STAND BACK1":
            g113 = codecs.open(r'phrsalverbs/STAND BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g113))
            return
        
        if theoption1phrasal== "GET AHEAD":
            g114 = codecs.open(r'phrsalverbs/GET AHEAD.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g114))
            return

        if theoption1phrasal== "RING UP2":
            g115 = codecs.open(r'phrsalverbs/RING UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g115))
            return
        
        if theoption1phrasal== "STAND BY":
            g116 = codecs.open(r'phrsalverbs/STAND BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g116))
            return
        
        if theoption1phrasal== "BALL UP1":
            g117 = codecs.open(r'phrsalverbs/BALL UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g117))
            return

        if theoption1phrasal== "GET AHEAD OF":
            g118 = codecs.open(r'phrsalverbs/GET AHEAD OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g118))
            return

        if theoption1phrasal== "RING WITH":
            g119 = codecs.open(r'phrsalverbs/RING WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g119))
            return
        
        if theoption1phrasal== "STAND BY1":
            g120 = codecs.open(r'phrsalverbs/STAND BY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g120))
            return
        
        if theoption1phrasal== "GET ALONG":
            g121 = codecs.open(r'phrsalverbs/GET ALONG2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g121))
            return
        
        if theoption1phrasal== "STAND DOWN":
            g122 = codecs.open(r'phrsalverbs/STAND DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g122))
            return

        if theoption1phrasal== "STAND DOWN1":
            g123 = codecs.open(r'phrsalverbs/STAND DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g123))
            return

        if theoption1phrasal== "GET ALONG1":
            g124 = codecs.open(r'phrsalverbs/GET ALONG1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g124))
            return
        
        if theoption1phrasal== "STAND FOR":
            g125 = codecs.open(r'phrsalverbs/STAND FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g125))
            return
        
        if theoption1phrasal== "TOUCH UPON":
            g126 = codecs.open(r'phrsalverbs/TOUCH UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g126))
            return
        
        if theoption1phrasal== "GET ALONG2":
            g127 = codecs.open(r'phrsalverbs/GET ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g127))
            return
        
        if theoption1phrasal== "ANGLE FOR":
            g128 = codecs.open(r'phrsalverbs/ANGLE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g128))
            return
        
        if theoption1phrasal== "STAND FOR1":
            g129 = codecs.open(r'phrsalverbs/STAND FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g129))
            return
        
        if theoption1phrasal== "TOUCH UP":
            g130 = codecs.open(r'phrsalverbs/TOUCH UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g130))
            return
        

        if theoption1phrasal== "GET ALONG IN":
            g131 = codecs.open(r'phrsalverbs/GET ALONG IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g131))
            return
        
        if theoption1phrasal== "STAND FOR2":
            g132 = codecs.open(r'phrsalverbs/STAND IN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g132))
            return
        
        if theoption1phrasal== "TOUCH UP1":
            g133 = codecs.open(r'phrsalverbs/TOUCH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g133))
            return
        
        if theoption1phrasal== "GET ALONG WITH":
            g134 = codecs.open(r'phrsalverbs/GET ALONG WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g134))
            return
        
        if theoption1phrasal== "STAND OFF":
            g135 = codecs.open(r'phrsalverbs/STAND OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g135))
            return
        
        if theoption1phrasal== "TOUCH ON":
            g136 = codecs.open(r'phrsalverbs/TOUCH ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g136))
            return

        if theoption1phrasal== "GET ALONG WITH1":
            g137 = codecs.open(r'phrsalverbs/GET ALONG WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g137))
            return
        
        if theoption1phrasal== "STAND OFF1":
            g138 = codecs.open(r'phrsalverbs/STAND OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g138))
            return
        
        if theoption1phrasal== "COST UP":
            g139 = codecs.open(r'phrsalverbs/COST UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g139))
            return
        
        if theoption1phrasal== "TOUCH OFF":
            g140 = codecs.open(r'phrsalverbs/TOUCH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g140))
            return
        
        if theoption1phrasal== "GET AROUND":
            g141 = codecs.open(r'phrsalverbs/GET AROUND5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g141))
            return
        
        if theoption1phrasal== "STAND OFF2":
            g142 = codecs.open(r'phrsalverbs/STAND OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g142))
            return
        
        if theoption1phrasal== "TOSS UP":
            g143 = codecs.open(r'phrsalverbs/TOSS UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g143))
            return
        
        if theoption1phrasal== "GET AROUND1":
            g144 = codecs.open(r'phrsalverbs/GET AROUND4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g144))
            return
        
        if theoption1phrasal== "STAND OUT":
            g145 = codecs.open(r'phrsalverbs/STAND OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g145))
            return

        if theoption1phrasal== "TOUCH FOR":
            g146 = codecs.open(r'phrsalverbs/TOUCH FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g146))
            return
        
        if theoption1phrasal== "GET AROUND2":
            g147 = codecs.open(r'phrsalverbs/GET AROUND3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g147))
            return
        
        if theoption1phrasal== "STAND UP":
            g148 = codecs.open(r'phrsalverbs/STAND UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g148))
            return
        
        if theoption1phrasal== "TOUCH DOWN":
            g149 = codecs.open(r'phrsalverbs/TOUCH DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g149))
            return

        if theoption1phrasal== "KEEP OFF":
            g150 = codecs.open(r'phrsalverbs/KEEP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g150))
            return
        
        if theoption1phrasal== "GET AROUND3":
            g151 = codecs.open(r'phrsalverbs/GET AROUND2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g151))
            return
        
        if theoption1phrasal== "STAND UP1":
            g152 = codecs.open(r'phrsalverbs/STAND UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g152))
            return

        if theoption1phrasal== "TOTAL UP":
            g153 = codecs.open(r'phrsalverbs/TOTAL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g153))
            return

        if theoption1phrasal== "GET AROUND4":
            g154 = codecs.open(r'phrsalverbs/GET AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g154))
            return
        
        if theoption1phrasal== "STAND UP FOR":
            g155 = codecs.open(r'phrsalverbs/STAND UP FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g155))
            return
        
        if theoption1phrasal== "TOSS BACK":
            g156 = codecs.open(r'phrsalverbs/TOSS BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g156))
            return
        
        if theoption1phrasal== "GET AROUND5":
            g157 = codecs.open(r'phrsalverbs/GET AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g157))
            return

        if theoption1phrasal== "STAND UP TO":
            g158 = codecs.open(r'phrsalverbs/STAND UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g158))
            return
        
        if theoption1phrasal== "TOSS DOWN":
            g159 = codecs.open(r'phrsalverbs/TOSS DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g159))
            return
        
        if theoption1phrasal== "GET AROUND TO":
            g160 = codecs.open(r'phrsalverbs/GET AROUND TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g160))
            return
        
        if theoption1phrasal== "ACT ON":
            g161 = codecs.open(r'phrsalverbs/ACT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g161))
            return
        
        if theoption1phrasal== "STAND UP TO1":
            g162 = codecs.open(r'phrsalverbs/STAND UP TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g162))
            return
        
        if theoption1phrasal== "TOSS FOR":
            g163 = codecs.open(r'phrsalverbs/TOSS FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g163))
            return
        
        if theoption1phrasal== "GET AT":
            g164 = codecs.open(r'phrsalverbs/GET AT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g164))
            return
        
        if theoption1phrasal== "STARE DOWN":
            g165 = codecs.open(r'phrsalverbs/STARE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g165))
            return
        
        if theoption1phrasal== "TOSS OFF":
            g166 = codecs.open(r'phrsalverbs/TOSS OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g166))
            return
        
        if theoption1phrasal== "GET AT1":
            g167 = codecs.open(r'phrsalverbs/GET AT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g167))
            return
        
        if theoption1phrasal== "START OFF":
            g168 = codecs.open(r'phrsalverbs/START OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g168))
            return
        
        if theoption1phrasal== "TORQUE UP":
            g169 = codecs.open(r'phrsalverbs/TORQUE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g169))
            return
        
        if theoption1phrasal== "GET AT2":
            g170 = codecs.open(r'phrsalverbs/GET AT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g170))
            return
        
        if theoption1phrasal== "START OFF1":
            g171 = codecs.open(r'phrsalverbs/START OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g171))
            return

        if theoption1phrasal== "BALLS UP":
            g172 = codecs.open(r'phrsalverbs/BALLS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g172))
            return
        
        if theoption1phrasal== "TOSS ABOUT":
            g173 = codecs.open(r'phrsalverbs/TOSS ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g173))
            return
        
        if theoption1phrasal== "GET AT3":
            g174 = codecs.open(r'phrsalverbs/GET AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g174))
            return
        
        if theoption1phrasal== "START OFF2":
            g175 = codecs.open(r'phrsalverbs/START OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g175))
            return
        
        if theoption1phrasal== "TOSS AROUND":
            g176 = codecs.open(r'phrsalverbs/TOSS AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g176))
            return
        
        if theoption1phrasal== "GET AWAY":
            g177 = codecs.open(r'phrsalverbs/GET AWAY2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g177))
            return
        
        if theoption1phrasal== "START OFF3":
            g178 = codecs.open(r'phrsalverbs/START OFF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g178))
            return
        
        if theoption1phrasal== "TOSS ASIDE":
            g179 = codecs.open(r'phrsalverbs/TOSS ASIDE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g179))
            return
        
        if theoption1phrasal== "GET AWAY1":
            g180 = codecs.open(r'phrsalverbs/GET AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g180))
            return
        
        if theoption1phrasal== "START OFF ON":
            g181 = codecs.open(r'phrsalverbs/START OFF ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g181))
            return
        
        if theoption1phrasal== "TOP OFF":
            g182 = codecs.open(r'phrsalverbs/TOP OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g182))
            return
        
        if theoption1phrasal== "KEEP OFF1":
            g183 = codecs.open(r'phrsalverbs/KEEP OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g183))
            return
        
        if theoption1phrasal== "GET AWAY2":
            g184 = codecs.open(r'phrsalverbs/GET AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g184))
            return
        
        if theoption1phrasal== "START ON":
            g185 = codecs.open(r'phrsalverbs/START ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g185))
            return
        
        if theoption1phrasal== "TOP OFF1":
            g186 = codecs.open(r'phrsalverbs/TOP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g186))
            return

        if theoption1phrasal== "GET AWAY FROM":
            g187 = codecs.open(r'phrsalverbs/GET AWAY FROM1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g187))
            return
        
        if theoption1phrasal== "START ON1":
            g188 = codecs.open(r'phrsalverbs/START ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g188))
            return
        
        if theoption1phrasal== "TOP OUT":
            g189 = codecs.open(r'phrsalverbs/TOP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g189))
            return
        
        if theoption1phrasal== "GET AWAY FROM1":
            g190 = codecs.open(r'phrsalverbs/GET AWAY FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g190))
            return
        
        if theoption1phrasal== "START ON AT":
            g191 = codecs.open(r'phrsalverbs/START ON AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g191))
            return
        
        if theoption1phrasal== "TOP UP":
            g192 = codecs.open(r'phrsalverbs/TOP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g192))
            return
        
        if theoption1phrasal== "GET AWAY WITH":
            g193 = codecs.open(r'phrsalverbs/GET AWAY WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g193))
            return
        
        if theoption1phrasal== "ANSWER FOR":
            g194 = codecs.open(r'phrsalverbs/ANSWER FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g194))
            return
        
        if theoption1phrasal== "START OUT":
            g195 = codecs.open(r'phrsalverbs/START OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g195))
            return
        
        if theoption1phrasal== "TONE UP":
            g196 = codecs.open(r'phrsalverbs/TONE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g196))
            return
        
        if theoption1phrasal== "GET AWAY WITH1":
            g197 = codecs.open(r'phrsalverbs/GET AWAY WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g197))
            return
        
        if theoption1phrasal== "START OUT AS":
            g198 = codecs.open(r'phrsalverbs/START OUT AS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g198))
            return
        
        if theoption1phrasal== "TOOL UP":
            g199 = codecs.open(r'phrsalverbs/TOOL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g199))
            return
        
        if theoption1phrasal== "GET AWAY!":
            g200 = codecs.open(r'phrsalverbs/GET AWAY!.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g200))
            return
        
        if theoption1phrasal== "START OUT TO":
            g201 = codecs.open(r'phrsalverbs/START OUT TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g201))
            return
        
        if theoption1phrasal== "TOOL UP1":
            g202 = codecs.open(r'phrsalverbs/TOOL UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g202))
            return
        
        if theoption1phrasal== "GET BACK":
            g203 = codecs.open(r'phrsalverbs/GET BACK4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g203))
            return
        
        if theoption1phrasal== "START OVER":
            g204 = codecs.open(r'phrsalverbs/START OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g204))
            return
        
        if theoption1phrasal== "ADD ON":
            g205 = codecs.open(r'phrsalverbs/ADD ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g205))
            return
        
        if theoption1phrasal== "KEEP ON":
            g206 = codecs.open(r'phrsalverbs/KEEP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g206))
            return
        
        if theoption1phrasal== "TOOTLE OFF":
            g207 = codecs.open(r'phrsalverbs/TOOTLE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g207))
            return
        
        if theoption1phrasal== "GET BACK1":
            g209 = codecs.open(r'phrsalverbs/GET BACK3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g209))
            return
        
        if theoption1phrasal== "START UP":
            g210 = codecs.open(r'phrsalverbs/START UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g210))
            return
        
        if theoption1phrasal== "TIRE OUT":
            g211 = codecs.open(r'phrsalverbs/TIRE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g211))
            return
        
        if theoption1phrasal== "GET BACK2":
            g212 = codecs.open(r'phrsalverbs/GET BACK2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g212))
            return
        
        if theoption1phrasal== "START UP1":
            g213 = codecs.open(r'phrsalverbs/START UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g213))
            return
        
        if theoption1phrasal== "TODDLE OFF":
            g214 = codecs.open(r'phrsalverbs/TODDLE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g214))
            return
        
        if theoption1phrasal== "GET BACK3":
            g215 = codecs.open(r'phrsalverbs/GET BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g215))
            return
        
        if theoption1phrasal== "START UP2":
            g216 = codecs.open(r'phrsalverbs/START UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g216))
            return
        
        if theoption1phrasal== "TONE DOWN":
            g217 = codecs.open(r'phrsalverbs/TONE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g217))
            return
        
        if theoption1phrasal== "BANG ABOUT":
            g218 = codecs.open(r'phrsalverbs/BANG ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g218))
            return
        
        if theoption1phrasal== "GET BACK AT":
            g219 = codecs.open(r'phrsalverbs/GET BACK AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g219))
            return
        
        if theoption1phrasal== "START UP3":
            g220 = codecs.open(r'phrsalverbs/START UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g220))
            return
        
        if theoption1phrasal== "TONE IN WITH":
            g221 = codecs.open(r'phrsalverbs/TONE IN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g221))
            return
        
        if theoption1phrasal== "GET BACK INTO":
            g222 = codecs.open(r'phrsalverbs/GET BACK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g222))
            return
        
        if theoption1phrasal== "START UP4":
            g223 = codecs.open(r'phrsalverbs/START UP4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g223))
            return
        
        if theoption1phrasal== "TIME OUT":
            g224 = codecs.open(r'phrsalverbs/TIME OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g224))
            return
        
        if theoption1phrasal== "GET BACK INTO1":
            g225 = codecs.open(r'phrsalverbs/GET BACK INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g225))
            return
        
        if theoption1phrasal== "STAVE IN":
            g226 = codecs.open(r'phrsalverbs/STAVE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g226))
            return
        
        if theoption1phrasal== "TIP OFF":
            g227 = codecs.open(r'phrsalverbs/TIP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g227))
            return

        if theoption1phrasal== "GET BACK TO":
            g228 = codecs.open(r'phrsalverbs/GET BACK TO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g228))
            return
        
        if theoption1phrasal== "ACT ON1":
            g229 = codecs.open(r'phrsalverbs/ACT ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g229))
            return
        
        if theoption1phrasal== "STAVE OFF":
            g230 = codecs.open(r'phrsalverbs/STAVE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g230))
            return
        
        if theoption1phrasal== "TIP OVER":
            g231 = codecs.open(r'phrsalverbs/TIP OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g231))
            return
        
        if theoption1phrasal== "GET BACK TO1":
            g232 = codecs.open(r'phrsalverbs/GET BACK TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g232))
            return
        
        if theoption1phrasal== "STAY AWAY":
            g233 = codecs.open(r'phrsalverbs/STAY AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g233))
            return
        
        if theoption1phrasal== "TIRE OF":
            g234 = codecs.open(r'phrsalverbs/TIRE OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g234))
            return
        
        if theoption1phrasal== "GET BACK TO2":
            g235 = codecs.open(r'phrsalverbs/GET BACK TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g235))
            return
        
        if theoption1phrasal== "STAY AWAY FROM":
            g236 = codecs.open(r'phrsalverbs/STAY AWAY FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g236))
            return
        
        if theoption1phrasal== "TIE UP":
            g237 = codecs.open(r'phrsalverbs/TIE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g237))
            return
        
        if theoption1phrasal== "GET BACK TOGETHER":
            g238 = codecs.open(r'phrsalverbs/GET BACK TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g238))
            return
        
        if theoption1phrasal== "STAY IN":
            g239 = codecs.open(r'phrsalverbs/STAY IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g239))
            return
        
        if theoption1phrasal== "COME UPON":
            g240 = codecs.open(r'phrsalverbs/COME UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g240))
            return
        
        if theoption1phrasal== "TIE UP1":
            g241 = codecs.open(r'phrsalverbs/TIE UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g241))
            return
        
        if theoption1phrasal== "GET BEHIND":
            g242 = codecs.open(r'phrsalverbs/GET BEHIND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g242))
            return
        
        if theoption1phrasal== "STAY ON":
            g243 = codecs.open(r'phrsalverbs/STAY ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g243))
            return
        
        if theoption1phrasal== "TIGHTEN UP":
            g244 = codecs.open(r'phrsalverbs/TIGHTEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g244))
            return
        
        if theoption1phrasal== "GET BEHIND WITH":
            g245 = codecs.open(r'phrsalverbs/GET BEHIND WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g245))
            return
        
        if theoption1phrasal== "STAY OUT":
            g246 = codecs.open(r'phrsalverbs/STAY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g246))
            return
        
        if theoption1phrasal== "TIME OUT1":
            g247 = codecs.open(r'phrsalverbs/TIME OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g247))
            return
        
        if theoption1phrasal== "GET BY":
            g248 = codecs.open(r'phrsalverbs/GET BY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g248))
            return
        
        if theoption1phrasal== "STAY OVER":
            g249 = codecs.open(r'phrsalverbs/STAY OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g249))
            return
        
        if theoption1phrasal== "TIE IN":
            g250 = codecs.open(r'phrsalverbs/TIE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(g250))
            return
        
        if theoption1phrasal== "KEEP OUT":
            h1 = codecs.open(r'phrsalverbs/KEEP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h1))
            return
        
        if theoption1phrasal== "GET BY1":
            h2 = codecs.open(r'phrsalverbs/GET BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h2))
            return
        
        if theoption1phrasal== "STAY UP":
            h3 = codecs.open(r'phrsalverbs/STAY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h3))
            return
        
        if theoption1phrasal== "TIE IN WITH":
            h4 = codecs.open(r'phrsalverbs/TIE IN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h4))
            return
        
        if theoption1phrasal== "GET BY ON":
            h5 = codecs.open(r'phrsalverbs/GET BY ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h5))
            return
        
        if theoption1phrasal== "STEAL AWAY":
            h6 = codecs.open(r'phrsalverbs/STEAL AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h6))
            return
        
        if theoption1phrasal== "TIE UP2":
            h7 = codecs.open(r'phrsalverbs/TIE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h7))
            return
        
        if theoption1phrasal== "GET DOWN":
            h8 = codecs.open(r'phrsalverbs/GET DOWN6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h8))
            return
        
        if theoption1phrasal== "ACHE FOR":
            h9 = codecs.open(r'phrsalverbs/ACHE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h9))
            return
        
        if theoption1phrasal== "STEAL OVER":
            h10 = codecs.open(r'phrsalverbs/STEAL OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h10))
            return
        
        if theoption1phrasal== "STEAL OUT":
            h11 = codecs.open(r'phrsalverbs/STEAL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h11))
            return
        
        if theoption1phrasal== "TIE UP3":
            h12 = codecs.open(r'phrsalverbs/TIE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h12))
            return
        
        if theoption1phrasal== "GET BY WITH":
            h13 = codecs.open(r'phrsalverbs/GET BY WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h13))
            return

        if theoption1phrasal== "TIE DOWN":
            h14 = codecs.open(r'phrsalverbs/TIE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h14))
            return
        
        if theoption1phrasal== "GET DOWN1":
            h15 = codecs.open(r'phrsalverbs/GET DOWN5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h15))
            return
        
        if theoption1phrasal== "STEAL UP":
            h16 = codecs.open(r'phrsalverbs/STEAL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h16))
            return
        
        if theoption1phrasal== "TIE DOWN1":
            h17 = codecs.open(r'phrsalverbs/TIE DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h17))
            return
        
        if theoption1phrasal== "GET DOWN2":
            h18 = codecs.open(r'phrsalverbs/GET DOWN4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h18))
            return
        
        if theoption1phrasal== "STEAL UP ON":
            h19 = codecs.open(r'phrsalverbs/STEAL UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h19))
            return
        
        if theoption1phrasal== "TIE DOWN2":
            h20 = codecs.open(r'phrsalverbs/TIE DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h20))
            return
        
        if theoption1phrasal== "GET DOWN3":
            h21 = codecs.open(r'phrsalverbs/GET DOWN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h21))
            return
        
        if theoption1phrasal== "STEER CLEAR OF":
            h22 = codecs.open(r'phrsalverbs/STEER CLEAR OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h22))
            return
        
        if theoption1phrasal== "KEEP TO":
            h23 = codecs.open(r'phrsalverbs/KEEP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h23))
            return
        
        if theoption1phrasal== "TIE IN1":
            h24 = codecs.open(r'phrsalverbs/TIE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h24))
            return
        
        if theoption1phrasal== "GET DOWN4":
            h25 = codecs.open(r'phrsalverbs/GET DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h25))
            return
        
        if theoption1phrasal== "STEM FROM":
            h26 = codecs.open(r'phrsalverbs/STEM FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h26))
            return
        
        if theoption1phrasal== "TICKLE UP":
            h27 = codecs.open(r'phrsalverbs/TICKLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h27))
            return

        if theoption1phrasal== "GET DOWN5":
            h28 = codecs.open(r'phrsalverbs/GET DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h28))
            return
        
        if theoption1phrasal== "STEP ASIDE":
            h29 = codecs.open(r'phrsalverbs/STEP ASIDE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h29))
            return
        
        if theoption1phrasal== "TIDE OVER":
            h30 = codecs.open(r'phrsalverbs/TIDE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h30))
            return
        
        if theoption1phrasal== "GET DOWN6":
            h31 = codecs.open(r'phrsalverbs/GET DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h31))
            return
        
        if theoption1phrasal== "STEP BACK":
            h32 = codecs.open(r'phrsalverbs/STEP BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h32))
            return
        
        if theoption1phrasal== "TIDY UP":
            h33 = codecs.open(r'phrsalverbs/TIDY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h33))
            return

        if theoption1phrasal== "BANG AROUND":
            h34 = codecs.open(r'phrsalverbs/BANG AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h34))
            return
        
        if theoption1phrasal== "GET DOWN ON":
            h35 = codecs.open(r'phrsalverbs/GET DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h35))
            return
        
        if theoption1phrasal== "STEP DOWN":
            h36 = codecs.open(r'phrsalverbs/STEP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h36))
            return
        
        if theoption1phrasal== "TIE BACK":
            h37 = codecs.open(r'phrsalverbs/TIE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h37))
            return
        
        if theoption1phrasal== "GET DOWN TO":
            h38 = codecs.open(r'phrsalverbs/GET DOWN TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h38))
            return
        
        if theoption1phrasal== "STEP DOWN1":
            h39 = codecs.open(r'phrsalverbs/STEP DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h39))
            return
        
        if theoption1phrasal== "TICK OFF":
            h40 = codecs.open(r'phrsalverbs/TICK OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h40))
            return
        
        if theoption1phrasal== "GET DOWN TO1":
            h41 = codecs.open(r'phrsalverbs/GET DOWN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h41))
            return
        
        if theoption1phrasal== "STEP FORWARD":
            h42 = codecs.open(r'phrsalverbs/STEP FORWARD.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h42))
            return
        
        if theoption1phrasal== "TICK OFF1":
            h43 = codecs.open(r'phrsalverbs/TICK OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h43))
            return

        if theoption1phrasal== "GET IN":
            h44 = codecs.open(r'phrsalverbs/GET IN12.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h44))
            return
        
        if theoption1phrasal== "ACCOUNT FOR":
            h45 = codecs.open(r'phrsalverbs/ACCOUNT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h45))
            return
        
        if theoption1phrasal== "STEP IN":
            h46 = codecs.open(r'phrsalverbs/STEP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h46))
            return
        
        if theoption1phrasal== "TICK OVER":
            h47 = codecs.open(r'phrsalverbs/TICK OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h47))
            return
        
        if theoption1phrasal== "GET IN1":
            h48 = codecs.open(r'phrsalverbs/GET IN11.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h48))
            return
        
        if theoption1phrasal== "STEP ON IT":
            h49 = codecs.open(r'phrsalverbs/STEP ON IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h49))
            return
        
        if theoption1phrasal== "TICK OVER1":
            h50 = codecs.open(r'phrsalverbs/TICK OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h50))
            return
        
        if theoption1phrasal== "GET IN2":
            h51 = codecs.open(r'phrsalverbs/GET IN10.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h51))
            return
        
        if theoption1phrasal== "STEP OUT":
            h52 = codecs.open(r'phrsalverbs/STEP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h52))
            return
        
        if theoption1phrasal== "TICK ALONG":
            h53 = codecs.open(r'phrsalverbs/TICK ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h53))
            return
        
        if theoption1phrasal== "GET IN3":
            h54 = codecs.open(r'phrsalverbs/GET IN9.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h54))
            return
        
        if theoption1phrasal== "STEP TO":
            h55 = codecs.open(r'phrsalverbs/STEP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h55))
            return
        
        if theoption1phrasal== "KEEP UP":
            h56 = codecs.open(r'phrsalverbs/KEEP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h56))
            return
        
        if theoption1phrasal== "TICK AWAY":
            h57 = codecs.open(r'phrsalverbs/TICK AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h57))
            return
        
        if theoption1phrasal== "GET IN4":
            h58 = codecs.open(r'phrsalverbs/GET IN8.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h58))
            return
        
        if theoption1phrasal== "STEP TO1":
            h59 = codecs.open(r'phrsalverbs/STEP TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h59))
            return
        
        if theoption1phrasal== "TICK BY":
            h60 = codecs.open(r'phrsalverbs/TICK BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h60))
            return
        
        if theoption1phrasal== "GET IN5":
            h61 = codecs.open(r'phrsalverbs/GET IN7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h61))
            return
        

        if theoption1phrasal== "STEP UP":
            h62 = codecs.open(r'phrsalverbs/STE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h62))
            return
        
        if theoption1phrasal== "TICK OFF2":
            h63 = codecs.open(r'phrsalverbs/TICK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h63))
            return

        if theoption1phrasal== "GET IN6":
            h64 = codecs.open(r'phrsalverbs/GET IN6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h64))
            return
        
        if theoption1phrasal== "STICK AROUND":
            h65 = codecs.open(r'phrsalverbs/STICK AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h65))
            return
        
        if theoption1phrasal== "THROW UP":
            h66 = codecs.open(r'phrsalverbs/THROW UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h66))
            return
        
        if theoption1phrasal== "JAW AWAY":
            h67 = codecs.open(r'phrsalverbs/JAW AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h67))
            return
        
        if theoption1phrasal== "BANG ON":
            h68 = codecs.open(r'phrsalverbs/BANG ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h68))
            return
        
        if theoption1phrasal== "GET IN7":
            h69 = codecs.open(r'phrsalverbs/GET IN5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h69))
            return
        
        if theoption1phrasal== "STICK AT":
            h70 = codecs.open(r'phrsalverbs/STICK AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h70))
            return

        if theoption1phrasal== "STICK AT1":
            h71 = codecs.open(r'phrsalverbs/STICK AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h71))
            return

        if theoption1phrasal== "THROW YOURSELF AT":
            h72 = codecs.open(r'phrsalverbs/THROW YOURSELF AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h72))
            return

        if theoption1phrasal== "GET IN8":
            h73 = codecs.open(r'phrsalverbs/GET IN4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h73))
            return
        
        if theoption1phrasal== "STICK BY":
            h74 = codecs.open(r'phrsalverbs/STICK BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h74))
            return
        
        if theoption1phrasal== "THROW YOURSELF INTO":
            h75 = codecs.open(r'phrsalverbs/THROW YOURSELF INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h75))
            return
        
        if theoption1phrasal== "GET IN9":
            h76 = codecs.open(r'phrsalverbs/GET IN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h76))
            return
        
        if theoption1phrasal== "STICK BY1":
            h77 = codecs.open(r'phrsalverbs/STICK BY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h77))
            return
        
        if theoption1phrasal== "GET IN10":
            h78 = codecs.open(r'phrsalverbs/GET IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h78))
            return

        if theoption1phrasal== "ABIDE BY":
            h79 = codecs.open(r'phrsalverbs/ABIDE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h79))
            return
        
        if theoption1phrasal== "STICK DOWN":
            h80 = codecs.open(r'phrsalverbs/STICK DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h80))
            return

        if theoption1phrasal== "THROW TOGETHER":
            h81 = codecs.open(r'phrsalverbs/THROW TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h81))
            return
        
        if theoption1phrasal== "GET IN11":
            h82 = codecs.open(r'phrsalverbs/GET IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h82))
            return
        
        if theoption1phrasal== "STICK IT TO":
            h83 = codecs.open(r'phrsalverbs/STICK IT TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h83))
            return
        
        if theoption1phrasal== "THROW UP1":
            h84 = codecs.open(r'phrsalverbs/THROW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h84))
            return
        
        if theoption1phrasal== "GET IN12":
            h85 = codecs.open(r'phrsalverbs/GET IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h85))
            return
        
        if theoption1phrasal== "THROW UP2":
            h86 = codecs.open(r'phrsalverbs/THROW UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h86))
            return
        
        if theoption1phrasal== "GET IN ON":
            h87 = codecs.open(r'phrsalverbs/GET IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h87))
            return
        
        if theoption1phrasal== "STICK OUT":
            h88 = codecs.open(r'phrsalverbs/STICK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h88))
            return
        
        if theoption1phrasal== "LATCH ON TO":
            h89 = codecs.open(r'phrsalverbs/LATCH ON TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h89))
            return
        
        if theoption1phrasal== "THROW UP3":
            h90 = codecs.open(r'phrsalverbs/THROW UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h90))
            return
        
        if theoption1phrasal== "STICK IT TO1":
            h91= codecs.open(r'phrsalverbs/STICK IT TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h91))
            return
        
        if theoption1phrasal== "GET IN WITH":
            h92= codecs.open(r'phrsalverbs/GET IN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h92))
            return
        
        if theoption1phrasal== "STICK OUT1":
            h93= codecs.open(r'phrsalverbs/STICK OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h93))
            return
        
        if theoption1phrasal== "THROW OUT":
            h94= codecs.open(r'phrsalverbs/THROW OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h94))
            return
        
        if theoption1phrasal== "GET INTO":
            h95= codecs.open(r'phrsalverbs/GET INTO6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h95))
            return
        
        if theoption1phrasal== "STICK OUT2":
            h96= codecs.open(r'phrsalverbs/STICK OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h96))
            return
        
        if theoption1phrasal== "THROW OUT1":
            h97= codecs.open(r'phrsalverbs/THROW OUT4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h97))
            return
        
        if theoption1phrasal== "GET INTO1":
            h98= codecs.open(r'phrsalverbs/GET INTO5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h98))
            return

        if theoption1phrasal== "STICK OUT FOR":
            h99= codecs.open(r'phrsalverbs/STICK OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h99))
            return
        
        if theoption1phrasal== "THROW OVER":
            h100= codecs.open(r'phrsalverbs/THROW OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h100))
            return

        if theoption1phrasal== "LATCH ONTO":
            h101= codecs.open(r'phrsalverbs/LATCH ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h101))
            return
        
        if theoption1phrasal== "GET INTO2":
            h102= codecs.open(r'phrsalverbs/GET INTO4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h102))
            return
        
        if theoption1phrasal== "STICK TO":
            h103= codecs.open(r'phrsalverbs/STICK TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h103))
            return
        
        if theoption1phrasal== "THROW OVER1":
            h104= codecs.open(r'phrsalverbs/THROW OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h104))
            return
        
        if theoption1phrasal== "GET INTO3":
            h105= codecs.open(r'phrsalverbs/GET INTO3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h105))
            return
        
        if theoption1phrasal== "STICK TOGETHER":
            h106= codecs.open(r'phrsalverbs/STICK TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h106))
            return
        
        if theoption1phrasal== "THROW ON":
            h107= codecs.open(r'phrsalverbs/THROW ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h107))
            return
        
        if theoption1phrasal== "GET INTO4":
            h108= codecs.open(r'phrsalverbs/GET INTO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h108))
            return
        
        if theoption1phrasal== "STICK UP":
            h109= codecs.open(r'phrsalverbs/STICK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h109))
            return

        if theoption1phrasal== "THROW OUT2":
            h110= codecs.open(r'phrsalverbs/THROW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h110))
            return
        
        if theoption1phrasal== "GET INTO5":
            h111= codecs.open(r'phrsalverbs/GET INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h111))
            return
        
        if theoption1phrasal== "BEAR DOWN ON":
            h112= codecs.open(r'phrsalverbs/BEAR DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h112))
            return
        
        if theoption1phrasal== "STICK UP1":
            h113= codecs.open(r'phrsalverbs/STICK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h113))
            return
        
        if theoption1phrasal== "THROW OUT3":
            h114= codecs.open(r'phrsalverbs/THROW OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h114))
            return
        
        if theoption1phrasal== "GET INTO6":
            h115= codecs.open(r'phrsalverbs/GET INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h115))
            return
        
        if theoption1phrasal== "STICK UP FOR":
            h116= codecs.open(r'phrsalverbs/STICK UP FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h116))
            return
        
        if theoption1phrasal== "THROW OUT4":
            h117= codecs.open(r'phrsalverbs/THROW OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h117))
            return

        if theoption1phrasal== "GET IT":
            h118= codecs.open(r'phrsalverbs/GET IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h118))
            return
        
        if theoption1phrasal== "STICK WITH":
            h119= codecs.open(r'phrsalverbs/STICK WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h119))
            return
        
        if theoption1phrasal== "THROW IN":
            h120= codecs.open(r'phrsalverbs/THROW IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h120))
            return
        
        if theoption1phrasal== "GET IT OFF":
            h121= codecs.open(r'phrsalverbs/GET IT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h121))
            return
        
        if theoption1phrasal== "STICK WITH1":
            h122= codecs.open(r'phrsalverbs/STICK WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h122))
            return
        
        if theoption1phrasal== "LATCH ONTO1":
            h123= codecs.open(r'phrsalverbs/LATCH ONTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h123))
            return
        
        if theoption1phrasal== "THROW OFF":
            h124= codecs.open(r'phrsalverbs/THROW OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h124))
            return
        
        if theoption1phrasal== "GET IT OFF WITH":
            h125= codecs.open(r'phrsalverbs/GET IT OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h125))
            return
        
        if theoption1phrasal== "STICK WITH2":
            h126= codecs.open(r'phrsalverbs/STICK WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h126))
            return
        
        if theoption1phrasal== "THROW OFF1":
            h127= codecs.open(r'phrsalverbs/THROW OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h127))
            return
        
        if theoption1phrasal== "GET IT ON":
            h128= codecs.open(r'phrsalverbs/GET IT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h128))
            return
        
        if theoption1phrasal== "STICK WITH3":
            h129= codecs.open(r'phrsalverbs/STICK WITH3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h129))
            return
        
        if theoption1phrasal== "THROW OFF2":
            h130= codecs.open(r'phrsalverbs/THROW OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h130))
            return
        
        if theoption1phrasal== "GET IT ON1":
            h131= codecs.open(r'phrsalverbs/GET IT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h131))
            return
        
        if theoption1phrasal== "STIFFEN UP":
            h132= codecs.open(r'phrsalverbs/STIFFEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h132))
            return
        
        if theoption1phrasal== "THINK UP":
            h133= codecs.open(r'phrsalverbs/THINK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h133))
            return
        
        if theoption1phrasal== "BE UP":
            h134= codecs.open(r'phrsalverbs/BE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h134))
            return
        
        if theoption1phrasal== "GET IT ON WITH":
            h135= codecs.open(r'phrsalverbs/GET IT ON WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h135))
            return
        
        if theoption1phrasal== "STIFFEN UP1":
            h136= codecs.open(r'phrsalverbs/STIFFEN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h136))
            return
        
        if theoption1phrasal== "THRASH OUT":
            h137= codecs.open(r'phrsalverbs/THRASH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h137))
            return
        
        if theoption1phrasal== "GET IT TOGETHER":
            h138= codecs.open(r'phrsalverbs/GET IT TOGETHER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h138))
            return
        
        if theoption1phrasal== "STIR UP":
            h139= codecs.open(r'phrsalverbs/STIR UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h139))
            return
        
        if theoption1phrasal== "THROW AWAY":
            h140= codecs.open(r'phrsalverbs/THROW AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h140))
            return

        if theoption1phrasal== "GET IT TOGETHER1":
            h141= codecs.open(r'phrsalverbs/GET IT TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h141))
            return
        
        if theoption1phrasal== "STITCH TOGETHER":
            h142= codecs.open(r'phrsalverbs/STITCH TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h142))
            return
        
        if theoption1phrasal== "THROW IN1":
            h143= codecs.open(r'phrsalverbs/THROW IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h143))
            return
        
        if theoption1phrasal== "GET IT UP":
            h144= codecs.open(r'phrsalverbs/GET IT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h144))
            return
        
        if theoption1phrasal== "LAUGH OFF":
            h145= codecs.open(r'phrsalverbs/LAUGH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h145))
            return
        
        if theoption1phrasal== "STITCH UP":
            h146= codecs.open(r'phrsalverbs/STITCH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h146))
            return
        
        if theoption1phrasal== "TENSE UP":
            h147= codecs.open(r'phrsalverbs/TENSE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h147))
            return
        
        if theoption1phrasal== "GET OFF":
            h148= codecs.open(r'phrsalverbs/GET OFF10.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h148))
            return
        
        if theoption1phrasal== "STITCH UP1":
            h149= codecs.open(r'phrsalverbs/STITCH UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h149))
            return
        
        if theoption1phrasal== "TEXT OUT":
            h150= codecs.open(r'phrsalverbs/TEXT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h150))
            return

        if theoption1phrasal== "GET OFF1":
            h151= codecs.open(r'phrsalverbs/GET OFF9.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h151))
            return
        
        if theoption1phrasal== "TELL ON":
            h152= codecs.open(r'phrsalverbs/TELL ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h152))
            return
        
        if theoption1phrasal== "THINK OVER":
            h153= codecs.open(r'phrsalverbs/THINK OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h153))
            return
        
        if theoption1phrasal== "GET OFF2":
            h154= codecs.open(r'phrsalverbs/GET OFF8.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h154))
            return
        
        if theoption1phrasal== "STOP AROUND":
            h155= codecs.open(r'phrsalverbs/STOP AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h155))
            return
        
        if theoption1phrasal== "BEAR ON":
            h156= codecs.open(r'phrsalverbs/BEAR ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h156))
            return
        
        if theoption1phrasal== "THINK THROUGH":
            h157= codecs.open(r'phrsalverbs/THINK THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h157))
            return
        
        if theoption1phrasal== "GET OFF3":
            h158= codecs.open(r'phrsalverbs/GET OFF7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h158))
            return
        
        if theoption1phrasal== "STITCH UP2":
            h159= codecs.open(r'phrsalverbs/STITCH UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h159))
            return
        
        if theoption1phrasal== "TEE UP":
            h160= codecs.open(r'phrsalverbs/TEE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h160))
            return
        
        if theoption1phrasal== "GET OFF4":
            h161= codecs.open(r'phrsalverbs/GET OFF6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h161))
            return
        
        if theoption1phrasal== "STOMP OFF":
            h162= codecs.open(r'phrsalverbs/STOMP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h162))
            return
        
        if theoption1phrasal== "TEE UP1":
            h163= codecs.open(r'phrsalverbs/TEE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h163))
            return
        
        if theoption1phrasal== "GET OFF5":
            h164= codecs.open(r'phrsalverbs/GET OFF5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h164))
            return
        
        if theoption1phrasal== "STOMP ON":
            h165= codecs.open(r'phrsalverbs/STOMP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h165))
            return
        
        if theoption1phrasal== "TELL APART":
            h166= codecs.open(r'phrsalverbs/TELL APART.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h166))
            return
        
        if theoption1phrasal== "LAY DOWN":
            h167= codecs.open(r'phrsalverbs/LAY DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h167))
            return
        
        if theoption1phrasal== "GET OFF6":
            h168= codecs.open(r'phrsalverbs/GET OFF4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h168))
            return

        if theoption1phrasal== "STOP BACK":
            h169= codecs.open(r'phrsalverbs/STOP BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h169))
            return
        
        if theoption1phrasal== "TELL OFF":
            h170= codecs.open(r'phrsalverbs/TELL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h170))
            return
        
        if theoption1phrasal== "GET OFF7":
            h171= codecs.open(r'phrsalverbs/GET OFF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h171))
            return
        
        if theoption1phrasal== "STOP BEHIND":
            h172= codecs.open(r'phrsalverbs/STOP BEHIND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h172))
            return
        
        if theoption1phrasal== "TEE OFF":
            h173= codecs.open(r'phrsalverbs/TEE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h173))
            return
        
        if theoption1phrasal== "GET OFF8":
            h174= codecs.open(r'phrsalverbs/GET OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h174))
            return
        
        if theoption1phrasal== "STOP BY":
            h175= codecs.open(r'phrsalverbs/STOP BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h175))
            return
        
        if theoption1phrasal== "TEE OFF1":
            h176= codecs.open(r'phrsalverbs/TEE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h176))
            return

        if theoption1phrasal== "GET OFF9":
            h177= codecs.open(r'phrsalverbs/GET OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h177))
            return
        
        if theoption1phrasal== "COUNT UP":
            h178= codecs.open(r'phrsalverbs/COUNT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h178))
            return
        
        if theoption1phrasal== "LAY DOWN1":
            h179= codecs.open(r'phrsalverbs/LAY DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h179))
            return
        
        if theoption1phrasal== "STOP IN":
            h180= codecs.open(r'phrsalverbs/STOP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h180))
            return
        
        if theoption1phrasal== "TEE OFF2":
            h181= codecs.open(r'phrsalverbs/TEE OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h181))
            return
        
        if theoption1phrasal== "GET OFF IT":
            h182= codecs.open(r'phrsalverbs/GET OFF IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h182))
            return
        
        if theoption1phrasal== "STOP IN1":
            h183= codecs.open(r'phrsalverbs/STOP IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h183))
            return
        
        if theoption1phrasal== "TEE OFF ON":
            h184= codecs.open(r'phrsalverbs/TEE OFF ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h184))
            return
        
        if theoption1phrasal== "GET OFF ON":
            h185= codecs.open(r'phrsalverbs/GET OFF ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h185))
            return
        
        if theoption1phrasal== "STOP OFF":
            h186= codecs.open(r'phrsalverbs/STOP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h186))
            return
        
        if theoption1phrasal== "TEAR UP":
            h187= codecs.open(r'phrsalverbs/TEAR UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h187))
            return
        
        if theoption1phrasal== "GET OFF ON1":
            h188= codecs.open(r'phrsalverbs/GET OFF ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h188))
            return
        
        if theoption1phrasal== "STOP OUT":
            h189= codecs.open(r'phrsalverbs/STOP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h189))
            return
        
        if theoption1phrasal== "BE TAKEN ABACK":
            h190= codecs.open(r'phrsalverbs/BE TAKEN ABACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h190))
            return
        
        if theoption1phrasal== "TEAR UP1":
            h191= codecs.open(r'phrsalverbs/TEAR UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h191))
            return
        
        if theoption1phrasal== "GET OFF WITH":
            h192= codecs.open(r'phrsalverbs/GET OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h192))
            return
        
        if theoption1phrasal== "STOP OVER":
            h193= codecs.open(r'phrsalverbs/STOP OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h193))
            return
        
        if theoption1phrasal== "TEAR OUT":
            h194= codecs.open(r'phrsalverbs/TEAR OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h194))
            return
        
        if theoption1phrasal== "GET ON":
            h195= codecs.open(r'phrsalverbs/GET ON7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h195))
            return
        
        if theoption1phrasal== "STOP UP":
            h196= codecs.open(r'phrsalverbs/STOP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h196))
            return
        
        if theoption1phrasal== "TEAR UP2":
            h197= codecs.open(r'phrsalverbs/TEAR UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h197))
            return
        
        if theoption1phrasal== "GET ON1":
            h198= codecs.open(r'phrsalverbs/GET ON6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h198))
            return
        
        if theoption1phrasal== "STOP UP1":
            h199= codecs.open(r'phrsalverbs/STOP UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h199))
            return
        
        if theoption1phrasal== "GET ON2":
            h200= codecs.open(r'phrsalverbs/GET ON7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h200))
            return
        
        if theoption1phrasal== "LAY INTO":
            h201= codecs.open(r'phrsalverbs/LAY INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h201))
            return
        
        if theoption1phrasal== "GET ON3":
            h202= codecs.open(r'phrsalverbs/GET ON5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h202))
            return
        
        if theoption1phrasal== "STORE UP":
            h203= codecs.open(r'phrsalverbs/STORE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h203))
            return
        
        if theoption1phrasal== "GET ON4":
            h204= codecs.open(r'phrsalverbs/GET ON6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h204))
            return
        
        if theoption1phrasal== "GET ON5":
            h205= codecs.open(r'phrsalverbs/GET ON4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h205))
            return
        
        if theoption1phrasal== "STORE UP1":
            h206= codecs.open(r'phrsalverbs/STORE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h206))
            return
        
        if theoption1phrasal== "TEAR OFF":
            h207= codecs.open(r'phrsalverbs/TEAR OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h207))
            return
        
        if theoption1phrasal== "GET ON6":
            h208= codecs.open(r'phrsalverbs/GET ON3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h208))
            return
        
        if theoption1phrasal== "STORE UP2":
            h209= codecs.open(r'phrsalverbs/STORE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h209))
            return
        
        if theoption1phrasal== "TEAR OFF1":
            h210= codecs.open(r'phrsalverbs/TEAR OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h210))
            return
        
        if theoption1phrasal== "GET ON7":
            h211= codecs.open(r'phrsalverbs/GET ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h211))
            return
        
        if theoption1phrasal== "BE UP1":
            h212= codecs.open(r'phrsalverbs/BE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h212))
            return
        
        if theoption1phrasal== "STORM OFF":
            h213= codecs.open(r'phrsalverbs/STORM OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h213))
            return
        
        if theoption1phrasal== "TEAR OFF2":
            h214= codecs.open(r'phrsalverbs/TEAR OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h214))
            return
        
        if theoption1phrasal== "GET ON8":
            h215= codecs.open(r'phrsalverbs/GET ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h215))
            return
        
        if theoption1phrasal== "STORM OUT":
            h216= codecs.open(r'phrsalverbs/STORM OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h216))
            return
        
        if theoption1phrasal== "TEAR OFF3":
            h217= codecs.open(r'phrsalverbs/TEAR OFF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h217))
            return
        
        if theoption1phrasal== "GET ON9":
            h218= codecs.open(r'phrsalverbs/GET ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h218))
            return
        
        if theoption1phrasal== "STOW AWAY":
            h219= codecs.open(r'phrsalverbs/STOW AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h219))
            return

        if theoption1phrasal== "TEAR AWAY":
            h220= codecs.open(r'phrsalverbs/TEAR AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h220))
            return
        
        if theoption1phrasal== "GET ON AT":
            h221= codecs.open(r'phrsalverbs/GET ON AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h221))
            return
        
        if theoption1phrasal== "STOW AWAY1":
            h222= codecs.open(r'phrsalverbs/STOW AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h222))
            return
        
        if theoption1phrasal== "LAY OFF":
            h223= codecs.open(r'phrsalverbs/LAY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h223))
            return
        
        if theoption1phrasal== "TEAR AWAY1":
            h224= codecs.open(r'phrsalverbs/TEAR AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h224))
            return
        
        if theoption1phrasal== "GET ON FOR":
            h225= codecs.open(r'phrsalverbs/GET ON FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h225))
            return
        
        if theoption1phrasal== "STRETCH OUT":
            h226= codecs.open(r'phrsalverbs/STRETCH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h226))
            return
        
        if theoption1phrasal== "TEAR DOWN":
            h227= codecs.open(r'phrsalverbs/TEAR DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h227))
            return
        
        if theoption1phrasal== "GET ON TO":
            h228= codecs.open(r'phrsalverbs/GET ON TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h228))
            return
        
        if theoption1phrasal== "STRETCH TO":
            h229= codecs.open(r'phrsalverbs/STRETCH TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h229))
            return
        
        if theoption1phrasal== "TEAR INTO":
            h230= codecs.open(r'phrsalverbs/TEAR INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h230))
            return
        
        if theoption1phrasal== "GET ON WITH":
            h231= codecs.open(r'phrsalverbs/GET ON WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h231))
            return
        
        if theoption1phrasal== "STRETCHER OFF":
            h232= codecs.open(r'phrsalverbs/STRETCHER OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h232))
            return
        
        if theoption1phrasal== "TEAR APART":
            h233= codecs.open(r'phrsalverbs/TEAR APART.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h233))
            return
        
        if theoption1phrasal== "BE TO DO WITH":
            h234= codecs.open(r'phrsalverbs/BE TO DO WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h234))
            return
        
        if theoption1phrasal== "GET ON WITH1":
            h235= codecs.open(r'phrsalverbs/GET ON WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h235))
            return
        
        if theoption1phrasal== "STRIKE BACK":
            h236= codecs.open(r'phrsalverbs/STRIKE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h236))
            return
        
        if theoption1phrasal== "TEAR AT":
            h237= codecs.open(r'phrsalverbs/TEAR AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h237))
            return
        
        if theoption1phrasal== "GET ONTO":
            h238= codecs.open(r'phrsalverbs/GET ONTO4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h238))
            return
        
        if theoption1phrasal== "STRIKE DOWN":
            h239= codecs.open(r'phrsalverbs/STRIKE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h239))
            return

        if theoption1phrasal== "TEAM UP":
            h240= codecs.open(r'phrsalverbs/TEAM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h240))
            return

        if theoption1phrasal== "GET ONTO1":
            h241= codecs.open(r'phrsalverbs/GET ONTO3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h241))
            return

        if theoption1phrasal== "STRIKE DOWN1":
            h242= codecs.open(r'phrsalverbs/STRIKE DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h242))
            return

        if theoption1phrasal== "TAP OUT":
            h243= codecs.open(r'phrsalverbs/TAP OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h243))
            return

        if theoption1phrasal== "GET ONTO2":
            h244= codecs.open(r'phrsalverbs/GET ONTO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h244))
            return

        if theoption1phrasal== "BEAR ON1":
            h245= codecs.open(r'phrsalverbs/BEAR ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h245))
            return

        if theoption1phrasal== "STRIKE DOWN2":
            h246= codecs.open(r'phrsalverbs/STRIKE DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h246))
            return

        if theoption1phrasal== "TAP OUT1":
            h247= codecs.open(r'phrsalverbs/TAP OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h247))
            return

        if theoption1phrasal== "GET ONTO3":
            h248= codecs.open(r'phrsalverbs/GET ONTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h248))
            return

        if theoption1phrasal== "STRIKE OFF":
            h249= codecs.open(r'phrsalverbs/STRIKE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h249))
            return

        if theoption1phrasal== "TAP UP":
            h250= codecs.open(r'phrsalverbs/TAP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h250))
            return

        if theoption1phrasal== "GET ONTO4":
            h251= codecs.open(r'phrsalverbs/GET ONTO5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h251))
            return
        
        if theoption1phrasal== "STRIKE ON":
            h252= codecs.open(r'phrsalverbs/STRIKE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h252))
            return
        
        if theoption1phrasal== "TAPER OFF":
            h253= codecs.open(r'phrsalverbs/TAPER OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h253))
            return
        
        if theoption1phrasal== "GET OUT":
            h254= codecs.open(r'phrsalverbs/GET OUT7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h254))
            return
        
        if theoption1phrasal== "STRIKE OUT":
            h255= codecs.open(r'phrsalverbs/STRIKE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h255))
            return
        
        if theoption1phrasal== "LAY ON":
            h256= codecs.open(r'phrsalverbs/LAY ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h256))
            return
        
        if theoption1phrasal== "TAP FOR":
            h257= codecs.open(r'phrsalverbs/TAP FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h257))
            return
        
        if theoption1phrasal== "GET OUT1":
            h258= codecs.open(r'phrsalverbs/GET OUT6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h258))
            return
        
        if theoption1phrasal== "STRIKE OUT1":
            h259= codecs.open(r'phrsalverbs/STRIKE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h259))
            return
        
        if theoption1phrasal== "TAP INTO":
            h260= codecs.open(r'phrsalverbs/TAP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(h260))
            return
        
        if theoption1phrasal== "GET OUT2":
            i1= codecs.open(r'phrsalverbs/GET OUT5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i1))
            return
        
        if theoption1phrasal== "STRIKE OUT2":
            i2= codecs.open(r'phrsalverbs/STRIKE OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i2))
            return
        
        if theoption1phrasal== "TAP OFF WITH":
            i3= codecs.open(r'phrsalverbs/TAP OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i3))
            return
        
        if theoption1phrasal== "GET OUT3":
            i4= codecs.open(r'phrsalverbs/GET OUT4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i4))
            return

        if theoption1phrasal== "STRIKE OUT3":
            i5= codecs.open(r'phrsalverbs/STRIKE OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i5))
            return
        
        if theoption1phrasal== "TAP OUT2":
            i6= codecs.open(r'phrsalverbs/TAP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i6))
            return
        
        if theoption1phrasal== "BE OUT OF":
            i7= codecs.open(r'phrsalverbs/BE OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i7))
            return
        
        if theoption1phrasal== "GET OUT4":
            i8= codecs.open(r'phrsalverbs/GET OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i8))
            return
        
        if theoption1phrasal== "STRIKE OUT4":
            i9= codecs.open(r'phrsalverbs/STRIKE OUT4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i9))
            return
        
        if theoption1phrasal== "TALK ROUND":
            i10= codecs.open(r'phrsalverbs/TALK ROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i10))
            return
        
        if theoption1phrasal== "GET OUT5":
            i11= codecs.open(r'phrsalverbs/GET OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i11))
            return
        
        if theoption1phrasal== "STRIKE UP":
            i12= codecs.open(r'phrsalverbs/STRIKE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i12))
            return
        
        if theoption1phrasal== "TALK THROUGH":
            i13= codecs.open(r'phrsalverbs/TALK THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i13))
            return
        
        if theoption1phrasal== "GET OUT6":
            i14= codecs.open(r'phrsalverbs/GET OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i14))
            return
        
        if theoption1phrasal== "STRIKE UP1":
            i15= codecs.open(r'phrsalverbs/STRIKE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i15))
            return
        
        if theoption1phrasal== "TALK UP":
            i16= codecs.open(r'phrsalverbs/TALK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i16))
            return
        
        if theoption1phrasal== "GET OUT OF":
            i17= codecs.open(r'phrsalverbs/GET OUT OF6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i17))
            return
        
        if theoption1phrasal== "LAY OUT":
            i18= codecs.open(r'phrsalverbs/LAY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i18))
            return
        
        if theoption1phrasal== "STRIKE UPON":
            i19= codecs.open(r'phrsalverbs/STRIKE UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i19))
            return
        
        if theoption1phrasal== "TALK YOURSELF OUT":
            i20= codecs.open(r'phrsalverbs/TALK YOURSELF OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i20))
            return

        if theoption1phrasal== "GET OUT OF1":
            i21= codecs.open(r'phrsalverbs/GET OUT OF5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i21))
            return
        
        if theoption1phrasal== "STRING ALONG":
            i22= codecs.open(r'phrsalverbs/STRIN ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i22))
            return
        
        if theoption1phrasal== "TALK OUT":
            i23= codecs.open(r'phrsalverbs/TALK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i23))
            return
        
        if theoption1phrasal== "GET OUT OF2":
            i24= codecs.open(r'phrsalverbs/GET OUT OF4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i24))
            return
        
        if theoption1phrasal== "STRING ALONG1":
            i25= codecs.open(r'phrsalverbs/STRING ALONG1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i25))
            return
        
        if theoption1phrasal== "TALK OUT OF":
            i26= codecs.open(r'phrsalverbs/TALK OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i26))
            return
        
        if theoption1phrasal== "GET OUT OF3":
            i27= codecs.open(r'phrsalverbs/GET OUT OF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i27))
            return
        
        if theoption1phrasal== "STRING OUT":
            i28= codecs.open(r'phrsalverbs/STRING OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i28))
            return
        
        if theoption1phrasal== "JAZZ UP":
            i29= codecs.open(r'phrsalverbs/JAZZ UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i29))
            return
        
        if theoption1phrasal== "BE ON ABOUT":
            i30= codecs.open(r'phrsalverbs/BE ON ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i30))
            return
        
        if theoption1phrasal== "TALK OVER":
            i31= codecs.open(r'phrsalverbs/TALK OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i31))
            return
        
        if theoption1phrasal== "GET OUT OF4":
            i32= codecs.open(r'phrsalverbs/GET OUT OF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i32))
            return
        
        if theoption1phrasal== "STRING TOGETHER":
            i33= codecs.open(r'phrsalverbs/STRING TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i33))
            return
        
        if theoption1phrasal== "TALK ROUND1":
            i34= codecs.open(r'phrsalverbs/TALK ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i34))
            return
        
        if theoption1phrasal== "GET OUT OF5":
            i35= codecs.open(r'phrsalverbs/GET OUT OF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i35))
            return
        
        if theoption1phrasal== "STRING UP":
            i36= codecs.open(r'phrsalverbs/STRING UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i36))
            return
        
        if theoption1phrasal== "TALK DOWN":
            i37= codecs.open(r'phrsalverbs/TALK DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i37))
            return
        
        if theoption1phrasal== "GET OUT OF6":
            i38= codecs.open(r'phrsalverbs/GET OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i38))
            return
        
        if theoption1phrasal== "STRIP AWAY":
            i39= codecs.open(r'phrsalverbs/STRIP AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i39))
            return

        if theoption1phrasal== "TALK DOWN1":
            i40= codecs.open(r'phrsalverbs/TALK DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i40))
            return
        
        if theoption1phrasal== "LEAD ON":
            i41= codecs.open(r'phrsalverbs/LEAD ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i41))
            return
        
        if theoption1phrasal== "GET OUT!":
            i42= codecs.open(r'phrsalverbs/GET OUT!.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i42))
            return
        
        if theoption1phrasal== "STRIP DOWN":
            i43= codecs.open(r'phrsalverbs/STRIP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i43))
            return
        
        if theoption1phrasal== "TALK DOWN TO":
            i44= codecs.open(r'phrsalverbs/TALK DOWN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i44))
            return
        
        if theoption1phrasal== "GET OVER":
            i45= codecs.open(r'phrsalverbs/GET OVER5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i45))
            return

        if theoption1phrasal== "STRIP DOWN TO":
            i46= codecs.open(r'phrsalverbs/STRIP DOWN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i46))
            return

        if theoption1phrasal== "TALK INTO":
            i47= codecs.open(r'phrsalverbs/TALK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i47))
            return

        if theoption1phrasal== "GET OVER1":
            i48= codecs.open(r'phrsalverbs/GET OVER4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i48))
            return
        
        if theoption1phrasal== "STRIP OF":
            i49= codecs.open(r'phrsalverbs/STRIP OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i49))
            return
        
        if theoption1phrasal== "TALK AROUND":
            i50= codecs.open(r'phrsalverbs/TALK AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i50))
            return
        
        if theoption1phrasal== "GET OVER2":
            i51= codecs.open(r'phrsalverbs/GET OVER3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i51))
            return
        
        if theoption1phrasal== "BE SNOWED UNDER":
            i52= codecs.open(r'phrsalverbs/BE SNOWED UNDER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i52))
            return
        
        if theoption1phrasal== "STRIP OFF":
            i53= codecs.open(r'phrsalverbs/STRIP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i53))
            return
        
        if theoption1phrasal== "TALK AROUND1":
            i54= codecs.open(r'phrsalverbs/TALK AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i54))
            return
        
        if theoption1phrasal== "GET OVER3":
            i55= codecs.open(r'phrsalverbs/GET OVER2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i55))
            return
        
        if theoption1phrasal== "STRIP OUT":
            i56= codecs.open(r'phrsalverbs/STRIP OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i56))
            return
        
        if theoption1phrasal== "TALK AT":
            i57= codecs.open(r'phrsalverbs/TALK AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i57))
            return
        
        if theoption1phrasal== "GET OVER4":
            i58= codecs.open(r'phrsalverbs/GET OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i58))
            return
        
        if theoption1phrasal== "STRIP OUT1":
            i59= codecs.open(r'phrsalverbs/STRIP OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i59))
            return
        
        if theoption1phrasal== "TALK BACK":
            i60= codecs.open(r'phrsalverbs/TALK BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i60))
            return
        
        if theoption1phrasal== "GET OVER5":
            i61= codecs.open(r'phrsalverbs/GET OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i61))
            return
        
        if theoption1phrasal== "STRIP TO":
            i62= codecs.open(r'phrsalverbs/STRIP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i62))
            return
        
        if theoption1phrasal== "BE ONTO":
            i63= codecs.open(r'phrsalverbs/BE ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i63))
            return
        
        if theoption1phrasal== "TAKE UP":
            i64= codecs.open(r'phrsalverbs/TAKE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i64))
            return
        
        if theoption1phrasal== "GET OVER WITH":
            i65= codecs.open(r'phrsalverbs/GET OVER WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i65))
            return
        
        if theoption1phrasal== "STUB OUT":
            i66= codecs.open(r'phrsalverbs/STUB OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i66))
            return
        
        if theoption1phrasal== "TAKE UP1":
            i67= codecs.open(r'phrsalverbs/TAKE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i67))
            return
        
        if theoption1phrasal== "GET ROUND":
            i68= codecs.open(r'phrsalverbs/GET ROUND2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i68))
            return
        
        if theoption1phrasal== "STUFF UP":
            i69= codecs.open(r'phrsalverbs/STUFF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i69))
            return
        
        if theoption1phrasal== "TAKE UP2":
            i70= codecs.open(r'phrsalverbs/TAKE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i70))
            return
        
        if theoption1phrasal== "GET ROUND1":
            i71= codecs.open(r'phrsalverbs/GET ROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i71))
            return
        
        if theoption1phrasal== "STUMP UP":
            i72= codecs.open(r'phrsalverbs/STUMP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i72))
            return
        
        if theoption1phrasal== "TAKE UP3":
            i73= codecs.open(r'phrsalverbs/TAKE UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i73))
            return
        
        if theoption1phrasal== "COME IN":
            i74= codecs.open(r'phrsalverbs/COME IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i74))
            return
        
        if theoption1phrasal== "GET ROUND2":
            i75= codecs.open(r'phrsalverbs/GET ROUND TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i75))
            return
        
        if theoption1phrasal== "STUMPLE ACROSS":
            i76= codecs.open(r'phrsalverbs/STUMPLE ACCROSS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i76))
            return
        
        if theoption1phrasal== "TAKE OVER":
            i77= codecs.open(r'phrsalverbs/TAKE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i77))
            return
        
        if theoption1phrasal== "GET ROUND3":
            i78= codecs.open(r'phrsalverbs/GET ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i78))
            return
        
        if theoption1phrasal== "STUMPLE UPON":
            i79= codecs.open(r'phrsalverbs/STUMPLE UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i79))
            return
        
        if theoption1phrasal== "TAKE OVER1":
            i80= codecs.open(r'phrsalverbs/TAKE OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i80))
            return
        
        if theoption1phrasal== "GET THROUGH":
            i81= codecs.open(r'phrsalverbs/GET THROUGH9.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i81))
            return
        
        if theoption1phrasal== "SUCK IN":
            i82= codecs.open(r'phrsalverbs/SUCK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i82))
            return
        
        if theoption1phrasal== "TAKE THROUGH":
            i83= codecs.open(r'phrsalverbs/TAKE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i83))
            return
        
        if theoption1phrasal== "GET THROUGH1":
            i84= codecs.open(r'phrsalverbs/GET THROUGH8.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i84))
            return

        if theoption1phrasal== "LEAD TO":
            i85= codecs.open(r'phrsalverbs/LEAD TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i85))
            return
        
        if theoption1phrasal== "SUCK INTO":
            i86= codecs.open(r'phrsalverbs/SUCK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i86))
            return
        
        if theoption1phrasal== "TAKE TO":
            i87= codecs.open(r'phrsalverbs/TAKE TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i87))
            return
        
        if theoption1phrasal== "GET THROUGH2":
            i88= codecs.open(r'phrsalverbs/GET THROUGH7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i88))
            return
        
        if theoption1phrasal== "SUCK UP":
            i89= codecs.open(r'phrsalverbs/SUCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i89))
            return
        
        if theoption1phrasal== "TAKE OUT":
            i90= codecs.open(r'phrsalverbs/TAKE OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i90))
            return
        
        if theoption1phrasal== "GET THROUGH3":
            i91= codecs.open(r'phrsalverbs/GET THROUGH6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i91))
            return
        
        if theoption1phrasal== "SUCK UP TO":
            i92= codecs.open(r'phrsalverbs/SUCK UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i92))
            return
        
        
        
        if theoption1phrasal== "TAKE OUT1":
            i93= codecs.open(r'phrsalverbs/TAKE OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i93))
            return
        
        if theoption1phrasal== "GET THROUGH4":
            i94= codecs.open(r'phrsalverbs/GET THROUGH5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i94))
            return
        
        if theoption1phrasal== "SUIT UP":
            i95= codecs.open(r'phrsalverbs/SUIT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i95))
            return
        
        if theoption1phrasal== "BE OUT":
            i96= codecs.open(r'phrsalverbs/BE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i96))
            return
        
        if theoption1phrasal== "TAKE OUT2":
            i97= codecs.open(r'phrsalverbs/TAKE OUT4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i97))
            return
        
        if theoption1phrasal== "GET THROUGH5":
            i98= codecs.open(r'phrsalverbs/GET THROUGH4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i98))
            return
        
        if theoption1phrasal== "SUIT UP1":
            i99= codecs.open(r'phrsalverbs/SUI UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i99))
            return
        
        if theoption1phrasal== "TAKE OUT3":
            i100= codecs.open(r'phrsalverbs/TAKE OUT5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i100))
            return
        
        if theoption1phrasal== "GET THROUGH6":
            i101= codecs.open(r'phrsalverbs/GET THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i101))
            return
        
        if theoption1phrasal== "SUM UP":
            i102= codecs.open(r'phrsalverbs/SUM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i102))
            return
        
        if theoption1phrasal== "TAKE ON":
            i103= codecs.open(r'phrsalverbs/TAKE ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i103))
            return
        
        if theoption1phrasal== "GET THROUGH7":
            i104= codecs.open(r'phrsalverbs/GET THROUGH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i104))
            return
        
        if theoption1phrasal== "SUMMON UP":
            i105= codecs.open(r'phrsalverbs/SUMMON UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i105))
            return
        
        if theoption1phrasal== "TAKE ON1":
            i106= codecs.open(r'phrsalverbs/TAKE ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i106))
            return
        
        if theoption1phrasal== "COME IN1":
            i107= codecs.open(r'phrsalverbs/COME IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i107))
            return
        
        if theoption1phrasal== "GET THROUGH8":
            i108= codecs.open(r'phrsalverbs/GET THROUGH3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i108))
            return
        
        if theoption1phrasal== "SUSS OUT":
            i109= codecs.open(r'phrsalverbs/SUSS OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i109))
            return
        
        if theoption1phrasal== "TAKE OUT4":
            i110= codecs.open(r'phrsalverbs/TAKE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i110))
            return
        
        if theoption1phrasal== "GET THROUGH9":
            i111= codecs.open(r'phrsalverbs/GET THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i111))
            return
        
        if theoption1phrasal== "SWALLOW UP":
            i112= codecs.open(r'phrsalverbs/SWALLOW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i112))
            return
        
        if theoption1phrasal== "TAKE OUT5":
            i113= codecs.open(r'phrsalverbs/TAKE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i113))
            return
        
        if theoption1phrasal== "GET THROUGH TO":
            i114= codecs.open(r'phrsalverbs/GET THROUGH TO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i114))
            return
        
        if theoption1phrasal== "SWALLOW UP1":
            i115= codecs.open(r'phrsalverbs/SWALLOW UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i115))
            return
        
        if theoption1phrasal== "TAKE ON2":
            i116= codecs.open(r'phrsalverbs/TAKE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i116))
            return
        
        if theoption1phrasal== "GET THROUGH TO1":
            i117= codecs.open(r'phrsalverbs/GET THROUGH TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i117))
            return
        
        if theoption1phrasal== "LEAK OUT":
            i118= codecs.open(r'phrsalverbs/LEAK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i118))
            return
        
        if theoption1phrasal== "SWALLOW UP2":
            i119= codecs.open(r'phrsalverbs/SWALLOW UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i119))
            return
        
        if theoption1phrasal== "TAKE OFF":
            i120= codecs.open(r'phrsalverbs/TAKE OFF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i120))
            return
        
        if theoption1phrasal== "GET THROUGH TO2":
            i121= codecs.open(r'phrsalverbs/GET THROUGH TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i121))
            return
        
        if theoption1phrasal== "SWAN ABOUT":
            i122= codecs.open(r'phrsalverbs/SWAN ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i122))
            return
        
        if theoption1phrasal== "TAKE OFF1":
            i123= codecs.open(r'phrsalverbs/TAKE OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i123))
            return
        
        if theoption1phrasal== "GET TO":
            i124= codecs.open(r'phrsalverbs/GET TO3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i124))
            return
        
        if theoption1phrasal== "SWAN AROUND":
            i125= codecs.open(r'phrsalverbs/SWAN AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i125))
            return
        
        if theoption1phrasal== "TAKE OFF2":
            i126= codecs.open(r'phrsalverbs/TAKE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i126))
            return
        
        if theoption1phrasal== "GET TO1":
            i127= codecs.open(r'phrsalverbs/GET TO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i127))
            return
        
        if theoption1phrasal== "SWAN IN":
            i129= codecs.open(r'phrsalverbs/SWAN IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i129))
            return
        
        if theoption1phrasal== "BEAR OUT":
            i130= codecs.open(r'phrsalverbs/BEAR OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i130))
            return

        if theoption1phrasal== "TAKE OFF3":
            i131= codecs.open(r'phrsalverbs/TAKE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i131))
            return
        
        if theoption1phrasal== "GET TO2":
            i132= codecs.open(r'phrsalverbs/GET TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i132))
            return
        
        if theoption1phrasal== "SWAN OFF":
            i133= codecs.open(r'phrsalverbs/SWAN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i133))
            return
        
        if theoption1phrasal== "TAKE IT UPON YOURSELF":
            i134= codecs.open(r'phrsalverbs/TAKE IT UPON YOURSELF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i134))
            return
        
        if theoption1phrasal== "GET TO3":
            i135= codecs.open(r'phrsalverbs/GET TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i135))
            return
        
        if theoption1phrasal== "SWEAR BY":
            i136= codecs.open(r'phrsalverbs/SWEAR BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i136))
            return
        
        if theoption1phrasal== "TAKE IT OUT ON":
            i137= codecs.open(r'phrsalverbs/TAKE IT OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i137))
            return
        
        if theoption1phrasal== "GET TOGETHER":
            i138= codecs.open(r'phrsalverbs/GET TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i138))
            return
        
        if theoption1phrasal== "SWEAR DOWN":
            i139= codecs.open(r'phrsalverbs/SWEAR DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i139))
            return
        
        if theoption1phrasal== "TAKE IT":
            i140= codecs.open(r'phrsalverbs/TAKE IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i140))
            return
        
        if theoption1phrasal== "ACT UPON":
            i141= codecs.open(r'phrsalverbs/ACT UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i141))
            return
        
        if theoption1phrasal== "LEAN ON":
            i142= codecs.open(r'phrsalverbs/LEAN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i142))
            return
        
        if theoption1phrasal== "GET UP":
            i143= codecs.open(r'phrsalverbs/GET UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i143))
            return

        if theoption1phrasal== "SWEAR IN":
            i144= codecs.open(r'phrsalverbs/SWEAR IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i144))
            return

        if theoption1phrasal== "TAKE IN":
            i145= codecs.open(r'phrsalverbs/TAKE IN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i145))
            return
        
        if theoption1phrasal== "GET UP1":
            i146= codecs.open(r'phrsalverbs/GET UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i146))
            return
        
        if theoption1phrasal== "SWEEP THROUGH":
            i147= codecs.open(r'phrsalverbs/SWEEP THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i147))
            return

        if theoption1phrasal== "TAKE IN1":
            i148= codecs.open(r'phrsalverbs/TAKE IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i148))
            return
        
        if theoption1phrasal== "GET UP TO":
            i149= codecs.open(r'phrsalverbs/GET UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i149))
            return
        
        if theoption1phrasal== "SWEEP THROUGH":
            i150= codecs.open(r'phrsalverbs/SWEEP THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i150))
            return
        
        if theoption1phrasal== "TAKE IN1":
            i151= codecs.open(r'phrsalverbs/TAKE IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i151))
            return
        
        if theoption1phrasal== "GET UP TO":
            i152= codecs.open(r'phrsalverbs/GET UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i152))
            return
        
        if theoption1phrasal== "SWEEP THROUGH1":
            i153= codecs.open(r'phrsalverbs/SWEEP THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i153))
            return
        
        if theoption1phrasal== "TAKE IN2":
            i154= codecs.open(r'phrsalverbs/TAKE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i154))
            return
        
        if theoption1phrasal== "GHOST AWAY":
            i155= codecs.open(r'phrsalverbs/GHOST AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i155))
            return
        
        if theoption1phrasal== "BE ON":
            i156= codecs.open(r'phrsalverbs/BE ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i156))
            return
        
        if theoption1phrasal== "SWING AROUND":
            i157= codecs.open(r'phrsalverbs/SWING AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i157))
            return
        
        if theoption1phrasal== "TAKE IN3":
            i158= codecs.open(r'phrsalverbs/TAKE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i158))
            return
        
        if theoption1phrasal== "GIN UP":
            i159= codecs.open(r'phrsalverbs/GIN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i159))
            return
        
        if theoption1phrasal== "SWING AROUND1":
            i160= codecs.open(r'phrsalverbs/SWING AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i160))
            return
        
        if theoption1phrasal== "TAKE FOR":
            i161= codecs.open(r'phrsalverbs/TAKE FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i161))
            return

        if theoption1phrasal== "GINGER UP":
            i162= codecs.open(r'phrsalverbs/GINGER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i162))
            return
        
        if theoption1phrasal== "SWING AT":
            i163= codecs.open(r'phrsalverbs/SWING AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i163))
            return
        
        if theoption1phrasal== "TAKE DOWN":
            i164= codecs.open(r'phrsalverbs/TAKE DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i164))
            return
        
        if theoption1phrasal== "GIVE AWAY":
            i165= codecs.open(r'phrsalverbs/GIVE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i165))
            return
        
        if theoption1phrasal== "SWING BY":
            i166= codecs.open(r'phrsalverbs/SWING BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i166))
            return
        
        if theoption1phrasal== "COME IN2":
            i167= codecs.open(r'phrsalverbs/COME IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i167))
            return
        
        if theoption1phrasal== "TAKE DOWN1":
            i168= codecs.open(r'phrsalverbs/TAKE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i168))
            return
        
        if theoption1phrasal== "GIVE AWAY1":
            i169= codecs.open(r'phrsalverbs/GIVE AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i169))
            return
        
        if theoption1phrasal== "SWING ROUND":
            i170= codecs.open(r'phrsalverbs/SWING ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i170))
            return
        
        if theoption1phrasal== "TAKE BACK":
            i171= codecs.open(r'phrsalverbs/TAKE BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i171))
            return
        
        if theoption1phrasal== "GIVE AWAY2":
            i172= codecs.open(r'phrsalverbs/GIVE AWAY2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i172))
            return
        
        if theoption1phrasal== "SWING ROUND1":
            i173= codecs.open(r'phrsalverbs/SWING ROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i173))
            return
        
        if theoption1phrasal== "TAKE AWAY":
            i174= codecs.open(r'phrsalverbs/TAKE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i174))
            return
        
        if theoption1phrasal== "GIVE AWAY3":
            i175= codecs.open(r'phrsalverbs/GIVE AWAY3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i175))
            return
        
        if theoption1phrasal== "SWITCH OFF":
            i176= codecs.open(r'phrsalverbs/SWITCH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i176))
            return

        if theoption1phrasal== "TAKE ASIDE":
            i177= codecs.open(r'phrsalverbs/TAKE ASIDE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i177))
            return
        
        if theoption1phrasal== "LEAP AT":
            i178= codecs.open(r'phrsalverbs/LEAP AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i178))
            return
        
        if theoption1phrasal== "GIVE AWAY4":
            i179= codecs.open(r'phrsalverbs/GIVE AWAY4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i179))
            return
        
        if theoption1phrasal== "SWITCH OFF1":
            i180= codecs.open(r'phrsalverbs/SWITCH OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i180))
            return
        
        if theoption1phrasal== "TAKE APART":
            i181= codecs.open(r'phrsalverbs/TAKE APART.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i181))
            return
        
        if theoption1phrasal== "GIVE AWAY5":
            i182= codecs.open(r'phrsalverbs/GIVE AWAY5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i182))
            return
        
        if theoption1phrasal== "SWITCH ON":
            i183= codecs.open(r'phrsalverbs/SWITCH ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i183))
            return
        
        if theoption1phrasal== "TAKE AFTER":
            i184= codecs.open(r'phrsalverbs/TAKE AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i184))
            return
        
        if theoption1phrasal== "GIVE AWAY6":
            i185= codecs.open(r'phrsalverbs/GIVE AWAY6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i185))
            return
        
        if theoption1phrasal== "SWITCH ON1":
            i186= codecs.open(r'phrsalverbs/SWITCH ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i186))
            return
        
        if theoption1phrasal== "TAKE ABACK":
            i187= codecs.open(r'phrsalverbs/TAKE ABACK2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i187))
            return
        
        if theoption1phrasal== "GIVE AWAY7":
            i188= codecs.open(r'phrsalverbs/GIVE AWAY7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i188))
            return
        
        if theoption1phrasal== "BE ON1":
            i189= codecs.open(r'phrsalverbs/BE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i189))
            return
        
        if theoption1phrasal== "SWITCH OVER":
            i190= codecs.open(r'phrsalverbs/SWITCH OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i190))
            return
        
        if theoption1phrasal== "TAIL OFF":
            i191= codecs.open(r'phrsalverbs/TAIL OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i191))
            return
        
        if theoption1phrasal== "GIVE BACK":
            i192= codecs.open(r'phrsalverbs/GIVE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i192))
            return
        
        if theoption1phrasal== "SYPHON OFF":
            i193= codecs.open(r'phrsalverbs/SYPHON OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i193))
            return
        
        if theoption1phrasal== "TAIL OFF1":
            i194= codecs.open(r'phrsalverbs/TAIL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i194))
            return
        
        if theoption1phrasal== "GIVE BACK1":
            i195= codecs.open(r'phrsalverbs/GIVE BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i195))
            return
        
        if theoption1phrasal== "SYPHON OFF1":
            i196= codecs.open(r'phrsalverbs/SYPHON OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i196))
            return
        
        if theoption1phrasal== "TAIL BACK":
            i197= codecs.open(r'phrsalverbs/TAIL BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i197))
            return
        
        if theoption1phrasal== "GIVE IN":
            i198= codecs.open(r'phrsalverbs/GIVE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i198))
            return
        
        if theoption1phrasal== "TACK ON":
            i199= codecs.open(r'phrsalverbs/TACK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i199))
            return
        
        if theoption1phrasal== "LEAP ON":
            i200= codecs.open(r'phrsalverbs/LEAP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i200))
            return

        if theoption1phrasal== "TAIL AWAY":
            i201= codecs.open(r'phrsalverbs/TAIL AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i201))
            return
        
        if theoption1phrasal== "GIVE IN1":
            i202= codecs.open(r'phrsalverbs/GIVE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i202))
            return
        
        if theoption1phrasal== "TAG ALONG":
            i203= codecs.open(r'phrsalverbs/TAG ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i203))
            return
        
        if theoption1phrasal== "TAG WITH":
            i204= codecs.open(r'phrsalverbs/TAG WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i204))
            return
        
        if theoption1phrasal== "GIVE IN2":
            i205= codecs.open(r'phrsalverbs/GIVE IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i205))
            return
        
        if theoption1phrasal== "TAG ON":
            i206= codecs.open(r'phrsalverbs/TAG ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i206))
            return
        
        if theoption1phrasal== "TAKE BACK1":
            i207= codecs.open(r'phrsalverbs/TAKE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i207))
            return
        
        if theoption1phrasal== "GIVE IN3":
            i208= codecs.open(r'phrsalverbs/GIVE IN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i208))
            return
        
        if theoption1phrasal== "TAG ONTO":
            i209= codecs.open(r'phrsalverbs/TAG ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i209))
            return
        
        if theoption1phrasal== "TOUGHEN UP":
            i210= codecs.open(r'phrsalverbs/TOUGHEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i210))
            return
        
        if theoption1phrasal== "BE ON2":
            i211= codecs.open(r'phrsalverbs/BE ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i211))
            return
        
        if theoption1phrasal== "GIVE IN TO":
            i212= codecs.open(r'phrsalverbs/GIVE IN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i212))
            return
        
        if theoption1phrasal== "TOW AWAY":
            i213= codecs.open(r'phrsalverbs/TOW AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i213))
            return

        if theoption1phrasal== "WEASEL OUT OF":
            i214= codecs.open(r'phrsalverbs/WEASEL OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i214))
            return
        
        if theoption1phrasal== "GIVE IN TO1":
            i215= codecs.open(r'phrsalverbs/GIVE IN TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i215))
            return
        
        if theoption1phrasal== "TOY AROUND WITH":
            i216= codecs.open(r'phrsalverbs/TOY AROUND WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i216))
            return
        
        if theoption1phrasal== "WEED OUT":
            i217= codecs.open(r'phrsalverbs/WEED OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i217))
            return

        if theoption1phrasal== "GIVE IT TO":
            i218= codecs.open(r'phrsalverbs/GIVE IT TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i218))
            return
        
        if theoption1phrasal== "TOY AT":
            i219= codecs.open(r'phrsalverbs/TOY AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i219))
            return
        
        if theoption1phrasal== "WEIGH DOWN ON":
            i220= codecs.open(r'phrsalverbs/WEIGH DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i220))
            return
        
        if theoption1phrasal== "GIVE IT UP FOR":
            i221= codecs.open(r'phrsalverbs/GIVE IT UP FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i221))
            return
        
        if theoption1phrasal== "LEAP OUT AT":
            i222= codecs.open(r'phrsalverbs/LEAP OUT AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i222))
            return
        
        if theoption1phrasal== "TOY OVER":
            i223= codecs.open(r'phrsalverbs/TOY OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i223))
            return
        
        if theoption1phrasal== "WEAR DOWN":
            i224= codecs.open(r'phrsalverbs/WEAR DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i224))
            return

        if theoption1phrasal== "GIVE IT UP TO":
            i225= codecs.open(r'phrsalverbs/GIVE IT UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i225))
            return
        
        if theoption1phrasal== "TOY WITH":
            i226= codecs.open(r'phrsalverbs/TOY WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i226))
            return
        
        if theoption1phrasal== "WEAR OFF":
            i227= codecs.open(r'phrsalverbs/WEAR OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i227))
            return
        
        if theoption1phrasal== "GIVE OF":
            i228= codecs.open(r'phrsalverbs/GIVE OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i228))
            return
        
        if theoption1phrasal== "TOY WITH1":
            i229= codecs.open(r'phrsalverbs/TOY WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i229))
            return
        
        if theoption1phrasal== "WEAR OUT":
            i230= codecs.open(r'phrsalverbs/WEAR OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i230))
            return
        
        if theoption1phrasal== "GIVE OFF":
            i231= codecs.open(r'phrsalverbs/GIVE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i231))
            return
        
        if theoption1phrasal== "TOY WITH2":
            i232= codecs.open(r'phrsalverbs/TOY WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i232))
            return
        
        if theoption1phrasal== "BEAR UP":
            i233= codecs.open(r'phrsalverbs/BEAR UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i233))
            return
        
        if theoption1phrasal== "WEASEL OUT":
            i234= codecs.open(r'phrsalverbs/WEASEL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i234))
            return
        
        if theoption1phrasal== "GIVE OFF1":
            i235= codecs.open(r'phrsalverbs/GIVE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i235))
            return
        
        if theoption1phrasal== "TRACK DOWN":
            i236= codecs.open(r'phrsalverbs/TRACK DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i236))
            return
        
        if theoption1phrasal== "WAVE OFF":
            i237= codecs.open(r'phrsalverbs/WAVE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i237))
            return
        
        if theoption1phrasal== "GIVE OFF2":
            i238= codecs.open(r'phrsalverbs/GIVE OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i238))
            return
        
        if theoption1phrasal== "TRADE DOWN":
            i239= codecs.open(r'phrsalverbs/TRADE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i239))
            return
        
        if theoption1phrasal== "WAVE ON":
            i240= codecs.open(r'phrsalverbs/WAVE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i240))
            return
        
        if theoption1phrasal== "GIVE OFF3":
            i241= codecs.open(r'phrsalverbs/GIVE OFF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i241))
            return
        
        if theoption1phrasal== "TRADE IN":
            i242= codecs.open(r'phrsalverbs/TRADE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i242))
            return
        
        if theoption1phrasal== "WEAN OFF":
            i243= codecs.open(r'phrsalverbs/WEAN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i243))
            return
        
        if theoption1phrasal== "LEAP UPON":
            i244= codecs.open(r'phrsalverbs/LEAP UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i244))
            return
        
        if theoption1phrasal== "GIVE ONTO":
            i245= codecs.open(r'phrsalverbs/GIVE ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i245))
            return
        
        if theoption1phrasal== "TRADE IN1":
            i246= codecs.open(r'phrsalverbs/TRADE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i246))
            return
        
        if theoption1phrasal== "WEAR AWAY":
            i247= codecs.open(r'phrsalverbs/WEAR AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i247))
            return
        
        if theoption1phrasal== "GIVE OUT":
            i248= codecs.open(r'phrsalverbs/GIVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i248))
            return
        
        if theoption1phrasal== "TRADE OFF":
            i249= codecs.open(r'phrsalverbs/TRADE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i249))
            return
        
        if theoption1phrasal== "WEAN OFF1":
            i250= codecs.open(r'phrsalverbs/WEAN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(i250))
            return









        if theoption1phrasal== "WATCH OVER":
            j1= codecs.open(r'phrsalverbs/WATCH OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j1))
            return
        
        if theoption1phrasal== "GIVE OUT1":
            j2= codecs.open(r'phrsalverbs/GIVE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j2))
            return
        
        if theoption1phrasal== "TRADE OFF1":
            j3= codecs.open(r'phrsalverbs/TRADE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j3))
            return
        
        if theoption1phrasal== "WATER DOWN":
            j4= codecs.open(r'phrsalverbs/WATER DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j4))
            return
        
        if theoption1phrasal== "GIVE OUT2":
            j5= codecs.open(r'phrsalverbs/GIVE OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j5))
            return
        
        if theoption1phrasal== "BACK OUT OF1":
            j6= codecs.open(r'phrsalverbs/BACK OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j6))
            return
        
        if theoption1phrasal== "BE IN":
            j7= codecs.open(r'phrsalverbs/BE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j7))
            return
        
        if theoption1phrasal== "TRADE ON":
            j8= codecs.open(r'phrsalverbs/TRADE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j8))
            return
        
        if theoption1phrasal== "WAVE ASIDE":
            j9= codecs.open(r'phrsalverbs/WAVE ASIDE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j9))
            return
        
        if theoption1phrasal== "GIVE OUT3":
            j10= codecs.open(r'phrsalverbs/GIVE OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j10))
            return
        
        if theoption1phrasal== "TRADE UP":
            j11= codecs.open(r'phrsalverbs/TRADE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j11))
            return
        
        if theoption1phrasal== "WAVE DOWN":
            j12= codecs.open(r'phrsalverbs/WAVE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j12))
            return
        
        if theoption1phrasal== "GIVE OUT4":
            j13= codecs.open(r'phrsalverbs/GIVE OUT4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j13))
            return
        
        if theoption1phrasal== "TRADE UP1":
            j14= codecs.open(r'phrsalverbs/TRADE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j14))
            return
        
        if theoption1phrasal== "WASTE AWAY":
            j15= codecs.open(r'phrsalverbs/WASTE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j15))
            return
        
        if theoption1phrasal== "GIVE OUT5":
            j16= codecs.open(r'phrsalverbs/GIVE OUT5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j16))
            return
        
        if theoption1phrasal== "TRADE UPON":
            j17= codecs.open(r'phrsalverbs/TRADE UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j17))
            return
        
        if theoption1phrasal== "LEAVE ON":
            j18= codecs.open(r'phrsalverbs/LEAVE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j18))
            return
        
        if theoption1phrasal== "WATCH OUT":
            j19= codecs.open(r'phrsalverbs/WATCH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j19))
            return
        
        if theoption1phrasal== "GIVE OUT6":
            j20= codecs.open(r'phrsalverbs/GIVE OUT6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j20))
            return

        if theoption1phrasal== "TRAIN UP":
            j21= codecs.open(r'phrsalverbs/TRAIN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j21))
            return


        if theoption1phrasal== "WATCH OUT FOR":
            j22= codecs.open(r'phrsalverbs/WATCH OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j22))
            return
        
        if theoption1phrasal== "GIVE OUT7":
            j23= codecs.open(r'phrsalverbs/GIVE OUT7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j23))
            return
        
        if theoption1phrasal== "TRICKLE DOWN":
            j24= codecs.open(r'phrsalverbs/TRICKLE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j24))
            return
        
        if theoption1phrasal== "WASH UP":
            j25= codecs.open(r'phrsalverbs/WASH UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j25))
            return
        
        if theoption1phrasal== "GIVE OUT8":
            j26= codecs.open(r'phrsalverbs/GIVE OUT8.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j26))
            return
        
        if theoption1phrasal== "TRICKLE UP":
            j27= codecs.open(r'phrsalverbs/TRICKLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j27))
            return
        
        if theoption1phrasal== "WASH UP1":
            j28= codecs.open(r'phrsalverbs/WASH UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j28))
            return
        
        if theoption1phrasal== "BE OFF":
            j29= codecs.open(r'phrsalverbs/BE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j29))
            return
        
        if theoption1phrasal== "GIVE OUT TO":
            j30= codecs.open(r'phrsalverbs/GIVE OUT TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j30))
            return
        
        if theoption1phrasal== "TRIGGER OFF":
            j31= codecs.open(r'phrsalverbs/TRIGGER OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j31))
            
        
        if theoption1phrasal== "WASH UP2":
            j32= codecs.open(r'phrsalverbs/WASH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j32))
            
        
        if theoption1phrasal== "GIVE OVER":
            j33= codecs.open(r'phrsalverbs/GIVE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j33))
            
        
        if theoption1phrasal== "TRIGGER OFF1":
            j34= codecs.open(r'phrsalverbs/TRIGGER OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j34))
            
        
        if theoption1phrasal== "WASH AWAY":
            j35= codecs.open(r'phrsalverbs/WASH AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j35))
            
        
        if theoption1phrasal== "GIVE OVER1":
            j36= codecs.open(r'phrsalverbs/GIVE OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j36))
           
        
        if theoption1phrasal== "TRIP OUT":
            j37= codecs.open(r'phrsalverbs/TRIP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j37))
           
        
        if theoption1phrasal== "WASH OVER":
            j38= codecs.open(r'phrsalverbs/WASH OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j38))
            

        if theoption1phrasal== "GIVE OVER2":
            j39= codecs.open(r'phrsalverbs/GIVE OVER2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j39))
            
        
        if theoption1phrasal== "LEAVE OUT":
            j40= codecs.open(r'phrsalverbs/LEAVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j40))


        if theoption1phrasal== "TRIP OVER":
            j41= codecs.open(r'phrsalverbs/TRIP OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j41)) 

        if theoption1phrasal== "WASH OUT":
            j42= codecs.open(r'phrsalverbs/WASH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j42))

        if theoption1phrasal== "GIVE OVER TO":
            j43= codecs.open(r'phrsalverbs/GIVE OVER TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j43))

        if theoption1phrasal== "TRIP OVER1":
            j44= codecs.open(r'phrsalverbs/TRIP OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j44))

        if theoption1phrasal== "WASH DOWN":
            j45= codecs.open(r'phrsalverbs/WASH DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j45))

        if theoption1phrasal== "GIVE OVER TO1":
            j46= codecs.open(r'phrsalverbs/GIVE OVER TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j46))

        if theoption1phrasal== "TRIP UP":
            j47= codecs.open(r'phrsalverbs/TRIP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j47))

        if theoption1phrasal== "WARD OFF":
            j48= codecs.open(r'phrsalverbs/WARD OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j48))

        if theoption1phrasal== "GIVE OVER!":
            j49= codecs.open(r'phrsalverbs/GIVE OVER!.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j49))

        if theoption1phrasal== "TROT OFF":
            j50= codecs.open(r'phrsalverbs/TROT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j50))

        if theoption1phrasal== "BE IN ON":
            j51= codecs.open(r'phrsalverbs/BE IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j51))

        if theoption1phrasal== "WARM UP":
            j52= codecs.open(r'phrsalverbs/WARM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j52))

        if theoption1phrasal== "GIVE UP":
            j53= codecs.open(r'phrsalverbs/GIVE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j53))

        if theoption1phrasal== "TROT OFF TO":
            j54= codecs.open(r'phrsalverbs/TROT OFF TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j54))

        if theoption1phrasal== "WARM UP1":
            j55= codecs.open(r'phrsalverbs/WARM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j55))

        if theoption1phrasal== "GIVE UP1":
            j56= codecs.open(r'phrsalverbs/GIVE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j56))

        if theoption1phrasal== "TROT OUT":
            j57= codecs.open(r'phrsalverbs/TROT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j57))

        if theoption1phrasal== "WARM UP2":
            j58= codecs.open(r'phrsalverbs/WARM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j58))

        if theoption1phrasal== "GIVE UP2":
            j59= codecs.open(r'phrsalverbs/GIVE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j59))

        if theoption1phrasal== "TRUDGE THROUGH":
            j60= codecs.open(r'phrsalverbs/TRUDGE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j60))


        if theoption1phrasal== "WANT OUT":
            j61= codecs.open(r'phrsalverbs/WANT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j61))

        if theoption1phrasal== "COME FROM":
            j62= codecs.open(r'phrsalverbs/COME FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j62))

        if theoption1phrasal== "GIVE UP3":
            j63= codecs.open(r'phrsalverbs/GIVE UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j63))

        if theoption1phrasal== "TRUMP UP":
            j64= codecs.open(r'phrsalverbs/TRUMP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j64))

        if theoption1phrasal== "WANDER OFF":
            j65= codecs.open(r'phrsalverbs/WANDER OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j65))

        if theoption1phrasal== "GIVE UP4":
            j66= codecs.open(r'phrsalverbs/GIVE UP4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j66))

        if theoption1phrasal== "TRY BACK":
            j67= codecs.open(r'phrsalverbs/TRY BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j67))

        if theoption1phrasal== "WANDER OFF1":
            j68= codecs.open(r'phrsalverbs/WANDER OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j68))

        if theoption1phrasal== "GIVE UP5":
            j69= codecs.open(r'phrsalverbs/GIVE UP5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j69))

        if theoption1phrasal== "TRY FOR":
            j70= codecs.open(r'phrsalverbs/TRY FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j70))

        if theoption1phrasal== "WALK OUT ON":
            j71= codecs.open(r'phrsalverbs/WALK OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j71))

        if theoption1phrasal== "GIVE UP6":
            j72= codecs.open(r'phrsalverbs/GIVE UP6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j72))

        if theoption1phrasal== "LET DOWN":
            j73= codecs.open(r'phrsalverbs/LET DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j73))

        if theoption1phrasal== "TRY IT ON":
            j74= codecs.open(r'phrsalverbs/TRY IT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j74))

        if theoption1phrasal== "WALK THROUGH":
            j75= codecs.open(r'phrsalverbs/WALK THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j75))

        if theoption1phrasal== "GIVE UP ON":
            j76= codecs.open(r'phrsalverbs/GIVE UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j76))

        if theoption1phrasal== "TRY IT ON1":
            j77= codecs.open(r'phrsalverbs/TRY IT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j77))

        if theoption1phrasal== "WALK UP":
            j78= codecs.open(r'phrsalverbs/WALK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j78))


        if theoption1phrasal== "GIVE UP ON1":
            j79= codecs.open(r'phrsalverbs/GIVE UP ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j79))

        if theoption1phrasal== "TRY ON":
            j80= codecs.open(r'phrsalverbs/TRY ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j80))

        if theoption1phrasal== "WALTZ THROUGH":
            j81= codecs.open(r'phrsalverbs/WALTZ THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j81))

        if theoption1phrasal== "GIVE UP TO":
            j82= codecs.open(r'phrsalverbs/GIVE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j82))

        if theoption1phrasal== "TRY OUT FOR":
            j83= codecs.open(r'phrsalverbs/TRY OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j83))

        if theoption1phrasal== "BE IN1":
            j84= codecs.open(r'phrsalverbs/BE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j84))

        if theoption1phrasal== "WALK OFF WITH":
            j85= codecs.open(r'phrsalverbs/WALK OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j85))

        if theoption1phrasal== "GIVE WAY":
            j86= codecs.open(r'phrsalverbs/GIVE WAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j86))

        if theoption1phrasal== "TRY OUT":
            j87= codecs.open(r'phrsalverbs/TRY OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j87))

        if theoption1phrasal== "WALK ON":
            j88= codecs.open(r'phrsalverbs/WALK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j88))

        if theoption1phrasal== "GIVE WAY1":
            j89= codecs.open(r'phrsalverbs/GIVE WAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j89))

        if theoption1phrasal== "TRY OUT1":
            j90= codecs.open(r'phrsalverbs/TRY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j90))

        if theoption1phrasal== "WALK OUT":
            j91= codecs.open(r'phrsalverbs/WALK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j91))

        if theoption1phrasal== "GIVE WAY TO":
            j92= codecs.open(r'phrsalverbs/GIVE WAY TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j92))

        if theoption1phrasal== "TUCK AWAY":
            j93= codecs.open(r'phrsalverbs/TUCK AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j93))

        if theoption1phrasal== "WALK OUT1":
            j94= codecs.open(r'phrsalverbs/WALK OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j94))

        if theoption1phrasal== "BE INTO":
            j95= codecs.open(r'phrsalverbs/BE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j95))

        if theoption1phrasal== "GIVE WAY TO1":
            j96= codecs.open(r'phrsalverbs/GIVE WAY TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j96))

        if theoption1phrasal== "TUCK AWAY1":
            j97= codecs.open(r'phrsalverbs/TUCK AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j97))

        if theoption1phrasal== "WALK INTO":
            j98= codecs.open(r'phrsalverbs/WALK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j98))

        if theoption1phrasal== "GIVE WAY TO2":
            j99= codecs.open(r'phrsalverbs/GIVE WAY TO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j99))

        if theoption1phrasal== "TUCK IN":
            j100= codecs.open(r'phrsalverbs/TUCK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j100))

        if theoption1phrasal== "WALK INTO1":
            j101= codecs.open(r'phrsalverbs/WALK INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j101))

        if theoption1phrasal== "GIVE WAY TO3":
            j102= codecs.open(r'phrsalverbs/GIVE WAY TO3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j102))

        if theoption1phrasal== "TUCK IN1":
            j103= codecs.open(r'phrsalverbs/TUCK IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j103))

        if theoption1phrasal== "WALK OFF":
            j104= codecs.open(r'phrsalverbs/WALK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j104))

        if theoption1phrasal== "GIVE WAY TO4":
            j105= codecs.open(r'phrsalverbs/GIVE WAY TO4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j105))

        if theoption1phrasal== "BE NOT ON":
            j106= codecs.open(r'phrsalverbs/BE NOT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j106))

        if theoption1phrasal== "TUCK IN2":
            j107= codecs.open(r'phrsalverbs/TUCK IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j107))

        if theoption1phrasal== "WALK OFF WITH1":
            j108= codecs.open(r'phrsalverbs/WALK OFF WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j108))

        if theoption1phrasal== "GIVE YOURSELF UP":
            j109= codecs.open(r'phrsalverbs/GIVE YOURSELF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j109))

        if theoption1phrasal== "TUCK INTO":
            j110= codecs.open(r'phrsalverbs/TUCK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j110))

        if theoption1phrasal== "WALK AWAY WITH":
            j111= codecs.open(r'phrsalverbs/WALK AWAY WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j111))

        if theoption1phrasal== "GIVE YOURSELF UP TO":
            j112= codecs.open(r'phrsalverbs/GIVE YOURSELF UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j112))

        if theoption1phrasal== "TUCK UP":
            j113= codecs.open(r'phrsalverbs/TUCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j113))

        if theoption1phrasal== "WALK BACK":
            j114= codecs.open(r'phrsalverbs/WALK BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j114))

        if theoption1phrasal== "GLOSS OVER":
            j115= codecs.open(r'phrsalverbs/GLOSS OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j115))

        if theoption1phrasal== "TUNE IN":
            j116= codecs.open(r'phrsalverbs/TUNE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j116))

        if theoption1phrasal== "JERK AROUND":
            j117= codecs.open(r'phrsalverbs/JERK AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j117))

        if theoption1phrasal== "BE OFF1":
            j118= codecs.open(r'phrsalverbs/BE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j118))

        if theoption1phrasal== "WALK BACK FROM":
            j119= codecs.open(r'phrsalverbs/WALK BACK FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j119))

        if theoption1phrasal== "GNAW AT":
            j120= codecs.open(r'phrsalverbs/GNAW AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j120))

        if theoption1phrasal== "TUNE IN TO":
            j121= codecs.open(r'phrsalverbs/TUNE IN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j121))

        if theoption1phrasal== "WALK IN ON":
            j122= codecs.open(r'phrsalverbs/WALK IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j122))

        if theoption1phrasal== "GNAW AT1":
            j123= codecs.open(r'phrsalverbs/GNAW AT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j123))

        if theoption1phrasal== "TUNE OUT":
            j124= codecs.open(r'phrsalverbs/TUNE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j124))

        if theoption1phrasal== "WAIT UPON":
            j125= codecs.open(r'phrsalverbs/WAIT UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j125))

        if theoption1phrasal== "GNAW AWAY AT":
            j126= codecs.open(r'phrsalverbs/GNAW AT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j126))

        if theoption1phrasal== "TUNE UP":
            j127= codecs.open(r'phrsalverbs/TUNE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j127))

        if theoption1phrasal== "WAIT UPON1":
            j128= codecs.open(r'phrsalverbs/WAIT UPON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j128))

        if theoption1phrasal== "BE ON3":
            j129= codecs.open(r'phrsalverbs/BE ON3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j129))

        if theoption1phrasal== "GOOF AROUND":
            j130= codecs.open(r'phrsalverbs/GOOF AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j130))

        if theoption1phrasal== "TUNE UP1":
            j131= codecs.open(r'phrsalverbs/TUNE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j131))

        if theoption1phrasal== "WAKE UP":
            j132= codecs.open(r'phrsalverbs/WAKE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j132))

        if theoption1phrasal== "GOOF OFF":
            j133= codecs.open(r'phrsalverbs/GOOF OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j133))

        if theoption1phrasal== "TURF OUT":
            j134= codecs.open(r'phrsalverbs/TURF OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j134))

        if theoption1phrasal== "WALK AWAY FROM":
            j135= codecs.open(r'phrsalverbs/WALK AWAY FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j135))

        if theoption1phrasal== "GOOF ON":
            j136= codecs.open(r'phrsalverbs/GOOF ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j136))

        if theoption1phrasal== "TURF OUT1":
            j137= codecs.open(r'phrsalverbs/TURF OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j137))

        if theoption1phrasal== "WAIT ON":
            j138= codecs.open(r'phrsalverbs/WAIT ON3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j138))

        if theoption1phrasal== "GOOF UP":
            j139= codecs.open(r'phrsalverbs/GOOF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j139))

        if theoption1phrasal== "BEAR UP UNDER":
            j140= codecs.open(r'phrsalverbs/BEAR UP UNDER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j140))

        if theoption1phrasal== "TYPE IN":
            j141= codecs.open(r'phrsalverbs/TYPE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j141))

        if theoption1phrasal== "WAIT OUT":
            j142= codecs.open(r'phrsalverbs/WAIT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j142))

        if theoption1phrasal== "GO ABOUT":
            j143= codecs.open(r'phrsalverbs/GO ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j143))

        if theoption1phrasal== "TYPE OUT":
            j144= codecs.open(r'phrsalverbs/TYPE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j144))

        if theoption1phrasal== "WAIT UP":
            j145= codecs.open(r'phrsalverbs/WAIT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j145))

        if theoption1phrasal== "GO ABOUT1":
            j146= codecs.open(r'phrsalverbs/GO ABOUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j146))

        if theoption1phrasal== "TYPE UP":
            j147= codecs.open(r'phrsalverbs/TYPE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j147))

        if theoption1phrasal== "WAIT UP!":
            j148= codecs.open(r'phrsalverbs/WAIT UP!.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j148))

        if theoption1phrasal== "GO ABOUT2":
            j149= codecs.open(r'phrsalverbs/GO ABOUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j149))

        if theoption1phrasal== "TURN AGAINST":
            j150= codecs.open(r'phrsalverbs/TURN AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j150))

        if theoption1phrasal== "COME FORTH WITH":
            j151= codecs.open(r'phrsalverbs/COME FORTH WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j151))

        if theoption1phrasal== "WAIT IN":
            j152= codecs.open(r'phrsalverbs/WAIT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j152))

        if theoption1phrasal== "GO ABOUT3":
            j153= codecs.open(r'phrsalverbs/GO ABOUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j153))

        if theoption1phrasal== "TURN AROUND":
            j154= codecs.open(r'phrsalverbs/TURN AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j154))

        if theoption1phrasal== "WAIT ON1":
            j155= codecs.open(r'phrsalverbs/WAIT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j155))

        if theoption1phrasal== "GO ACROSS":
            j156= codecs.open(r'phrsalverbs/GO ACROSS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j156))

        if theoption1phrasal== "TURN AROUND1":
            j157= codecs.open(r'phrsalverbs/TURN AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j157))

        if theoption1phrasal== "WAIT ON2":
            j158= codecs.open(r'phrsalverbs/WAIT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j158))

        if theoption1phrasal== "GO AFTER":
            j159= codecs.open(r'phrsalverbs/GO AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j159))

        if theoption1phrasal== "TURN AROUND2":
            j160= codecs.open(r'phrsalverbs/TURN AROUND2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j160))


        if theoption1phrasal== "WAIT ON3":
            j161= codecs.open(r'phrsalverbs/WAIT ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j161))

        if theoption1phrasal== "GO ACROSS1":
            j162= codecs.open(r'phrsalverbs/GO ACROSS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j162))

        if theoption1phrasal== "GO AGAINST":
            j163= codecs.open(r'phrsalverbs/GO AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j163))

        if theoption1phrasal== "TURN AWAY":
            j164= codecs.open(r'phrsalverbs/TURN AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j164))

        if theoption1phrasal== "WADE THROUGH":
            j165= codecs.open(r'phrsalverbs/WADE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j165))

        if theoption1phrasal== "GO AHEAD":
            j166= codecs.open(r'phrsalverbs/GO AHEAD.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j166))

        if theoption1phrasal== "TURN DOWN":
            j167= codecs.open(r'phrsalverbs/TURN DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j167))

        if theoption1phrasal== "WAIT ABOUT":
            j168= codecs.open(r'phrsalverbs/WAIT ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j168))

        if theoption1phrasal== "GO AHEAD WITH":
            j169= codecs.open(r'phrsalverbs/GO AHEAD WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j169))

        if theoption1phrasal== "TURN DOWN1":
            j170= codecs.open(r'phrsalverbs/TURN DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j170))

        if theoption1phrasal== "WAIT AROUND":
            j171= codecs.open(r'phrsalverbs/WAIT AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j171))

        if theoption1phrasal== "GO ALONG WITH":
            j172= codecs.open(r'phrsalverbs/GO ALONG WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j172))

        if theoption1phrasal== "BLAZE AWAY":
            j173= codecs.open(r'phrsalverbs/BLAZE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j173))

        if theoption1phrasal== "TURN DOWN2":
            j174= codecs.open(r'phrsalverbs/TURN DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j174))

        if theoption1phrasal== "WAIT BEHIND":
            j175= codecs.open(r'phrsalverbs/WAIT BEHIND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j175))

        if theoption1phrasal== "GO ALONG WITH1":
            j176= codecs.open(r'phrsalverbs/GO ALONG WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j176))

        if theoption1phrasal== "TURN IN":
            j177= codecs.open(r'phrsalverbs/TURN IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j177))

        if theoption1phrasal== "WADE INTO":
            j178= codecs.open(r'phrsalverbs/WADE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j178))

        if theoption1phrasal== "GO AROUND":
            j179= codecs.open(r'phrsalverbs/GO AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j179))

        if theoption1phrasal== "TURN IN1":
            j180= codecs.open(r'phrsalverbs/TURN IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j180))

        if theoption1phrasal== "WADE IN":
            j181= codecs.open(r'phrsalverbs/WADE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j181))

        if theoption1phrasal== "GO AROUND1":
            j182= codecs.open(r'phrsalverbs/GO AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j182))

        if theoption1phrasal== "TURN INTO":
            j183= codecs.open(r'phrsalverbs/TURN INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j183))

        if theoption1phrasal== "COME FORTH":
            j184= codecs.open(r'phrsalverbs/COME FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j184))

        if theoption1phrasal== "WADE IN1":
            j185= codecs.open(r'phrsalverbs/WADE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j185))

        if theoption1phrasal== "GO AROUND2":
            j186= codecs.open(r'phrsalverbs/GO AROUND2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j186))

        if theoption1phrasal== "TURN OFF":
            j187= codecs.open(r'phrsalverbs/TURN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j187))

        if theoption1phrasal== "VENTURE FORTH":
            j188= codecs.open(r'phrsalverbs/VENTURE FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j188))

        if theoption1phrasal== "GO AT":
            j189= codecs.open(r'phrsalverbs/GO AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j189))

        if theoption1phrasal== "TURN ON":
            j190= codecs.open(r'phrsalverbs/TURN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j190))

        if theoption1phrasal== "VEER ONTO":
            j191= codecs.open(r'phrsalverbs/VEER ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j191))

        if theoption1phrasal== "GO AWAY":
            j192= codecs.open(r'phrsalverbs/GO AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j192))

        if theoption1phrasal== "TURN ON1":
            j193= codecs.open(r'phrsalverbs/TURN ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j193))

        if theoption1phrasal== "VEG OUT":
            j194= codecs.open(r'phrsalverbs/VEG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j194))

        if theoption1phrasal== "LET DOWN1":
            j195= codecs.open(r'phrsalverbs/LET DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j195))

        if theoption1phrasal== "GO BACK":
            j196= codecs.open(r'phrsalverbs/GO BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j196))

        if theoption1phrasal== "TURN ON2":
            j197= codecs.open(r'phrsalverbs/TURN ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j197))

        if theoption1phrasal== "VAMP UP":
            j198= codecs.open(r'phrsalverbs/VAMP UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j198))

        if theoption1phrasal== "GO BACK1":
            j199= codecs.open(r'phrsalverbs/GO BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j199))

        if theoption1phrasal== "TURN OUT":
            j200= codecs.open(r'phrsalverbs/TURN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j200))

        if theoption1phrasal== "VAMP UP1":
            j201= codecs.open(r'phrsalverbs/VAMP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j201))

        if theoption1phrasal== "GO BACK ON":
            j202= codecs.open(r'phrsalverbs/GO BACK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j202))

        if theoption1phrasal== "TURN OUT1":
            j203= codecs.open(r'phrsalverbs/TURN OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j203))

        if theoption1phrasal== "VACUUM UP":
            j204= codecs.open(r'phrsalverbs/VACUUM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j204))

        if theoption1phrasal== "GO BEFORE":
            j205= codecs.open(r'phrsalverbs/GO BEFORE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j205))

        if theoption1phrasal== "BLISS OUT":
            j206= codecs.open(r'phrsalverbs/BLISS OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j206))

        if theoption1phrasal== "TURN OUT2":
            j207= codecs.open(r'phrsalverbs/TURN OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j207))

        if theoption1phrasal== "USHER IN":
            j208= codecs.open(r'phrsalverbs/USHER IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j208))

        if theoption1phrasal== "GO BELOW":
            j209= codecs.open(r'phrsalverbs/GO BELOW.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j209))

        if theoption1phrasal== "TURN OUT3":
            j210= codecs.open(r'phrsalverbs/TURN OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j210))

        if theoption1phrasal== "USHER IN1":
            j211= codecs.open(r'phrsalverbs/USHER IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j211))

        if theoption1phrasal== "GO BY":
            j212= codecs.open(r'phrsalverbs/GO BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j212))

        if theoption1phrasal== "TURN OVER":
            j213= codecs.open(r'phrsalverbs/TURN OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j213))

        if theoption1phrasal== "USE UP":
            j214= codecs.open(r'phrsalverbs/USE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j214))

        if theoption1phrasal== "GO BY1":
            j215= codecs.open(r'phrsalverbs/GO BY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j215))

        if theoption1phrasal== "TURN TO":
            j216= codecs.open(r'phrsalverbs/TURN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j216))

        if theoption1phrasal== "COME DOWN WITH":
            j217= codecs.open(r'phrsalverbs/COME DOWN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j217))

        if theoption1phrasal== "URGE UPON":
            j218= codecs.open(r'phrsalverbs/URGE UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j218))

        if theoption1phrasal== "GO BY2":
            j219= codecs.open(r'phrsalverbs/GO BY2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j219))

        if theoption1phrasal== "TURN TO1":
            j220= codecs.open(r'phrsalverbs/TURN TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j220))

        if theoption1phrasal== "URGE ON":
            j221= codecs.open(r'phrsalverbs/URGE ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j221))

        if theoption1phrasal== "GO DOWN":
            j222= codecs.open(r'phrsalverbs/GO DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j222))

        if theoption1phrasal== "TURN UP":
            j223= codecs.open(r'phrsalverbs/TURN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j223))

        if theoption1phrasal== "URGE ON1":
            j224= codecs.open(r'phrsalverbs/URGE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j224))

        if theoption1phrasal== "GO DOWN1":
            j225= codecs.open(r'phrsalverbs/GO DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j225))

        if theoption1phrasal== "TURN UP":
            j226= codecs.open(r'phrsalverbs/TURN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j226))

        if theoption1phrasal== "WEIGH UP":
            j227= codecs.open(r'phrsalverbs/WEIGH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j227))

        if theoption1phrasal== "COME ACROSS":
            j228= codecs.open(r'phrsalverbs/COME ACROSS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j228))

        if theoption1phrasal== "COUNT TOWARDS":
            j229= codecs.open(r'phrsalverbs/COUNT TOWARDS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j229))

        if theoption1phrasal== "LET IN":
            j230= codecs.open(r'phrsalverbs/LET IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j230))

        if theoption1phrasal== "GO DOWN2":
            j231= codecs.open(r'phrsalverbs/GO DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j231))

        if theoption1phrasal== "WEIGH IN ON":
            j232= codecs.open(r'phrsalverbs/WEIGH IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j232))

        if theoption1phrasal== "WEIRD OFF ON":
            j233= codecs.open(r'phrsalverbs/WEIRD OFF ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j233))

        if theoption1phrasal== "GO DOWN3":
            j234= codecs.open(r'phrsalverbs/GO DOWN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j234))

        if theoption1phrasal== "WEIGH OUT":
            j235= codecs.open(r'phrsalverbs/WEIGH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j235))

        if theoption1phrasal== "WEIRD OUT":
            j236= codecs.open(r'phrsalverbs/WEIRD OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j236))

        if theoption1phrasal== "GO DOWN4":
            j237= codecs.open(r'phrsalverbs/GO DOWN4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j237))

        if theoption1phrasal== "WEIGH ON":
            j238= codecs.open(r'phrsalverbs/WEIGH ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j238))

        if theoption1phrasal== "WELL UP":
            j239= codecs.open(r'phrsalverbs/WELL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j239))

        if theoption1phrasal== "GO DOWN5":
            j240= codecs.open(r'phrsalverbs/GO DOWN5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j240))

        if theoption1phrasal== "BLURT OUT":
            j241= codecs.open(r'phrsalverbs/BLURT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j241))

        if theoption1phrasal== "WHEEL AROUND":
            j242= codecs.open(r'phrsalverbs/WHEEL AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j242))

        if theoption1phrasal== "WHEEL OUT":
            j243= codecs.open(r'phrsalverbs/WHEEL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j243))

        if theoption1phrasal== "GO DOWN6":
            j244= codecs.open(r'phrsalverbs/GO DOWN6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j244))

        if theoption1phrasal== "WELL UP1":
            j245= codecs.open(r'phrsalverbs/WELL UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j245))

        if theoption1phrasal== "WHILE AWAY":
            j246= codecs.open(r'phrsalverbs/WHILE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j246))

        if theoption1phrasal== "GO DOWN7":
            j247= codecs.open(r'phrsalverbs/GO DOWN7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j247))

        if theoption1phrasal== "WHEEL ROUND":
            j248= codecs.open(r'phrsalverbs/WHEEL ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j248))

        if theoption1phrasal== "WELL UP2":
            j249= codecs.open(r'phrsalverbs/WELL UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j249))

        if theoption1phrasal== "GO DOWN8":
            j250= codecs.open(r'phrsalverbs/GO DOWN8.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(j250))

        
        if theoption1phrasal== "WHIP INTO":
            k1= codecs.open(r'phrsalverbs/WHIP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k1))

        if theoption1phrasal== "LET IN ON":
            k2= codecs.open(r'phrsalverbs/LET IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k2))

        if theoption1phrasal== "WIGGLE OUT OF":
            k3= codecs.open(r'phrsalverbs/WIGGLE OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k3))

        if theoption1phrasal== "GO DOWN9":
            k4= codecs.open(r'phrsalverbs/GO DOWN9.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k4))

        if theoption1phrasal== "WHIP OFF":
            k5= codecs.open(r'phrsalverbs/WHIP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k5))

        if theoption1phrasal== "WIGGLE OUT":
            k6= codecs.open(r'phrsalverbs/WIGGLE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k6))

        if theoption1phrasal== "GO DOWN10":
            k7= codecs.open(r'phrsalverbs/GO DOWN10.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k7))

        if theoption1phrasal== "WHIP OFF1":
            k8= codecs.open(r'phrsalverbs/WHIP OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k8))

        if theoption1phrasal== "WIG OUT":
            k9= codecs.open(r'phrsalverbs/WIG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k9))

        if theoption1phrasal== "GO DOWN TO":
            k10= codecs.open(r'phrsalverbs/GO DOWN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k10))

        if theoption1phrasal== "WHIP OUT":
            k11= codecs.open(r'phrsalverbs/WHIP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k11))

        if theoption1phrasal== "WHITE OUT":
            k12= codecs.open(r'phrsalverbs/WHITE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k12))

        if theoption1phrasal== "BLAST OFF":
            k13= codecs.open(r'phrsalverbs/BLAST OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k13))

        if theoption1phrasal== "GO DOWN WITH":
            k14= codecs.open(r'phrsalverbs/GO DOWN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k14))

        if theoption1phrasal== "WHIP OUT OF":
            k15= codecs.open(r'phrsalverbs/WHIP OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k15))

        if theoption1phrasal== "WHISK OFF":
            k16= codecs.open(r'phrsalverbs/WHISK OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k16))

        if theoption1phrasal== "GO DOWN WITH1":
            k17= codecs.open(r'phrsalverbs/GO DOWN WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k17))

        if theoption1phrasal== "WHIP THROUGH":
            k18= codecs.open(r'phrsalverbs/WHIP THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k18))

        if theoption1phrasal== "WHIP UP":
            k19= codecs.open(r'phrsalverbs/WHIP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k19))

        if theoption1phrasal== "GO FOR":
            k20= codecs.open(r'phrsalverbs/GO FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k20))

        if theoption1phrasal== "WHISK OFF1":
            k21= codecs.open(r'phrsalverbs/WHISK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k21))

        if theoption1phrasal== "WHIP UP1":
            k22= codecs.open(r'phrsalverbs/WHIP UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k22))

        if theoption1phrasal== "GO FOR1":
            k23= codecs.open(r'phrsalverbs/GO FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k23))

        if theoption1phrasal== "COME DOWN UPON":
            k23= codecs.open(r'phrsalverbs/COME DOWN UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k23))

        if theoption1phrasal== "WHISK AWAY":
            k24= codecs.open(r'phrsalverbs/WHISK AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k24))

        if theoption1phrasal== "WHIP UP2":
            k25= codecs.open(r'phrsalverbs/WHIP UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k25))

        if theoption1phrasal== "GO FOR2":
            k26= codecs.open(r'phrsalverbs/GO FOR2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k26))

        if theoption1phrasal== "WIN BACK":
            k27= codecs.open(r'phrsalverbs/WIN BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k27))

        if theoption1phrasal== "WIND UP":
            k28= codecs.open(r'phrsalverbs/WIND UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k28))

        if theoption1phrasal== "GO FOR3":
            k29= codecs.open(r'phrsalverbs/GO FOR3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k29))

        if theoption1phrasal== "WIN OUT":
            k30= codecs.open(r'phrsalverbs/WIN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k30))

        if theoption1phrasal== "WIND UP1":
            k31= codecs.open(r'phrsalverbs/WIND UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k31))

        if theoption1phrasal== "GO FOR4":
            k32= codecs.open(r'phrsalverbs/GO FOR4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k32))

        if theoption1phrasal== "WIMP OUT":
            k33= codecs.open(r'phrsalverbs/WIMP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k33))

        if theoption1phrasal== "LET OFF":
            k34= codecs.open(r'phrsalverbs/LET OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k34))

        if theoption1phrasal== "WIND UP2":
            k35= codecs.open(r'phrsalverbs/WIND UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k35))

        if theoption1phrasal== "GO FOR5":
            k36= codecs.open(r'phrsalverbs/GO FOR5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k36))

        if theoption1phrasal== "WIN OVER":
            k37= codecs.open(r'phrsalverbs/WIN OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k37))

        if theoption1phrasal== "WIND ON":
            k38= codecs.open(r'phrsalverbs/WIND ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k38))

        if theoption1phrasal== "GO FOR IT":
            k39= codecs.open(r'phrsalverbs/GO FOR IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k39))

        if theoption1phrasal== "WIN OVER1":
            k40= codecs.open(r'phrsalverbs/WIN OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k40))

        if theoption1phrasal== "WIND DOWN":
            k41= codecs.open(r'phrsalverbs/WIND DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k41))

        if theoption1phrasal== "GO FORTH":
            k42= codecs.open(r'phrsalverbs/GO FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k42))

        if theoption1phrasal== "WIN ROUND":
            k43= codecs.open(r'phrsalverbs/WIN ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k43))

        if theoption1phrasal== "WIND DOWN1":
            k44= codecs.open(r'phrsalverbs/WIND DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k44))

        if theoption1phrasal== "BLARE OUT":
            k45= codecs.open(r'phrsalverbs/BLARE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k45))

        if theoption1phrasal== "GO FORTH1":
            k46= codecs.open(r'phrsalverbs/GO FORTH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k46))

        if theoption1phrasal== "WIN THROUGH":
            k47= codecs.open(r'phrsalverbs/WIN THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k47))

        if theoption1phrasal== "WORK OUT":
            k48= codecs.open(r'phrsalverbs/WORK OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k48))

        if theoption1phrasal== "GO FORWARD":
            k49= codecs.open(r'phrsalverbs/GO FORWARD.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k49))

        if theoption1phrasal== "WORK OUT1":
            k50= codecs.open(r'phrsalverbs/WORK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k50))

        if theoption1phrasal== "WORK ON":
            k51= codecs.open(r'phrsalverbs/WORK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k51))

        if theoption1phrasal== "GO FORWARD1":
            k52= codecs.open(r'phrsalverbs/GO FORWARD1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k52))

        if theoption1phrasal== "WORK OFF":
            k53= codecs.open(r'phrsalverbs/WORK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k53))

        if theoption1phrasal== "WORD UP!":
            k54= codecs.open(r'phrsalverbs/WORD UP!.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k54))

        if theoption1phrasal== "GO IN":
            k55= codecs.open(r'phrsalverbs/GO IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k55))

        if theoption1phrasal== "COME DOWN TO":
            k56= codecs.open(r'phrsalverbs/COME DOWN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k56))

        if theoption1phrasal== "WORD UP":
            k57= codecs.open(r'phrsalverbs/WORD UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k57))

        if theoption1phrasal== "WISE UP":
            k58= codecs.open(r'phrsalverbs/WISE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k58))

        if theoption1phrasal== "GO IN1":
            k59= codecs.open(r'phrsalverbs/GO IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k59))

        if theoption1phrasal== "WIPE UP":
            k60= codecs.open(r'phrsalverbs/WIPE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k60))

        if theoption1phrasal== "WIRE UP":
            k61= codecs.open(r'phrsalverbs/WIRE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k61))

        if theoption1phrasal== "GO IN2":
            k62= codecs.open(r'phrsalverbs/GO IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k62))

        if theoption1phrasal== "WIPE OUT":
            k63= codecs.open(r'phrsalverbs/WIPE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k63))

        if theoption1phrasal== "WINKLE OUT":
            k64= codecs.open(r'phrsalverbs/WINKLE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k64))

        if theoption1phrasal== "GO IN3":
            k65= codecs.open(r'phrsalverbs/GO IN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k65))

        if theoption1phrasal== "WINNOW DOWN":
            k66= codecs.open(r'phrsalverbs/WINNOW DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k66))

        if theoption1phrasal== "LET ON":
            k67= codecs.open(r'phrsalverbs/LET ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k67))

        if theoption1phrasal== "WIPE OUT1":
            k68= codecs.open(r'phrsalverbs/WIPE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k68))

        if theoption1phrasal== "GO IN FOR":
            k69= codecs.open(r'phrsalverbs/GO IN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k69))

        if theoption1phrasal== "WINNOW OUT":
            k70= codecs.open(r'phrsalverbs/WINNOW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k70))

        if theoption1phrasal== "WORK OVER":
            k71= codecs.open(r'phrsalverbs/WORK OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k71))

        if theoption1phrasal== "GO IN FOR1":
            k72= codecs.open(r'phrsalverbs/GO IN FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k72))

        if theoption1phrasal== "WORK OVER1":
            k73= codecs.open(r'phrsalverbs/WORK OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k73))

        if theoption1phrasal== "WRAP AROUND":
            k74= codecs.open(r'phrsalverbs/WRAP AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k74))

        if theoption1phrasal== "GO IN FOR2":
            k75= codecs.open(r'phrsalverbs/GO IN FOR2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k75))

        if theoption1phrasal== "WORK OVER2":
            k76= codecs.open(r'phrsalverbs/WORK OVER2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k76))

        if theoption1phrasal== "WRAP AROUND1":
            k77= codecs.open(r'phrsalverbs/WRAP AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k77))

        if theoption1phrasal== "BLACK OUT":
            k78= codecs.open(r'phrsalverbs/BLACK OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k78))

        if theoption1phrasal== "GO IN FOR3":
            k79= codecs.open(r'phrsalverbs/GO IN FOR3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k79))

        if theoption1phrasal== "WORK THROUGH":
            k80= codecs.open(r'phrsalverbs/WORK THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k80))

        if theoption1phrasal== "WRAP ROUND":
            k81= codecs.open(r'phrsalverbs/WRAP ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k81))

        if theoption1phrasal== "GO IN WITH":
            k82= codecs.open(r'phrsalverbs/GO IN WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k82))

        if theoption1phrasal== "WRAP ROUND1":
            k83= codecs.open(r'phrsalverbs/WRAP ROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k83))

        if theoption1phrasal== "WRIGGLE OUT OF":
            k84= codecs.open(r'phrsalverbs/WRIGGLE OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k84))

        if theoption1phrasal== "GO IN WITH1":
            k85= codecs.open(r'phrsalverbs/GO IN WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k85))

        if theoption1phrasal== "WRAP UP":
            k86= codecs.open(r'phrsalverbs/WRAP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k86))

        if theoption1phrasal== "WRITE DOWN":
            k87= codecs.open(r'phrsalverbs/WRITE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k87))

        if theoption1phrasal== "GO INTO":
            k88= codecs.open(r'phrsalverbs/GO INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k88))

        if theoption1phrasal== "JERK AROUND":
            k89= codecs.open(r'phrsalverbs/JERK AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k89))

        if theoption1phrasal== "COME DOWN ON":
            k90= codecs.open(r'phrsalverbs/COME DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k90))

        if theoption1phrasal== "WRAP UP1":
            k91= codecs.open(r'phrsalverbs/WRAP UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k91))

        if theoption1phrasal== "WRITE IN":
            k92= codecs.open(r'phrsalverbs/WRITE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k92))

        if theoption1phrasal== "GO INTO1":
            k93= codecs.open(r'phrsalverbs/GO INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k93))

        if theoption1phrasal== "WRAP UP2":
            k94= codecs.open(r'phrsalverbs/WRAP UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k94))

        if theoption1phrasal== "WRITE OFF":
            k95 =codecs.open(r'phrsalverbs/WRITE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k95))

        if theoption1phrasal== "GO INTO2":
            k96= codecs.open(r'phrsalverbs/GO INTO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k96))

        if theoption1phrasal== "WRITE UP":
            k97= codecs.open(r'phrsalverbs/WRITE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k97))

        if theoption1phrasal== "YACK ON":
            k98= codecs.open(r'phrsalverbs/YACK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k98))

        if theoption1phrasal== "GO INTO3":
            k99= codecs.open(r'phrsalverbs/GO INTO3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k99))

        if theoption1phrasal== "WRITE OUT":
            k100= codecs.open(r'phrsalverbs/WRITE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k100))


        if theoption1phrasal== "LET OUT":
            k101= codecs.open(r'phrsalverbs/LET OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k101))

        if theoption1phrasal== "YAMMER ON":
            k102= codecs.open(r'phrsalverbs/YAMMER ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k102))

        if theoption1phrasal== "GO INTO4":
            k103= codecs.open(r'phrsalverbs/GO INTO4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k103))

        if theoption1phrasal== "YIELD TO":
            k104= codecs.open(r'phrsalverbs/YIELD TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k104))

        if theoption1phrasal== "ZERO IN ON":
            k105= codecs.open(r'phrsalverbs/ZERO IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k105))

        if theoption1phrasal== "GO IT":
            k106= codecs.open(r'phrsalverbs/GO IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k106))

        if theoption1phrasal== "ZERO IN ON1":
            k107= codecs.open(r'phrsalverbs/ZERO IN ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k107))

        if theoption1phrasal== "ZERO OUT":
            k108= codecs.open(r'phrsalverbs/ZERO OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k108))

        if theoption1phrasal== "GO IT1":
            k109= codecs.open(r'phrsalverbs/GO IT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k109))

        if theoption1phrasal== "ZERO OUT":
            k110= codecs.open(r'phrsalverbs/ZERO OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k110))

        if theoption1phrasal== "GO IT ALONE":
            k111= codecs.open(r'phrsalverbs/GO IT ALONE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k111))

        if theoption1phrasal== "BLACK OUT1":
            k112= codecs.open(r'phrsalverbs/BLACK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k112))

        if theoption1phrasal== "ZIP AROUND":
            k113= codecs.open(r'phrsalverbs/ZIP AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k113))

        if theoption1phrasal== "GO OFF":
            k114= codecs.open(r'phrsalverbs/GO OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k114))

        if theoption1phrasal== "ZIP BY":
            k115= codecs.open(r'phrsalverbs/ZIP BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k115))

        if theoption1phrasal== "ZIP IT":
            k116= codecs.open(r'phrsalverbs/ZIP IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k116))

        if theoption1phrasal== "GO OFF1":
            k117= codecs.open(r'phrsalverbs/GO OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k117))

        if theoption1phrasal== "GO OFF2":
            k118= codecs.open(r'phrsalverbs/GO OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k118))

        if theoption1phrasal== "ZIP UP":
            k119= codecs.open(r'phrsalverbs/ZIP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k119))

        if theoption1phrasal== "GO OFF3":
            k120= codecs.open(r'phrsalverbs/GO OFF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k120))

        if theoption1phrasal== "ZONE IN":
            k121= codecs.open(r'phrsalverbs/ZONE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k121))

        if theoption1phrasal== "GO OFF4":
            k122= codecs.open(r'phrsalverbs/GO OFF4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k122))

        if theoption1phrasal== "COME DOWN":
            k123= codecs.open(r'phrsalverbs/COME DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k123))

        if theoption1phrasal== "ZONE IN ON":
            k124= codecs.open(r'phrsalverbs/ZONE IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k124))

        if theoption1phrasal== "GO OFF5":
            k125= codecs.open(r'phrsalverbs/GO OFF5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k125))

        if theoption1phrasal== "ZONE OUT":
            k126= codecs.open(r'phrsalverbs/ZONE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k126))

        if theoption1phrasal== "GO OFF WITH":
            k127= codecs.open(r'phrsalverbs/GO OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k127))

        if theoption1phrasal== "ZONE OUT1":
            k128= codecs.open(r'phrsalverbs/ZONE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k128))


        if theoption1phrasal== "GO OFF WITH1":
            k129= codecs.open(r'phrsalverbs/GO OFF WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k129))

        if theoption1phrasal== "ZONK OUT":
            k130= codecs.open(r'phrsalverbs/ZONK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k130))

        if theoption1phrasal== "GO ON":
            k131= codecs.open(r'phrsalverbs/GO ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k131))

        if theoption1phrasal== "ZOOM IN":
            k132= codecs.open(r'phrsalverbs/ZOOM IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k132))

        if theoption1phrasal== "GO ON1":
            k133= codecs.open(r'phrsalverbs/GO ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k133))

        if theoption1phrasal== "LET OUT1":
            k134= codecs.open(r'phrsalverbs/LET OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k134))

        if theoption1phrasal== "ZOOM IN ON":
            k135= codecs.open(r'phrsalverbs/ZOOM IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k135))

        if theoption1phrasal== "GO ON2":
            k136= codecs.open(r'phrsalverbs/GO ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k136))

        if theoption1phrasal== "ZOOM OFF":
            k137= codecs.open(r'phrsalverbs/ZOOM OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k137))

        if theoption1phrasal== "GO ON3":
            k138= codecs.open(r'phrsalverbs/GO ON3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k138))

        if theoption1phrasal== "ZOOM OUT":
            k139= codecs.open(r'phrsalverbs/ZOOM OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k139))

        if theoption1phrasal== "GO ON4":
            k140= codecs.open(r'phrsalverbs/GO ON4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k140))

        if theoption1phrasal== "GO ON5":
            k141= codecs.open(r'phrsalverbs/GO ON5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k141))

        if theoption1phrasal== "GO ON6":
            k142= codecs.open(r'phrsalverbs/GO ON6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k142))

        if theoption1phrasal== "GO ON7":
            k143= codecs.open(r'phrsalverbs/GO ON7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k143))

        if theoption1phrasal== "GO ON8":
            k144= codecs.open(r'phrsalverbs/GO ON ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k144))

        if theoption1phrasal== "BITCH UP":
            k145= codecs.open(r'phrsalverbs/BITCH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k145))

        if theoption1phrasal== "GO ON AT":
            k146= codecs.open(r'phrsalverbs/GO ON AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k146))

        if theoption1phrasal== "GO ON TO":
            k147= codecs.open(r'phrsalverbs/GO ON TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k147))

        if theoption1phrasal== "GO ON WITH":
            k148= codecs.open(r'phrsalverbs/GO ON WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k148))

        if theoption1phrasal== "GO ON9":
            k149= codecs.open(r'phrsalverbs/GO ON8.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k149))

        if theoption1phrasal== "GO OUT":
            k150= codecs.open(r'phrsalverbs/GO OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k150))

        if theoption1phrasal== "GO OUT1":
            k151= codecs.open(r'phrsalverbs/GO OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k151))

        if theoption1phrasal== "GO OUT2":
            k152= codecs.open(r'phrsalverbs/GO OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k152))

        if theoption1phrasal== "GO OUT3":
            k153= codecs.open(r'phrsalverbs/GO OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k153))

        if theoption1phrasal== "GO OUT4":
            k154= codecs.open(r'phrsalverbs/GO OUT4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k154))

        if theoption1phrasal== "GO OUT5":
            k155= codecs.open(r'phrsalverbs/GO OUT5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k155))

        if theoption1phrasal== "COME DOWN":
            k156= codecs.open(r'phrsalverbs/COME DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k156))

        if theoption1phrasal== "GO OUT6":
            k157= codecs.open(r'phrsalverbs/GO OUT6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k157))

        if theoption1phrasal== "GO OUT7":
            k158= codecs.open(r'phrsalverbs/GO OUT7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k158))

        if theoption1phrasal== "GO OUT8":
            k159= codecs.open(r'phrsalverbs/GO OUT8.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k159))

        if theoption1phrasal== "GO OUT FOR":
            k160= codecs.open(r'phrsalverbs/GO OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k160))

        if theoption1phrasal== "GO OUT TO":
            k161= codecs.open(r'phrsalverbs/GO OUT TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k161))

        if theoption1phrasal== "GO OUT WITH":
            k162= codecs.open(r'phrsalverbs/GO OUT WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k162))

        if theoption1phrasal== "GO OVER":
            k163= codecs.open(r'phrsalverbs/GO OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k163))

        if theoption1phrasal== "GO OVER1":
            k164= codecs.open(r'phrsalverbs/GO OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k164))

        if theoption1phrasal== "GO OVER2":
            k165= codecs.open(r'phrsalverbs/GO OVER2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k165))

        if theoption1phrasal== "GO OVER3":
            k166= codecs.open(r'phrsalverbs/GO OVER3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k166))

        if theoption1phrasal== "LET OUT2":
            k167= codecs.open(r'phrsalverbs/LET OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k167))

        if theoption1phrasal== "GO OVER4":
            k168= codecs.open(r'phrsalverbs/GO OVER4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k168))

        if theoption1phrasal== "GO OVER TO":
            k169= codecs.open(r'phrsalverbs/GO OVER TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k169))

        if theoption1phrasal== "GO OVER TO1":
            k170= codecs.open(r'phrsalverbs/GO OVER TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k170))


        if theoption1phrasal== "GO OVER TO2":
            k171= codecs.open(r'phrsalverbs/GO OVER TO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k171))

        if theoption1phrasal== "GO PAST":
            k172= codecs.open(r'phrsalverbs/GO PAST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k172))

        if theoption1phrasal== "GO ROUND":
            k173= codecs.open(r'phrsalverbs/GO ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k173))

        if theoption1phrasal== "GO ROUND1":
            k174= codecs.open(r'phrsalverbs/GO ROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k174))

        if theoption1phrasal== "GO ROUND2":
            k175= codecs.open(r'phrsalverbs/GO ROUND2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k175))

        if theoption1phrasal== "GO THROUGH":
            k176= codecs.open(r'phrsalverbs/GO THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k176))

        if theoption1phrasal== "GO THROUGH1":
            k177= codecs.open(r'phrsalverbs/GO THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k177))

        if theoption1phrasal== "BIN OFF":
            k178= codecs.open(r'phrsalverbs/BIN OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k178))

        if theoption1phrasal== "GO THROUGH2":
            k179= codecs.open(r'phrsalverbs/GO THROUGH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k179))

        if theoption1phrasal== "GO THROUGH3":
            k180= codecs.open(r'phrsalverbs/GO THROUGH3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k180))

        if theoption1phrasal== "GO THROUGH4":
            k181= codecs.open(r'phrsalverbs/GO THROUGH4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k181))

        if theoption1phrasal== "GO THROUGH5":
            k182= codecs.open(r'phrsalverbs/GO THROUGH5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k182))

        if theoption1phrasal== "GO THROUGH6":
            k183= codecs.open(r'phrsalverbs/GO THROUGH6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k183))

        if theoption1phrasal== "GO THROUGH7":
            k184= codecs.open(r'phrsalverbs/GO THROUGH7.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k184))

        if theoption1phrasal== "GO THROUGH8":
            k185= codecs.open(r'phrsalverbs/GO THROUGH8.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k185))

        if theoption1phrasal== "GO THROUGH WITH":
            k186= codecs.open(r'phrsalverbs/GO THROUGH WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k186))

        if theoption1phrasal== "GO TO":
            k187= codecs.open(r'phrsalverbs/GO TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k187))

        if theoption1phrasal== "GO TOGETHER":
            k188= codecs.open(r'phrsalverbs/GO TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k188))

        if theoption1phrasal== "LEVEL DOWN":
            k189= codecs.open(r'phrsalverbs/LEVEL DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k189))

        if theoption1phrasal== "GO TOWARDS":
            k190= codecs.open(r'phrsalverbs/GO TOWARDS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k190))

        if theoption1phrasal== "GO UNDER":
            k191= codecs.open(r'phrsalverbs/GO UNDER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k191))

        if theoption1phrasal== "GO UNDER1":
            k192= codecs.open(r'phrsalverbs/GO UNDER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k192))

        if theoption1phrasal== "GO UNDER2":
            k193= codecs.open(r'phrsalverbs/GO UNDER2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k193))

        if theoption1phrasal== "GO UP":
            k194= codecs.open(r'phrsalverbs/GO UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k194))

        if theoption1phrasal== "GO UP1":
            k195= codecs.open(r'phrsalverbs/GO UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k195))

        if theoption1phrasal== "GO UP2":
            k196= codecs.open(r'phrsalverbs/GO UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k196))

        if theoption1phrasal== "GO UP3":
            k197= codecs.open(r'phrsalverbs/GO UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k197))

        if theoption1phrasal== "GO UP4":
            k198= codecs.open(r'phrsalverbs/GO UP4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k198))

        if theoption1phrasal== "GO UP TO":
            k199= codecs.open(r'phrsalverbs/GO UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k199))

        if theoption1phrasal== "BACK UP1":
            k200= codecs.open(r'phrsalverbs/BACK UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k200))



        if theoption1phrasal== "COME BY":
            k201= codecs.open(r'phrsalverbs/COME BY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k201))

        if theoption1phrasal== "GO UP TO1":
            k202= codecs.open(r'phrsalverbs/GO UP TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k202))

        if theoption1phrasal== "GO UP TO2":
            k203= codecs.open(r'phrsalverbs/GO UP TO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k203))

        if theoption1phrasal== "GO WITH":
            k204= codecs.open(r'phrsalverbs/GO WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k204))

        if theoption1phrasal== "GO WITH1":
            k205= codecs.open(r'phrsalverbs/GO WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k205))


        if theoption1phrasal== "GO WITH2":
            k206= codecs.open(r'phrsalverbs/GO WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k206))

        if theoption1phrasal== "GO WITH3":
            k207= codecs.open(r'phrsalverbs/GO WITH3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k207))

        if theoption1phrasal== "GO WITHOUT":
            k208= codecs.open(r'phrsalverbs/GO WITHOUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k208))

        if theoption1phrasal== "GRASP AT":
            k209= codecs.open(r'phrsalverbs/GRASP AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k209))

        if theoption1phrasal== "GRASP AT1":
            k210= codecs.open(r'phrsalverbs/GRASP AT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k210))

        if theoption1phrasal== "GRASS ON":
            k211= codecs.open(r'phrsalverbs/GRASS ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k211))

        if theoption1phrasal== "LEVEL OFF":
            k212= codecs.open(r'phrsalverbs/LEVEL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k212))

        if theoption1phrasal== "GRASS UP":
            k213= codecs.open(r'phrsalverbs/GRASS UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k213))

        if theoption1phrasal== "GREY OUT":
            k214= codecs.open(r'phrsalverbs/GREY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k214))

        if theoption1phrasal== "GUN FOR":
            k215= codecs.open(r'phrsalverbs/GUN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k215))

        if theoption1phrasal== "GUSSY UP":
            k216= codecs.open(r'phrsalverbs/GUSSY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k216))

        if theoption1phrasal== "GRIND AWAY":
            k217= codecs.open(r'phrsalverbs/GRIND AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k217))

        if theoption1phrasal== "GRIND DOWN":
            k218= codecs.open(r'phrsalverbs/GRIND DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k218))

        if theoption1phrasal== "GRIND INTO":
            k219= codecs.open(r'phrsalverbs/GRIND INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k219))

        if theoption1phrasal== "GRIND ON":
            k220= codecs.open(r'phrsalverbs/GRIND ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k220))

        if theoption1phrasal== "GRIND ON1":
            k221= codecs.open(r'phrsalverbs/GRIND ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k221))

        if theoption1phrasal== "GRIND OUT":
            k222= codecs.open(r'phrsalverbs/GRIND OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k222))

        if theoption1phrasal== "BIN OFF1":
            k223= codecs.open(r'phrsalverbs/BIN OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k223))

        if theoption1phrasal== "GRIND UP":
            k224= codecs.open(r'phrsalverbs/GRIND UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k224))

        if theoption1phrasal== "GROW APART":
            k225= codecs.open(r'phrsalverbs/GROW APART.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k225))

        if theoption1phrasal== "GROW AWAY FROM":
            k226= codecs.open(r'phrsalverbs/GROW AWAY FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k226))

        if theoption1phrasal== "GROW BACK":
            k227= codecs.open(r'phrsalverbs/GROW BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k227))

        if theoption1phrasal== "GROW FROM":
            k228= codecs.open(r'phrsalverbs/GROW FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k228))

        if theoption1phrasal== "GROW INTO":
            k229= codecs.open(r'phrsalverbs/GROW INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k229))

        if theoption1phrasal== "GROW INTO1":
            k230= codecs.open(r'phrsalverbs/GROW INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k230))

        if theoption1phrasal== "GROW INTO2":
            k231= codecs.open(r'phrsalverbs/GROW INTO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k231))

        if theoption1phrasal== "GROW ON":
            k232= codecs.open(r'phrsalverbs/GROW ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k232))

        if theoption1phrasal== "GROW ON1":
            k233= codecs.open(r'phrsalverbs/GROW ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k233))

        if theoption1phrasal== "LEVEL OUT":
            k234= codecs.open(r'phrsalverbs/LEVEL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k234))

        if theoption1phrasal== "GROW ON2":
            k235= codecs.open(r'phrsalverbs/GROW ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k235))

        if theoption1phrasal== "GROW OUT":
            k236= codecs.open(r'phrsalverbs/GROW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k236))

        if theoption1phrasal== "GROW OUT OF":
            k237= codecs.open(r'phrsalverbs/GROW OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k237))

        
        if theoption1phrasal== "GROW OUT OF1":
            k238= codecs.open(r'phrsalverbs/GROW OUT OF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k238))

        if theoption1phrasal== "GROW OUT OF2":
            k239= codecs.open(r'phrsalverbs/GROW OUT OF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k239))

        if theoption1phrasal== "GROW TO":
            k240= codecs.open(r'phrsalverbs/GROW TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k240))

        if theoption1phrasal== "GROW TOGETHER":
            k241= codecs.open(r'phrsalverbs/GROW TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k241))

        if theoption1phrasal== "GROW UP":
            k242= codecs.open(r'phrsalverbs/GROW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k242))

        if theoption1phrasal== "GROW UP1":
            k243= codecs.open(r'phrsalverbs/GROW UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k243))

        if theoption1phrasal== "GROW UP2":
            k244= codecs.open(r'phrsalverbs/GROW UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k244))

        if theoption1phrasal== "COME BY1":
            k245= codecs.open(r'phrsalverbs/COME BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k245))

        if theoption1phrasal== "GROW UP ON":
            k246= codecs.open(r'phrsalverbs/GROW UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k246))

        if theoption1phrasal== "GROW UPON":
            k247= codecs.open(r'phrsalverbs/GROW UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k247))

        if theoption1phrasal== "GROW UPON1":
            k248= codecs.open(r'phrsalverbs/GROW UPON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k248))

        if theoption1phrasal== "GROW UPON2":
            k249= codecs.open(r'phrsalverbs/GROW UPON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k249))

        if theoption1phrasal== "HAM UP":
            k250= codecs.open(r'phrsalverbs/HAM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(k250))

        if theoption1phrasal== "HACK AROUND":
            l1= codecs.open(r'phrsalverbs/HACK AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l1))

        if theoption1phrasal== "HACK INTO":
            l2= codecs.open(r'phrsalverbs/HACK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l2))

        if theoption1phrasal== "HACK OFF":
            l3= codecs.open(r'phrsalverbs/HACK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l3))

        if theoption1phrasal== "HACK UP":
            l4= codecs.open(r'phrsalverbs/HACK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l4))

        if theoption1phrasal== "HACK UP1":
            l5= codecs.open(r'phrsalverbs/HACK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l5))

        if theoption1phrasal== "LEVEL UP":
            l6= codecs.open(r'phrsalverbs/LEVEL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l6))

        if theoption1phrasal== "HAMMER AWAY AT":
            l7= codecs.open(r'phrsalverbs/HAMMER AWAY AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l7))

        if theoption1phrasal== "HAMMER INTO":
            l8= codecs.open(r'phrsalverbs/HAMMER INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l8))

        if theoption1phrasal== "HAMMER OUT":
            l9= codecs.open(r'phrsalverbs/HAMMER OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l9))

        if theoption1phrasal== "HAND BACK":
            l10= codecs.open(r'phrsalverbs/HAND BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l10))

        if theoption1phrasal== "HAND DOWN":
            l11= codecs.open(r'phrsalverbs/HAND DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l11))

        if theoption1phrasal== "HAND DOWN1":
            l12= codecs.open(r'phrsalverbs/HAND DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l12))

        if theoption1phrasal== "HAND DOWN2":
            l13= codecs.open(r'phrsalverbs/HAND DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l13))

        if theoption1phrasal== "HAND IN":
            l14= codecs.open(r'phrsalverbs/HAND IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l14))

        if theoption1phrasal== "HAND ON":
            l15= codecs.open(r'phrsalverbs/HAND ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l15))

        if theoption1phrasal== "HAND ON1":
            l16= codecs.open(r'phrsalverbs/HAND ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l16))

        if theoption1phrasal== "BIN OFF2":
            l17= codecs.open(r'phrsalverbs/BIN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l17))

        if theoption1phrasal== "HAND OUT":
            l18= codecs.open(r'phrsalverbs/HAND OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l18))

        if theoption1phrasal== "HAND OVER":
            l19= codecs.open(r'phrsalverbs/HAND OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l19))

        if theoption1phrasal== "HANG ABOUT":
            l20= codecs.open(r'phrsalverbs/HANG ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l20))

        if theoption1phrasal== "HANG ABOUT1":
            l21= codecs.open(r'phrsalverbs/HANG ABOUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l21))

        if theoption1phrasal== "HANG AROUND":
            l22= codecs.open(r'phrsalverbs/HANG AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l22))

        if theoption1phrasal== "HANG BACK":
            l23= codecs.open(r'phrsalverbs/HANG BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l23))

        if theoption1phrasal== "HANG BACK FROM":
            l24= codecs.open(r'phrsalverbs/HANG BACK FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l24))

        if theoption1phrasal== "HANG IN THERE":
            l25= codecs.open(r'phrsalverbs/HANG IN THERE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l25))

        if theoption1phrasal== "HANG IT UP":
            l26= codecs.open(r'phrsalverbs/HANG IT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l26))

        if theoption1phrasal== "HANG ON":
            l27= codecs.open(r'phrsalverbs/HANG ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l27))

        if theoption1phrasal== "COME BEFORE":
            l28= codecs.open(r'phrsalverbs/COME BEFORE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l28))

        if theoption1phrasal== "HANG ON1":
            l29= codecs.open(r'phrsalverbs/HANG ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l29))

        if theoption1phrasal== "HANG ONTO":
            l30= codecs.open(r'phrsalverbs/HANG ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l30))

        if theoption1phrasal== "HANG OUT":
            l31= codecs.open(r'phrsalverbs/HANG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l31))

        if theoption1phrasal== "HANG OUT FOR":
            l32= codecs.open(r'phrsalverbs/HANG OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l32))

        if theoption1phrasal== "HANG OVER":
            l33= codecs.open(r'phrsalverbs/HANG OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l33))

        if theoption1phrasal== "HANG TOGETHER":
            l34= codecs.open(r'phrsalverbs/HANG TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l34))

        if theoption1phrasal== "HANG UP":
            l35= codecs.open(r'phrsalverbs/HANG UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l35))

        if theoption1phrasal== "HANG UP ON":
            l36= codecs.open(r'phrsalverbs/HANG UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l36))

        if theoption1phrasal== "HANG WITH":
            l37= codecs.open(r'phrsalverbs/HANG WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l37))

        if theoption1phrasal== "HANKER AFTER":
            l38= codecs.open(r'phrsalverbs/HANKER AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l38))

        if theoption1phrasal== "LEVEL UP1":
            l39= codecs.open(r'phrsalverbs/LEVEL UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l39))

        if theoption1phrasal== "HANKER FOR":
            l40= codecs.open(r'phrsalverbs/HANKER FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l40))

        if theoption1phrasal== "HARP ON":
            l41= codecs.open(r'phrsalverbs/HARP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l41))

        if theoption1phrasal== "HASH OUT":
            l42= codecs.open(r'phrsalverbs/HASH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l42))

        if theoption1phrasal== "HASH UP":
            l43= codecs.open(r'phrsalverbs/HASH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l43))

        if theoption1phrasal== "HATE ON":
            l44= codecs.open(r'phrsalverbs/HATE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l44))

        if theoption1phrasal== "HAVE AGAINST":
            l45= codecs.open(r'phrsalverbs/HAVE AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l45))

        if theoption1phrasal== "HAVE AROUND":
            l46= codecs.open(r'phrsalverbs/HAVE AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l46))

        if theoption1phrasal== "HAVE DOWN AS":
            l47= codecs.open(r'phrsalverbs/HAVE DOWN AS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l47))

        if theoption1phrasal== "HAVE IN":
            l48= codecs.open(r'phrsalverbs/HAVE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l48))

        if theoption1phrasal== "HAVE IN1":
            l49= codecs.open(r'phrsalverbs/HAVE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l49))

        if theoption1phrasal== "BIG UP":
            l50= codecs.open(r'phrsalverbs/BIG UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l50))

        if theoption1phrasal== "HAVE IN2":
            l51= codecs.open(r'phrsalverbs/HAVE IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l51))

        if theoption1phrasal== "HAVE IT AWAY":
            l52= codecs.open(r'phrsalverbs/HAVE IT AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l52))

        if theoption1phrasal== "HAVE IT IN FOR":
            l53= codecs.open(r'phrsalverbs/HAVE IT IN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l53))

        if theoption1phrasal== "HAVE IT OFF":
            l54= codecs.open(r'phrsalverbs/HAVE IT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l54))

        if theoption1phrasal== "HAVE IT OUT WITH":
            l55= codecs.open(r'phrsalverbs/HAVE IT OUT WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l55))

        if theoption1phrasal== "HAVE OFF":
            l56= codecs.open(r'phrsalverbs/HAVE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l56))

        if theoption1phrasal== "HAVE ON":
            l57= codecs.open(r'phrsalverbs/HAVE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l57))

        if theoption1phrasal== "HAVE ON1":
            l58= codecs.open(r'phrsalverbs/HAVE ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l58))

        if theoption1phrasal== "HAVE ON2":
            l59= codecs.open(r'phrsalverbs/HAVE ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l59))

        if theoption1phrasal== "HAVE ON3":
            l60= codecs.open(r'phrsalverbs/HAVE ON3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l60))

        if theoption1phrasal== "COUNT OUT":
            l61= codecs.open(r'phrsalverbs/COUNT OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l61))

        if theoption1phrasal== "COME BACK":
            l62= codecs.open(r'phrsalverbs/COME BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l62))

        if theoption1phrasal== "HAVE ON4":
            l63= codecs.open(r'phrsalverbs/HAVE ON4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l63))


        if theoption1phrasal== "HAVE ON5":
            l64= codecs.open(r'phrsalverbs/HAVE ON5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l64))

        if theoption1phrasal== "HAVE OVER":
            l65= codecs.open(r'phrsalverbs/HAVE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l65))

        if theoption1phrasal== "HAVE ROUND":
            l66= codecs.open(r'phrsalverbs/HAVE ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l66))

        if theoption1phrasal== "HAVE UP":
            l67= codecs.open(r'phrsalverbs/HAVE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l67))

        if theoption1phrasal== "HEAD FOR":
            l68= codecs.open(r'phrsalverbs/HEAD FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l68))

        if theoption1phrasal== "HEAD OFF":
            l69= codecs.open(r'phrsalverbs/HEAD OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l69))

        if theoption1phrasal== "HEAD OFF1":
            l70= codecs.open(r'phrsalverbs/HEAD OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l70))

        if theoption1phrasal== "HEAD OFF2":
            l71= codecs.open(r'phrsalverbs/HEAD OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l71))

        if theoption1phrasal== "HEAD OUT":
            l72= codecs.open(r'phrsalverbs/HEAD OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l72))

        if theoption1phrasal== "LEVEL WITH":
            l73= codecs.open(r'phrsalverbs/LEVEL WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l73))

        if theoption1phrasal== "HEAD UP":
            l74= codecs.open(r'phrsalverbs/HEAD UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l74))

        if theoption1phrasal== "HEAR ABOUT":
            l75= codecs.open(r'phrsalverbs/HEAR ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l75))

        if theoption1phrasal== "HEAR FROM":
            l76= codecs.open(r'phrsalverbs/HEAR FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l76))

        if theoption1phrasal== "HEAR OF":
            l77= codecs.open(r'phrsalverbs/HEAR OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l77))

        if theoption1phrasal== "HEAR OF1":
            l78= codecs.open(r'phrsalverbs/HEAR OF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l78))

        if theoption1phrasal== "HEAR OF2":
            l79= codecs.open(r'phrsalverbs/HEAR OF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l79))

        if theoption1phrasal== "HEAR OUT":
            l80= codecs.open(r'phrsalverbs/HEAR OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l80))

        if theoption1phrasal== "HEAT UP":
            l81= codecs.open(r'phrsalverbs/HEAT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l81))

        if theoption1phrasal== "HELP OUT":
            l82= codecs.open(r'phrsalverbs/HELP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l82))

        if theoption1phrasal== "HEM IN":
            l83= codecs.open(r'phrsalverbs/HEM IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l83))

        if theoption1phrasal== "BIG UP1":
            l84= codecs.open(r'phrsalverbs/BIG UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l84))

        if theoption1phrasal== "HEW TO":
            l85= codecs.open(r'phrsalverbs/HEW TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l85))

        if theoption1phrasal== "HIDE AWAY":
            l86= codecs.open(r'phrsalverbs/HIDE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l86))

        if theoption1phrasal== "HIDE AWAY1":
            l87= codecs.open(r'phrsalverbs/HIDE AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l87))

        if theoption1phrasal== "HIDE OUT":
            l88= codecs.open(r'phrsalverbs/HIDE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l88))

        if theoption1phrasal== "HINGE ON":
            l89= codecs.open(r'phrsalverbs/HINGE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l89))

        if theoption1phrasal== "HINGE ON1":
            l90= codecs.open(r'phrsalverbs/HINGE ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l90))

        if theoption1phrasal== "HINGE UPON":
            l91= codecs.open(r'phrsalverbs/HINGE UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l91))

        if theoption1phrasal== "HIT BACK":
            l92= codecs.open(r'phrsalverbs/HIT BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l92))

        if theoption1phrasal== "HIT FOR":
            l93= codecs.open(r'phrsalverbs/HIT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l93))

        if theoption1phrasal== "HIT IT OFF":
            l94= codecs.open(r'phrsalverbs/HIT IT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l94))

        if theoption1phrasal== "COME AROUND TO":
            l95= codecs.open(r'phrsalverbs/COME AROUND TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l95))

        if theoption1phrasal== "HIT IT OFF WITH":
            l96= codecs.open(r'phrsalverbs/HIT IT OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l96))

        if theoption1phrasal== "HIT ON":
            l97= codecs.open(r'phrsalverbs/HIT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l97))

        if theoption1phrasal== "HIT ON1":
            l98= codecs.open(r'phrsalverbs/HIT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l98))

        if theoption1phrasal== "HIT ON2":
            l99= codecs.open(r'phrsalverbs/HIT ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l99))

        if theoption1phrasal== "HIT OUT AT":
            l100= codecs.open(r'phrsalverbs/HIT OUT AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l100))

        if theoption1phrasal== "HIT UP":
            l101= codecs.open(r'phrsalverbs/HIT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l101))

        if theoption1phrasal== "HIT UP1":
            l102= codecs.open(r'phrsalverbs/HIT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l102))

        if theoption1phrasal== "HIT UP ON":
            l103= codecs.open(r'phrsalverbs/HIT UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l103))

        if theoption1phrasal== "HIT UPON":
            l104= codecs.open(r'phrsalverbs/HIT UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l104))

        if theoption1phrasal== "HIT UPON1":
            l105= codecs.open(r'phrsalverbs/HIT UPON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l105))

        if theoption1phrasal== "LIE AROUND":
            l106= codecs.open(r'phrsalverbs/LIE AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l106))

        if theoption1phrasal== "HIT WITH":
            l107= codecs.open(r'phrsalverbs/HIT WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l107))

        if theoption1phrasal== "HIVE OFF":
            l108= codecs.open(r'phrsalverbs/HIVE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l108))

        if theoption1phrasal== "HOLD AGAINST":
            l109= codecs.open(r'phrsalverbs/HOLD AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l109))

        if theoption1phrasal== "HOLD BACK":
            l110= codecs.open(r'phrsalverbs/HOLD BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l110))

        if theoption1phrasal== "HOLD BACK1":
            l111= codecs.open(r'phrsalverbs/HOLD BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l111))

        if theoption1phrasal== "HOLD BACK2":
            l112= codecs.open(r'phrsalverbs/HOLD BACK2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l112))

        if theoption1phrasal== "HOLD BACK FROM":
            l113= codecs.open(r'phrsalverbs/HOLD BACK FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l113))

        if theoption1phrasal== "HOLD DOWN":
            l114= codecs.open(r'phrsalverbs/HOLD DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l114))

        if theoption1phrasal== "HOLD DOWN1":
            l115= codecs.open(r'phrsalverbs/HOLD DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l115))

        if theoption1phrasal== "HOLD FORTH":
            l116= codecs.open(r'phrsalverbs/HOLD FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l116))

        if theoption1phrasal== "BEND OVER BACKWARDS":
            l117= codecs.open(r'phrsalverbs/BEND OVER BACKWARDS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l117))

        if theoption1phrasal== "HOLD OFF":
            l118= codecs.open(r'phrsalverbs/HOLD OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l118))

        if theoption1phrasal== "HOLD OFF1":
            l119= codecs.open(r'phrsalverbs/HOLD OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l119))

        if theoption1phrasal== "HOLD OFF2":
            l120= codecs.open(r'phrsalverbs/HOLD OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l120))

        if theoption1phrasal== "HOLD OFF ON":
            l121= codecs.open(r'phrsalverbs/HOLD OFF ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l121))

        if theoption1phrasal== "HOLD ON":
            l122= codecs.open(r'phrsalverbs/HOLD ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l122))

        if theoption1phrasal== "HOLD ON1":
            l123= codecs.open(r'phrsalverbs/HOLD ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l123))

        if theoption1phrasal== "HOLD ON TO":
            l124= codecs.open(r'phrsalverbs/HOLD ON TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l124))

        if theoption1phrasal== "HOLD ONTO":
            l125= codecs.open(r'phrsalverbs/HOLD ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l125))

        if theoption1phrasal== "HOLD ONTO1":
            l126= codecs.open(r'phrsalverbs/HOLD ONTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l126))

        if theoption1phrasal== "HOLD OUT":
            l127= codecs.open(r'phrsalverbs/HOLD OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l127))

        if theoption1phrasal== "COME AROUND":
            l128= codecs.open(r'phrsalverbs/COME AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l128))

        if theoption1phrasal== "HOLD OUT1":
            l129= codecs.open(r'phrsalverbs/HOLD OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l129))

        if theoption1phrasal== "HOLD OUT AGAINST":
            l130= codecs.open(r'phrsalverbs/HOLD OUT AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l130))

        if theoption1phrasal== "HOLD OUT FOR":
            l131= codecs.open(r'phrsalverbs/HOLD OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l131))

        if theoption1phrasal== "HOLD OUT ON":
            l132= codecs.open(r'phrsalverbs/HOLD OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l132))

        if theoption1phrasal== "HOLD OVER":
            l133= codecs.open(r'phrsalverbs/HOLD OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l133))

        if theoption1phrasal== "HOLD OVER1":
            l134= codecs.open(r'phrsalverbs/HOLD OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l134))

        if theoption1phrasal== "HOLD TO":
            l135= codecs.open(r'phrsalverbs/HOLD TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l135))

        if theoption1phrasal== "HOLD TOGETHER":
            l136= codecs.open(r'phrsalverbs/HOLD TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l136))

        if theoption1phrasal== "HOLD UP":
            l137= codecs.open(r'phrsalverbs/HOLD UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l137))

        if theoption1phrasal== "HOLD UP1":
            l138= codecs.open(r'phrsalverbs/HOLD UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l138))

        if theoption1phrasal== "LIE DOWN":
            l139= codecs.open(r'phrsalverbs/LIE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l139))

        if theoption1phrasal== "HOLD WITH":
            l140= codecs.open(r'phrsalverbs/HOLD WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l140))

        if theoption1phrasal== "HOLE UP":
            l141= codecs.open(r'phrsalverbs/HOLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l141))

        if theoption1phrasal== "HOLLOW OUT":
            l142= codecs.open(r'phrsalverbs/HOLLOW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l142))

        if theoption1phrasal== "HOME IN ON":
            l143= codecs.open(r'phrsalverbs/HOME IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l143))

        if theoption1phrasal== "HONE IN ON":
            l144= codecs.open(r'phrsalverbs/HONE IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l144))

        if theoption1phrasal== "HOOK INTO":
            l145= codecs.open(r'phrsalverbs/HOOK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l145))

        if theoption1phrasal== "HOOK UP":
            l146= codecs.open(r'phrsalverbs/HOOK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l146))

        if theoption1phrasal== "HOOK UP TO":
            l147= codecs.open(r'phrsalverbs/HOOK UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l147))

        if theoption1phrasal== "HOON AROUND":
            l148= codecs.open(r'phrsalverbs/HOON AROUN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l148))

        if theoption1phrasal== "HOP IN":
            l149= codecs.open(r'phrsalverbs/HOP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l149))

        if theoption1phrasal== "BEND OVER":
            l150= codecs.open(r'phrsalverbs/BEND OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l150))

        if theoption1phrasal== "HOP IT":
            l151= codecs.open(r'phrsalverbs/HOP IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l151))

        if theoption1phrasal== "HOP ON":
            l152= codecs.open(r'phrsalverbs/HOP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l152))

        if theoption1phrasal== "HOP OUT":
            l153= codecs.open(r'phrsalverbs/HOP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l153))

        if theoption1phrasal== "HORSE AROUND":
            l154= codecs.open(r'phrsalverbs/HORSE AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l154))

        if theoption1phrasal== "HOSE DOWN":
            l155= codecs.open(r'phrsalverbs/HOSE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l155))

        if theoption1phrasal== "HOSE DOWN1":
            l156= codecs.open(r'phrsalverbs/HOSE DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l156))

        if theoption1phrasal== "HOUND OUT":
            l157= codecs.open(r'phrsalverbs/HOUND OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l157))

        if theoption1phrasal== "HOVER AROUND":
            l158= codecs.open(r'phrsalverbs/HOVER AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l158))

        if theoption1phrasal== "HUNKER DOWN":
            l159= codecs.open(r'phrsalverbs/HUNKER DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l159))

        if theoption1phrasal== "HUNT DOWN":
            l160= codecs.open(r'phrsalverbs/HUNT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l160))

        if theoption1phrasal== "COME APART":
            l161= codecs.open(r'phrsalverbs/COME APART.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l161))

        if theoption1phrasal== "HUNT OUT":
            l162= codecs.open(r'phrsalverbs/HUNT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l162))

        if theoption1phrasal== "HUNT UP":
            l163= codecs.open(r'phrsalverbs/HUNT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l163))

        if theoption1phrasal== "HUSH UP":
            l164= codecs.open(r'phrsalverbs/HUSH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l164))

        if theoption1phrasal== "HUTCH UP":
            l165= codecs.open(r'phrsalverbs/HUTCH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l165))

        if theoption1phrasal== "ICE OVER":
            l166= codecs.open(r'phrsalverbs/ICE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l166))

        if theoption1phrasal== "HUNT OUT":
            l167= codecs.open(r'phrsalverbs/HUNT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l167))

        if theoption1phrasal== "LOOK BACK":
            l168= codecs.open(r'phrsalverbs/LOOK BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l168))

        if theoption1phrasal== "JERK OFF":
            l169= codecs.open(r'phrsalverbs/JERK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l169))

        if theoption1phrasal== "LIE WITH":
            l170= codecs.open(r'phrsalverbs/LIE WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l170))

        if theoption1phrasal== "BEND DOWN":
            l171= codecs.open(r'phrsalverbs/BEND DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l171))

        if theoption1phrasal== "COME ALONG":
            l172= codecs.open(r'phrsalverbs/COME ALONG1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l172))

        if theoption1phrasal== "LIFT OFF":
            l173= codecs.open(r'phrsalverbs/LIFT OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l173))

        if theoption1phrasal== "BELT UP":
            l174= codecs.open(r'phrsalverbs/BELT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l174))

        if theoption1phrasal== "COME ALONG1":
            l175= codecs.open(r'phrsalverbs/COME ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l175))

        if theoption1phrasal== "LIGHT OUT":
            l176= codecs.open(r'phrsalverbs/LIGHT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l176))

        if theoption1phrasal== "BELT UP1":
            l177= codecs.open(r'phrsalverbs/BELT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l177))

        if theoption1phrasal== "COME ACROSS1":
            l178= codecs.open(r'phrsalverbs/COME ACROSS1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l178))

        if theoption1phrasal== "LIGHT UP":
            l179= codecs.open(r'phrsalverbs/LIGHT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l179))

        if theoption1phrasal== "ADD UP1":
            l180= codecs.open(r'phrsalverbs/ADD UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l180))

        if theoption1phrasal== "BELT OUT":
            l181= codecs.open(r'phrsalverbs/BELT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l181))

        if theoption1phrasal== "COME ACROSS2":
            l182= codecs.open(r'phrsalverbs/COME ACROSS2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l182))

        if theoption1phrasal== "LIGHT UP1":
            l183= codecs.open(r'phrsalverbs/LIGHT UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l183))

        if theoption1phrasal== "BELONG WITH":
            l184= codecs.open(r'phrsalverbs/BELONG WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l184))

        if theoption1phrasal== "COP OUT":
            l185= codecs.open(r'phrsalverbs/COP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l185))

        if theoption1phrasal== "LIGHTEN UP":
            l186= codecs.open(r'phrsalverbs/LIGHTEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l186))

        if theoption1phrasal== "BELONG TO":
            l187= codecs.open(r'phrsalverbs/BELONG TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l187))

        if theoption1phrasal== "COP OFF":
            l188= codecs.open(r'phrsalverbs/COP OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l188))

        if theoption1phrasal== "LIMBER UP":
            l189= codecs.open(r'phrsalverbs/LIMBER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l189))

        if theoption1phrasal== "BELONG TO1":
            l190= codecs.open(r'phrsalverbs/BELONG TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l190))

        if theoption1phrasal== "BACK UP2":
            l191= codecs.open(r'phrsalverbs/BACK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l191))

        if theoption1phrasal== "COP OFF1":
            l192= codecs.open(r'phrsalverbs/COP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l192))

        if theoption1phrasal== "LIMBER UP FOR":
            l193= codecs.open(r'phrsalverbs/LIMBER UP FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l193))

        if theoption1phrasal== "BEEF UP":
            l194= codecs.open(r'phrsalverbs/BEEF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l194))

        if theoption1phrasal== "COP IT":
            l195= codecs.open(r'phrsalverbs/COP IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l195))

        if theoption1phrasal== "LINE UP":
            l196= codecs.open(r'phrsalverbs/LINE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l196))

        if theoption1phrasal== "BED OUT":
            l197= codecs.open(r'phrsalverbs/BED OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l197))

        if theoption1phrasal== "COOP UP":
            l198= codecs.open(r'phrsalverbs/COOP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l198))

        if theoption1phrasal== "LINE UP1":
            l199= codecs.open(r'phrsalverbs/LINE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l199))

        if theoption1phrasal== "BED DOWN":
            l200= codecs.open(r'phrsalverbs/BED DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l200))

        if theoption1phrasal== "COOL DOWN":
            l201= codecs.open(r'phrsalverbs/COOL DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l201))

        if theoption1phrasal== "COUNT OUT1":
            l202= codecs.open(r'phrsalverbs/COUNT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l202))

        if theoption1phrasal== "LINE UP2":
            l203= codecs.open(r'phrsalverbs/LINE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l203))

        if theoption1phrasal== "BED DOWN1":
            l204= codecs.open(r'phrsalverbs/BED DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l204))

        if theoption1phrasal== "COOL OFF":
            l205= codecs.open(r'phrsalverbs/COOL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l205))

        if theoption1phrasal== "LINK UP":
            l206= codecs.open(r'phrsalverbs/LINK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l206))

        if theoption1phrasal== "BEAVER AWAY":
            l207= codecs.open(r'phrsalverbs/BEAVER AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l207))

        if theoption1phrasal== "COOL DOWN1":
            l208= codecs.open(r'phrsalverbs/COOL DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l208))

        if theoption1phrasal== "LINK UP WITH":
            l209= codecs.open(r'phrsalverbs/LINK UP WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l209))

        if theoption1phrasal== "BEAT UP":
            l210= codecs.open(r'phrsalverbs/BEAT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l210))

        if theoption1phrasal== "CONK OUT":
            l211= codecs.open(r'phrsalverbs/CONK OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l211))

        if theoption1phrasal== "LISTEN OUT FOR":
            l212= codecs.open(r'phrsalverbs/LISTEN OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l212))

        if theoption1phrasal== "JOCKEY INTO":
            l213= codecs.open(r'phrsalverbs/JOCKEY INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l213))

        if theoption1phrasal== "BEAT OUT":
            l214= codecs.open(r'phrsalverbs/BEAT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l214))

        if theoption1phrasal== "BEAVER AWAY AT":
            l215= codecs.open(r'phrsalverbs/BEAVER AWAY AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l215))

        if theoption1phrasal== "LISTEN UP":
            l216= codecs.open(r'phrsalverbs/LISTEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l216))

        if theoption1phrasal== "BEAT DOWN":
            l217= codecs.open(r'phrsalverbs/BEAT DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l217))

        if theoption1phrasal== "CONK OUT1":
            l218= codecs.open(r'phrsalverbs/CONK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l218))

        if theoption1phrasal== "LIVE BY":
            l219= codecs.open(r'phrsalverbs/LIVE BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l219))

        if theoption1phrasal== "BEAT DOWN1":
            l220= codecs.open(r'phrsalverbs/BEAT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l220))

        if theoption1phrasal== "CONJURE UP":
            l221= codecs.open(r'phrsalverbs/CONJURE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l221))

        if theoption1phrasal== "LIVE DOWN":
            l222= codecs.open(r'phrsalverbs/LIVE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l222))

        if theoption1phrasal== "BEAR WITH":
            l223= codecs.open(r'phrsalverbs/BEAR WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l223))

        if theoption1phrasal== "COME UP AGAINST":
            l224= codecs.open(r'phrsalverbs/COME UP AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l224))

        if theoption1phrasal== "CONJURE UP1":
            l225= codecs.open(r'phrsalverbs/CONJURE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l225))

        if theoption1phrasal== "LIVE FOR":
            l226= codecs.open(r'phrsalverbs/LIVE FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l226))

        if theoption1phrasal== "BOG INTO":
            l227= codecs.open(r'phrsalverbs/BOG INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l227))

        if theoption1phrasal== "LIVE IN":
            l228= codecs.open(r'phrsalverbs/LIVE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l228))

        if theoption1phrasal== "BOG OFF":
            l229= codecs.open(r'phrsalverbs/BOG OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l229))

        if theoption1phrasal== "CONE OFF":
            l230= codecs.open(r'phrsalverbs/CONE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l230))

        if theoption1phrasal== "LIVE FOR1":
            l231= codecs.open(r'phrsalverbs/LIVE FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l231))

        if theoption1phrasal== "BOG DOWN":
            l232= codecs.open(r'phrsalverbs/BOG DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l232))

        if theoption1phrasal== "COLOUR UP":
            l233= codecs.open(r'phrsalverbs/COLOR UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l233))

        if theoption1phrasal== "LIVE IT UP":
            l234= codecs.open(r'phrsalverbs/LIVE IT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l234))

        if theoption1phrasal== "CHIP IN":
            l235= codecs.open(r'phrsalverbs/CHIP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l235))

        if theoption1phrasal== "KEEP UP AT":
            l236= codecs.open(r'phrsalverbs/KEEP UP AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l236))

        if theoption1phrasal== "BOARD UP":
            l237= codecs.open(r'phrsalverbs/BOARD UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l237))

        if theoption1phrasal== "COLOUR IN":
            l238= codecs.open(r'phrsalverbs/COLOR IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l238))

        if theoption1phrasal== "LIVE OFF":
            l239= codecs.open(r'phrsalverbs/LIVE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l239))

        if theoption1phrasal== "BOARD OUT":
            l240= codecs.open(r'phrsalverbs/BOARD OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l240))

        if theoption1phrasal== "COBBLE TOGETHER":
            l241= codecs.open(r'phrsalverbs/COBBLE TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l241))

        if theoption1phrasal== "COCK UP":
            l242= codecs.open(r'phrsalverbs/COCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l242))

        if theoption1phrasal== "LIVE OFF1":
            l243= codecs.open(r'phrsalverbs/LIVE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l243))

        if theoption1phrasal== "COAST ALONG":
            l244= codecs.open(r'phrsalverbs/COAST ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l244))

        if theoption1phrasal== "LIVE ON":
            l245= codecs.open(r'phrsalverbs/LIVE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l245))

        if theoption1phrasal== "LIVE ON1":
            l246= codecs.open(r'phrsalverbs/LIVE ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l246))

        if theoption1phrasal== "ARGUE DOWN1":
            l247= codecs.open(r'phrsalverbs/ARGUE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l247))

        if theoption1phrasal== "CLOWN AROUND":
            l248= codecs.open(r'phrsalverbs/CLOWN AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l248))

        if theoption1phrasal== "CLUE IN ON":
            l249= codecs.open(r'phrsalverbs/CLUE IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l249))

        if theoption1phrasal== "LIVE OUT":
            l250= codecs.open(r'phrsalverbs/LIVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(l250))

        if theoption1phrasal== "CLOUD OVER":
            m1= codecs.open(r'phrsalverbs/CLOUD OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m1))

        if theoption1phrasal== "CLOWN ABOUT":
            m2= codecs.open(r'phrsalverbs/CLOWN ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m2))

        if theoption1phrasal== "LIVE OUT1":
            m3= codecs.open(r'phrsalverbs/LIVE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m3))

        if theoption1phrasal== "CLOSE UP":
            m4= codecs.open(r'phrsalverbs/CLOSE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m4))

        if theoption1phrasal== "LIVE OUT2":
            m5= codecs.open(r'phrsalverbs/LIVE OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m5))

        if theoption1phrasal== "LIVE UP TO":
            m6= codecs.open(r'phrsalverbs/LIVE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m6))

        if theoption1phrasal== "CLOSE UP1":
            m7= codecs.open(r'phrsalverbs/CLOSE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m7))

        if theoption1phrasal== "BANG ON ABOUT":
            m8= codecs.open(r'phrsalverbs/BANG ON ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m8))

        if theoption1phrasal== "LIVE WITH":
            m9= codecs.open(r'phrsalverbs/LIVE WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m9))

        if theoption1phrasal== "LIVE THROUGH":
            m10= codecs.open(r'phrsalverbs/LIVE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m10))

        if theoption1phrasal== "CLOSE UP2":
            m11= codecs.open(r'phrsalverbs/CLOSE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m11))

        if theoption1phrasal== "LIVE TOGETHER":
            m12= codecs.open(r'phrsalverbs/LIVE TOGETHER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m12))

        if theoption1phrasal== "BOG IN":
            m13= codecs.open(r'phrsalverbs/BOG IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m13))

        if theoption1phrasal== "CLOSE OUT":
            m14= codecs.open(r'phrsalverbs/CLOSE OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m14))

        if theoption1phrasal== "LIVEN UP":
            m15= codecs.open(r'phrsalverbs/LIVEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m15))

        if theoption1phrasal== "BLOCK IN":
            m16= codecs.open(r'phrsalverbs/BLOCK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m16))

        if theoption1phrasal== "CLOSE OUT1":
            m17= codecs.open(r'phrsalverbs/CLOSE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m17))

        if theoption1phrasal== "LIVEN UP1":
            m18= codecs.open(r'phrsalverbs/LIVEN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m18))

        if theoption1phrasal== "KEEP UP WITH":
            m19= codecs.open(r'phrsalverbs/KEEP UP WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m19))

        if theoption1phrasal== "BLOCK UP":
            m20= codecs.open(r'phrsalverbs/BLOCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m20))

        if theoption1phrasal== "CLOSE OUT2":
            m21= codecs.open(r'phrsalverbs/CLOSE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m21))

        if theoption1phrasal== "LOAD DOWN":
            m22= codecs.open(r'phrsalverbs/LOAD DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m22))

        
        if theoption1phrasal== "BLOCK OUT":
            m23= codecs.open(r'phrsalverbs/BLOCK OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m23))

        if theoption1phrasal== "LOAD UP":
            m24= codecs.open(r'phrsalverbs/LOAD UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m24))

        if theoption1phrasal== "LOAD UP1":
            m25= codecs.open(r'phrsalverbs/LOAD UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m25)) 

        if theoption1phrasal== "BLOCK OUT1":
            m26= codecs.open(r'phrsalverbs/BLOCK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m26))

        if theoption1phrasal== "CLOSE ON":
            m27= codecs.open(r'phrsalverbs/CLOSE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m27))

        if theoption1phrasal== "LOAD UP ON":
            m28= codecs.open(r'phrsalverbs/LOAD UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m28))

        if theoption1phrasal== "BLOCK OFF":
            m29= codecs.open(r'phrsalverbs/BLOCK OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m29))

        if theoption1phrasal== "COME UP":
            m30= codecs.open(r'phrsalverbs/COME UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m30)) 

        if theoption1phrasal== "CLOSE OFF":
            m31= codecs.open(r'phrsalverbs/CLOSE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m31))

        if theoption1phrasal== "LOCK AWAY":
            m32= codecs.open(r'phrsalverbs/LOCK AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m32))

        if theoption1phrasal== "BLOCK OFF1":
            m33= codecs.open(r'phrsalverbs/BLOCK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m33))

        if theoption1phrasal== "CLOSE IN UPON":
            m34= codecs.open(r'phrsalverbs/CLOSE IN UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m34))

        if theoption1phrasal== "LOCK AWAY1":
            m35= codecs.open(r'phrsalverbs/LOCK AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m35))

        if theoption1phrasal== "BLOCK IN1":
            m36= codecs.open(r'phrsalverbs/BLOCK IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m36))

        if theoption1phrasal== "CLOSE IN ON":
            m37= codecs.open(r'phrsalverbs/CLOSE IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m37))

        if theoption1phrasal== "LOCK DOWN":
            m38= codecs.open(r'phrsalverbs/LOCK DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m38))

        if theoption1phrasal== "BLOW AWAY":
            m39= codecs.open(r'phrsalverbs/BLOW AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m39))

        if theoption1phrasal== "CLOSE IN":
            m40= codecs.open(r'phrsalverbs/CLOSE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m40)) 

        if theoption1phrasal== "KEEP UP WITH1":
            m41= codecs.open(r'phrsalverbs/KEEP UP WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m41))

        if theoption1phrasal== "LOCK DOWN":
            m42= codecs.open(r'phrsalverbs/LOCK DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m42))

        if theoption1phrasal== "BLOW AWAY1":
            m43= codecs.open(r'phrsalverbs/BLOW AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m43))

        if theoption1phrasal== "CLOSE IN1":
            m44= codecs.open(r'phrsalverbs/CLOSE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m44))

        if theoption1phrasal== "LOCK IN":
            m45= codecs.open(r'phrsalverbs/LOCK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m45))

        if theoption1phrasal== "BLOW AWAY2":
            m46= codecs.open(r'phrsalverbs/BLOW AWAY2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m46))

        if theoption1phrasal== "CLOSE DOWN":
            m47= codecs.open(r'phrsalverbs/CLOSE DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m47))

        if theoption1phrasal== "LOCK IN1":
            m48= codecs.open(r'phrsalverbs/LOCK IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m48))

        if theoption1phrasal== "BLOW AWAY3":
            m49= codecs.open(r'phrsalverbs/BLOW AWAY3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m49))

        if theoption1phrasal== "CLOSE DOWN1":
            m50= codecs.open(r'phrsalverbs/CLOSE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m50)) 

        if theoption1phrasal== "LOCK ONTO":
            m51= codecs.open(r'phrsalverbs/LOCK ONTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m51))

        if theoption1phrasal== "ARGUE OUT":
            m52= codecs.open(r'phrsalverbs/ARGUE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m52))

        if theoption1phrasal== "BLOW DOWN":
            m53= codecs.open(r'phrsalverbs/BLOW DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m53))

        if theoption1phrasal== "CLOG UP":
            m54= codecs.open(r'phrsalverbs/CLOG UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m54))

        if theoption1phrasal== "LOCK OUT":
            m55= codecs.open(r'phrsalverbs/LOCK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m55))

        if theoption1phrasal== "BLOW IN":
            m56= codecs.open(r'phrsalverbs/BLOW IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m56))

        if theoption1phrasal== "CLOCK UP":
            m57= codecs.open(r'phrsalverbs/CLOCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m57))

        if theoption1phrasal== "LOCK OUT1":
            m58= codecs.open(r'phrsalverbs/LOCK OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m58))

        if theoption1phrasal== "BLOW OFF":
            m59= codecs.open(r'phrsalverbs/BLOW OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m59))

        if theoption1phrasal== "CLOCK OUT":
            m60= codecs.open(r'phrsalverbs/CLOCK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m60))

        if theoption1phrasal== "LOCK UP":
            m61= codecs.open(r'phrsalverbs/LOCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m61))

        if theoption1phrasal== "BLOW OFF1":
            m62= codecs.open(r'phrsalverbs/BLOW OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m62))

        if theoption1phrasal== "BANG OUT":
            m63= codecs.open(r'phrsalverbs/BANG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m63))

        if theoption1phrasal== "CLOCK ON":
            m64= codecs.open(r'phrsalverbs/CLOCK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m64))


        if theoption1phrasal== "LOCK UP1":
            m65= codecs.open(r'phrsalverbs/LOCK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m65))

        if theoption1phrasal== "BLOW OFF2":
            m66= codecs.open(r'phrsalverbs/BLOW OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m66))

        if theoption1phrasal== "CLOCK OFF":
            m67= codecs.open(r'phrsalverbs/CLOCK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m67))

        if theoption1phrasal== "LOCK UP2":
            m68= codecs.open(r'phrsalverbs/LOCK UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m68))

        if theoption1phrasal== "BLOW OUT":
            m69= codecs.open(r'phrsalverbs/BLOW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m69))

        if theoption1phrasal== "CLOCK IN":
            m70= codecs.open(r'phrsalverbs/CLOCK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m70))

        if theoption1phrasal== "LOCK YOURSELF AWAY":
            m71= codecs.open(r'phrsalverbs/LOCK YOURSELF AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m71))

        if theoption1phrasal== "BLOW OUT1":
            m72= codecs.open(r'phrsalverbs/BLOW OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m72))

        if theoption1phrasal== "CLING TO":
            m73= codecs.open(r'phrsalverbs/CLING TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m73))

        if theoption1phrasal== "KEY DOWN":
            m74= codecs.open(r'phrsalverbs/KEY DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m74))

        if theoption1phrasal== "LOG IN":
            m75= codecs.open(r'phrsalverbs/LOG IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m75))

        if theoption1phrasal== "BLOW OVER":
            m76= codecs.open(r'phrsalverbs/BLOW OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m76))

        if theoption1phrasal== "CLING ON":
            m77= codecs.open(r'phrsalverbs/CLING ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m77))

        if theoption1phrasal== "CLING ON TO":
            m78= codecs.open(r'phrsalverbs/CLING ON TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m78))

        if theoption1phrasal== "BLOW THROUGH":
            m79= codecs.open(r'phrsalverbs/BLOW THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m79))

        if theoption1phrasal== "CLEAR UP":
            m80= codecs.open(r'phrsalverbs/CLEAR UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m80))

        if theoption1phrasal== "LOG INTO":
            m81= codecs.open(r'phrsalverbs/LOG INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m81))

        if theoption1phrasal== "BLOW UP":
            m82= codecs.open(r'phrsalverbs/BLOW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m82))

        if theoption1phrasal== "CLEAR UP1":
            m83= codecs.open(r'phrsalverbs/CLEAR UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m83))

        if theoption1phrasal== "LOG OFF":
            m84= codecs.open(r'phrsalverbs/LOG OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m84))

        if theoption1phrasal== "COME UP1":
            m85= codecs.open(r'phrsalverbs/COME UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m85))

        if theoption1phrasal== "BLOW UP1":
            m86= codecs.open(r'phrsalverbs/BLOW UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m86))

        if theoption1phrasal== "CLEAR UP2":
            m87= codecs.open(r'phrsalverbs/CLEAR UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m87))

        if theoption1phrasal== "LOG ON":
            m88= codecs.open(r'phrsalverbs/LOG ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m88))

        if theoption1phrasal== "BLOW UP2":
            m89= codecs.open(r'phrsalverbs/BLOW UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m89))

        if theoption1phrasal== "CLEAR UP3":
            m90= codecs.open(r'phrsalverbs/CLEAR UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m90))

        if theoption1phrasal== "LOG OUT":
            m91= codecs.open(r'phrsalverbs/LOG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m91))

        if theoption1phrasal== "BLOW UP3":
            m92= codecs.open(r'phrsalverbs/BLOW UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m92))

        if theoption1phrasal== "CLEAR OUT":
            m93= codecs.open(r'phrsalverbs/CLEAR OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m93))

        if theoption1phrasal== "CLEAR OUT1":
            m94= codecs.open(r'phrsalverbs/CLEAR OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m94))

        if theoption1phrasal== "BLOW UP4":
            m95= codecs.open(r'phrsalverbs/BLOW UP4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m95))

        if theoption1phrasal== "CHEER UP":
            m96= codecs.open(r'phrsalverbs/CHEER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m96))

        if theoption1phrasal== "KEY IN":
            m97= codecs.open(r'phrsalverbs/KEY IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m97))

        if theoption1phrasal== "CLEAR AWAY":
            m98= codecs.open(r'phrsalverbs/CLEAR AWAY1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m98))

        if theoption1phrasal== "CLEAR OFF":
            m99= codecs.open(r'phrsalverbs/CLEAR OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m99))

        if theoption1phrasal== "BOIL DOWN":
            m100= codecs.open(r'phrsalverbs/BOIL DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m100))

        if theoption1phrasal== "CLEAR AWAY1":
            m101= codecs.open(r'phrsalverbs/CLEAR AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m101))

        if theoption1phrasal== "ICE UP":
            m102= codecs.open(r'phrsalverbs/ICE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m102))

        if theoption1phrasal== "BOIL UP":
            m103= codecs.open(r'phrsalverbs/BOIL UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m103))

        if theoption1phrasal== "CLIMB DOWN":
            m104= codecs.open(r'phrsalverbs/CLIMB DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m104))

        if theoption1phrasal== "IRON OUT":
            m105= codecs.open(r'phrsalverbs/IRON OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m105))

        if theoption1phrasal== "BOIL UP1":
            m106= codecs.open(r'phrsalverbs/BOIL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m106))

        if theoption1phrasal== "RIP OFF":
            m107= codecs.open(r'phrsalverbs/RIP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m107))

        if theoption1phrasal== "ARGUE DOWN2":
            m108= codecs.open(r'phrsalverbs/ARGUE DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m108))

        if theoption1phrasal== "CLEAN UP":
            m109= codecs.open(r'phrsalverbs/CLEAN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m109))

        if theoption1phrasal== "CLEAN UP1":
            m110= codecs.open(r'phrsalverbs/CLEAN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m110))

        if theoption1phrasal== "BOIL OVER":
            m111= codecs.open(r'phrsalverbs/BOIL OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m111))

        if theoption1phrasal== "CLEAN OUT":
            m112= codecs.open(r'phrsalverbs/CLEAN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m112))

        if theoption1phrasal== "CLEAN OUT1":
            m113= codecs.open(r'phrsalverbs/CLEAN OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m113))

        if theoption1phrasal== "BOIL OVER1":
            m114= codecs.open(r'phrsalverbs/BOIL OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m114))

        if theoption1phrasal== "CLEAN OFF":
            m115= codecs.open(r'phrsalverbs/CLEAN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m115))

        if theoption1phrasal== "RIP ON":
            m116= codecs.open(r'phrsalverbs/RIP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m116))

        if theoption1phrasal== "BOIL DOWN TO":
            m117= codecs.open(r'phrsalverbs/BOIL DOWN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m117))

        if theoption1phrasal== "CLAW BACK":
            m118= codecs.open(r'phrsalverbs/CLAW BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m118))

        if theoption1phrasal== "BANG UP":
            m119= codecs.open(r'phrsalverbs/BANG UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m119))

        if theoption1phrasal== "RISE ABOVE":
            m120= codecs.open(r'phrsalverbs/RISE ABOVE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m120))

        if theoption1phrasal== "BOIL DOWN1":
            m121= codecs.open(r'phrsalverbs/BOIL DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m121))

        if theoption1phrasal== "CLAG UP":
            m122= codecs.open(r'phrsalverbs/CLAG UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m122))

        if theoption1phrasal== "CLAMP DOWN ON":
            m123= codecs.open(r'phrsalverbs/CLAMP DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m123))

        if theoption1phrasal== "BOLSTER UP":
            m124= codecs.open(r'phrsalverbs/BOLSTER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m124))

        if theoption1phrasal== "LOOK AFTER":
            m125= codecs.open(r'phrsalverbs/LOOK AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m125))

        if theoption1phrasal== "CHUCK IN":
            m126= codecs.open(r'phrsalverbs/CHUCK IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m126))

        if theoption1phrasal== "CHURN OUT":
            m127= codecs.open(r'phrsalverbs/CHURN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m127))

        if theoption1phrasal== "BONE UP":
            m128= codecs.open(r'phrsalverbs/BONE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m128))

        if theoption1phrasal== "CHUCK OUT":
            m129= codecs.open(r'phrsalverbs/CHUCK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m129))

        if theoption1phrasal== "KEY IN ON":
            m130= codecs.open(r'phrsalverbs/KEY IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m130))

        if theoption1phrasal== "RISE TO":
            m131= codecs.open(r'phrsalverbs/RISE TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m131))

        if theoption1phrasal== "BONE UP ON":
            m132= codecs.open(r'phrsalverbs/BONE UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m132))

        if theoption1phrasal== "CHUCK UP":
            m133= codecs.open(r'phrsalverbs/CHUCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m133))

        if theoption1phrasal== "CHUCK UP1":
            m134= codecs.open(r'phrsalverbs/CHUCK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m134))

        if theoption1phrasal== "BOOK IN":
            m135= codecs.open(r'phrsalverbs/BOOK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m135))

        if theoption1phrasal== "CHOW DOWN ON":
            m136= codecs.open(r'phrsalverbs/CHOW DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m136))

        if theoption1phrasal== "CHUCK AWAY":
            m137= codecs.open(r'phrsalverbs/CHUCK AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m137))

        if theoption1phrasal== "BOOK UP":
            m138= codecs.open(r'phrsalverbs/BOOK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m138))

        if theoption1phrasal== "CHOW DOWN":
            m139= codecs.open(r'phrsalverbs/CHOW DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m139))

        if theoption1phrasal== "LOOK BACK":
            m140= codecs.open(r'phrsalverbs/LOOK BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m140))

        if theoption1phrasal== "ANSWER FOR1":
            m141= codecs.open(r'phrsalverbs/ANSWER FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m141))

        if theoption1phrasal== "BOOK OUT":
            m142= codecs.open(r'phrsalverbs/BOOK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m142))

        if theoption1phrasal== "CHOP UP":
            m143= codecs.open(r'phrsalverbs/CHOP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m143))

        if theoption1phrasal== "LOOK DOWN ON":
            m144= codecs.open(r'phrsalverbs/LOOK DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m144))

        if theoption1phrasal== "BOOK INTO":
            m145= codecs.open(r'phrsalverbs/BOOK INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m145))

        if theoption1phrasal== "CHOOSE UP":
            m146= codecs.open(r'phrsalverbs/CHOOSE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m146))

        if theoption1phrasal== "CHOP DOWN":
            m147= codecs.open(r'phrsalverbs/CHOP DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m147))

        if theoption1phrasal== "BOOK INTO1":
            m148= codecs.open(r'phrsalverbs/BOOK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m148))

        if theoption1phrasal== "CHOOSE UP1":
            m149= codecs.open(r'phrsalverbs/CHOOSE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m149))

        if theoption1phrasal== "LOOK FOR":
            m150= codecs.open(r'phrsalverbs/LOOK FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m150))

        
        if theoption1phrasal== "BORDER ON":
            m151= codecs.open(r'phrsalverbs/BORDER ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m151))

        if theoption1phrasal== "KEY ON":
            m152= codecs.open(r'phrsalverbs/KEY ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m152))

        if theoption1phrasal== "CHOKE UP":
            m153= codecs.open(r'phrsalverbs/CHOKE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m153))

        if theoption1phrasal== "CHOKE UP1":
            m154= codecs.open(r'phrsalverbs/CHOKE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m154))

        if theoption1phrasal== "LOOK FOR":
            m155= codecs.open(r'phrsalverbs/LOOK FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m155))

        if theoption1phrasal== "BORDER ON1":
            m156= codecs.open(r'phrsalverbs/BORDER ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m156))

        if theoption1phrasal== "CHOKE OUT":
            m157= codecs.open(r'phrsalverbs/CHOKE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m157))

        if theoption1phrasal== "LOOK FORWARD TO":
            m158= codecs.open(r'phrsalverbs/LOOK FORWARD TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m158))

        if theoption1phrasal== "BOSS ABOUT":
            m159= codecs.open(r'phrsalverbs/BOSS ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m159))

        if theoption1phrasal== "CHIP AWAY AT":
            m160= codecs.open(r'phrsalverbs/CHIP AWAY AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m160))

        if theoption1phrasal== "CHOKE OFF":
            m161= codecs.open(r'phrsalverbs/CHOKE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m161))

        if theoption1phrasal== "BOSS AROUND":
            m162= codecs.open(r'phrsalverbs/BOSS AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m162))

        if theoption1phrasal== "CHIME IN":
            m163= codecs.open(r'phrsalverbs/CHIME IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m163))

        if theoption1phrasal== "BANG UP1":
            m164= codecs.open(r'phrsalverbs/BANG UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m164))

        if theoption1phrasal== "LOOK IN":
            m165= codecs.open(r'phrsalverbs/LOOK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m165))

        if theoption1phrasal== "BOTCH UP":
            m166= codecs.open(r'phrsalverbs/BOTCH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m166))

        if theoption1phrasal== "CHILL OUT":
            m167= codecs.open(r'phrsalverbs/CHILL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m167))

        if theoption1phrasal== "LOOK IN ON":
            m168= codecs.open(r'phrsalverbs/LOOK IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m168))

        if theoption1phrasal== "BOTTLE AWAY":
            m169= codecs.open(r'phrsalverbs/BOTTLE AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m169))

        if theoption1phrasal== "CHICKEN OUT":
            m170= codecs.open(r'phrsalverbs/CHICKEN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m170))

        if theoption1phrasal== "LOOK INTO":
            m171= codecs.open(r'phrsalverbs/LOOK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m171))

        if theoption1phrasal== "BOTTLE OUT":
            m172= codecs.open(r'phrsalverbs/BOTTLE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m172))

        if theoption1phrasal== "CHEW OVER":
            m173= codecs.open(r'phrsalverbs/CHEW OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m173))

        if theoption1phrasal== "LOOK ON":
            m174= codecs.open(r'phrsalverbs/LOOK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m174))

        if theoption1phrasal== "COME TO":
            m175= codecs.open(r'phrsalverbs/COME TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m175))

        if theoption1phrasal== "BOTTLE UP":
            m176= codecs.open(r'phrsalverbs/BOTTLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m176))

        if theoption1phrasal== "CHEW UP":
            m177= codecs.open(r'phrsalverbs/CHEW UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m177))

        if theoption1phrasal== "LOOK ON AS":
            m178= codecs.open(r'phrsalverbs/LOOK ON AS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m178))

        if theoption1phrasal== "BOTTOM OUT":
            m179= codecs.open(r'phrsalverbs/BOTTOM OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m179))

        if theoption1phrasal== "CHEW OUT":
            m180= codecs.open(r'phrsalverbs/CHEW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m180))

        if theoption1phrasal== "CHEW UP1":
            m181= codecs.open(r'phrsalverbs/CHEW UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m181))

        if theoption1phrasal== "BOUNCE INTO":
            m182= codecs.open(r'phrsalverbs/BOUNCE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m182))

        if theoption1phrasal== "CHEW ON":
            m183= codecs.open(r'phrsalverbs/CHEW ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m183))

        if theoption1phrasal== "LOOK OUT":
            m184= codecs.open(r'phrsalverbs/LOOK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m184))

        if theoption1phrasal== "BOUNCE BACK":
            m185= codecs.open(r'phrsalverbs/BOUNCE BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m185))

        if theoption1phrasal== "KEY TO":
            m186= codecs.open(r'phrsalverbs/KEY TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m186))

        if theoption1phrasal== "CHEER UP1":
            m187= codecs.open(r'phrsalverbs/CHEER UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m187))

        if theoption1phrasal== "CHEW OFF":
            m188= codecs.open(r'phrsalverbs/CHEW OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m188))

        if theoption1phrasal== "BOUNCE OFF":
            m189= codecs.open(r'phrsalverbs/BOUNCE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m189))

        if theoption1phrasal== "CHEER ON":
            m190= codecs.open(r'phrsalverbs/CHEER ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m190))

        if theoption1phrasal== "LOOK OUT FOR":
            m191= codecs.open(r'phrsalverbs/LOOK OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m191))

        if theoption1phrasal== "BOW DOWN TO":
            m192= codecs.open(r'phrsalverbs/BOW DOWN TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m192))

        if theoption1phrasal== "CHECK OVER":
            m193= codecs.open(r'phrsalverbs/CHECK OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m193))

        if theoption1phrasal== "CHECK UP ON":
            m194= codecs.open(r'phrsalverbs/CHECK UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m194))

        if theoption1phrasal== "BOW DOWN TO1":
            m195= codecs.open(r'phrsalverbs/BOW DOWN TO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m195))

        if theoption1phrasal== "CHECK OUT":
            m196= codecs.open(r'phrsalverbs/CHECK OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m196))

        if theoption1phrasal== "BANK ON":
            m197= codecs.open(r'phrsalverbs/BANK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m197))

        if theoption1phrasal== "CHECK OUT OF":
            m198= codecs.open(r'phrsalverbs/CHECK OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m198))

        if theoption1phrasal== "BOW OUT":
            m199= codecs.open(r'phrsalverbs/BOW OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m199))

        if theoption1phrasal== "CHECK OUT1":
            m200= codecs.open(r'phrsalverbs/CHECK OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m200))

        if theoption1phrasal== "LOOK OUT FOR1":
            m201= codecs.open(r'phrsalverbs/LOOK OUT FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m201))

        if theoption1phrasal== "BOW TO":
            m202= codecs.open(r'phrsalverbs/BOW TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m202))

        if theoption1phrasal== "CHECK OUT2":
            m203= codecs.open(r'phrsalverbs/CHECK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m203))

        if theoption1phrasal== "LOOK OVER":
            m204= codecs.open(r'phrsalverbs/LOOK OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m204))

        if theoption1phrasal== "BOWL OUT":
            m205= codecs.open(r'phrsalverbs/BOWL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m205))

        if theoption1phrasal== "CHECK OFF":
            m206= codecs.open(r'phrsalverbs/CHECK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m206))

        if theoption1phrasal== "LOOK ROUND":
            m207= codecs.open(r'phrsalverbs/LOOK ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m207))

        if theoption1phrasal== "FILL IN2":
            m208= codecs.open(r'phrsalverbs/FILL IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m208))

        if theoption1phrasal== "KEY UP":
            m209= codecs.open(r'phrsalverbs/KEY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m209))

        if theoption1phrasal== "BOWL OVER":
            m210= codecs.open(r'phrsalverbs/BOWL OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m210))

        if theoption1phrasal== "CHECK IN":
            m211= codecs.open(r'phrsalverbs/CHECK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m211))

        if theoption1phrasal== "CHECK INTO":
            m212= codecs.open(r'phrsalverbs/CHECK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m212))

        if theoption1phrasal== "BOWL OVER1":
            m213= codecs.open(r'phrsalverbs/BOWL OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m213))

        if theoption1phrasal== "CHECK BY":
            m214= codecs.open(r'phrsalverbs/CHECK BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m214))

        if theoption1phrasal== "LOOK THROUGH":
            m215= codecs.open(r'phrsalverbs/LOOK THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m215))

        if theoption1phrasal== "BOX IN":
            m216= codecs.open(r'phrsalverbs/BOX IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m216))

        if theoption1phrasal== "CHEAT OUT OF":
            m217= codecs.open(r'phrsalverbs/CHEAT OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m217))

        if theoption1phrasal== "LOOK TO":
            m218= codecs.open(r'phrsalverbs/LOOK TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m218))

        if theoption1phrasal== "BOX UP":
            m219= codecs.open(r'phrsalverbs/BOX UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m219))

        if theoption1phrasal== "COME TO1":
            m220= codecs.open(r'phrsalverbs/COME TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m220))

        if theoption1phrasal== "CHEAT ON":
            m221= codecs.open(r'phrsalverbs/CHEAT ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m221))

        if theoption1phrasal== "LOOK UP":
            m222= codecs.open(r'phrsalverbs/LOOK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m222))

        if theoption1phrasal== "BRACE UP":
            m223= codecs.open(r'phrsalverbs/BRACE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m223))

        if theoption1phrasal== "CHAT UP":
            m224= codecs.open(r'phrsalverbs/CHAT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m224))

        if theoption1phrasal== "CHEAT ON1":
            m225= codecs.open(r'phrsalverbs/CHEAT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m225))

        if theoption1phrasal== "BRANCH OUT":
            m226= codecs.open(r'phrsalverbs/BRANCH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m226))

        if theoption1phrasal== "CHAT AWAY":
            m227= codecs.open(r'phrsalverbs/CHAT AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m227))

        if theoption1phrasal== "LOOK UP1":
            m228= codecs.open(r'phrsalverbs/LOOK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m228))

        if theoption1phrasal== "BREAK AWAY":
            m229= codecs.open(r'phrsalverbs/BREAK AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m229))

        if theoption1phrasal== "CHASE UP":
            m230= codecs.open(r'phrsalverbs/CHASE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m230))

        if theoption1phrasal== "KICK ABOUT":
            m231= codecs.open(r'phrsalverbs/KICK ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m231))

        if theoption1phrasal== "CHASE UP1":
            m232= codecs.open(r'phrsalverbs/CHASE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m232))

        if theoption1phrasal== "BREAK DOWN":
            m233= codecs.open(r'phrsalverbs/BREAK DOWN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m233))

        if theoption1phrasal== "CHASE UP2":
            m234= codecs.open(r'phrsalverbs/CHASE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m234))

        if theoption1phrasal== "LOOK UP2":
            m235= codecs.open(r'phrsalverbs/LOOK UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m235))

        if theoption1phrasal== "BREAK DOWN1":
            m236= codecs.open(r'phrsalverbs/BREAK DOWN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m236))

        if theoption1phrasal== "CHASE DOWN":
            m237= codecs.open(r'phrsalverbs/CHASE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m237))

        if theoption1phrasal== "CHASE OFF":
            m238= codecs.open(r'phrsalverbs/CHASE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m238))

        if theoption1phrasal== "BREAK FOR":
            m239= codecs.open(r'phrsalverbs/BREAK FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m239))

        if theoption1phrasal== "CHARGE UP":
            m240= codecs.open(r'phrsalverbs/CHARGE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m240))

        if theoption1phrasal== "CHARGE WITH":
            m241= codecs.open(r'phrsalverbs/CHARGE WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m241))

        if theoption1phrasal== "BARGAIN DOWN":
            m242= codecs.open(r'phrsalverbs/BARGAIN DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m242))

        if theoption1phrasal== "BREAK IN":
            m243= codecs.open(r'phrsalverbs/BREAK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m243))

        if theoption1phrasal== "LOOK UP TO":
            m244= codecs.open(r'phrsalverbs/LOOK UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m244))

        if theoption1phrasal== "CHANGE OVER":
            m245= codecs.open(r'phrsalverbs/CHANGE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m245))

        if theoption1phrasal== "BREAK IN1":
            m246= codecs.open(r'phrsalverbs/BREAK IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m246))

        if theoption1phrasal== "CHANCE UPON":
            m247= codecs.open(r'phrsalverbs/CHANCE UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m247))

        if theoption1phrasal== "LOOK UPON AS":
            m248= codecs.open(r'phrsalverbs/LOOK UPON AS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m248))

        if theoption1phrasal== "BREAK IN2":
            m249= codecs.open(r'phrsalverbs/BREAK IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m249))

        if theoption1phrasal== "BREAK IN3":
            m250= codecs.open(r'phrsalverbs/BREAK IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(m250))

        if theoption1phrasal== "CHALK UP":
            n1= codecs.open(r'phrsalverbs/CHALK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n1))

        if theoption1phrasal== "CHALK UP TO":
            n2= codecs.open(r'phrsalverbs/CHALK UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n2))

        if theoption1phrasal== "BREAK IN4":
            n3= codecs.open(r'phrsalverbs/BREAK IN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n3))

        if theoption1phrasal== "COME THROUGH WITH":
            n4= codecs.open(r'phrsalverbs/COME THROUGH WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n4))

        if theoption1phrasal== "CHALK OUT":
            n5= codecs.open(r'phrsalverbs/CHALK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n5))

        if theoption1phrasal== "LOOSE OFF":
            n6= codecs.open(r'phrsalverbs/LOOSE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n6))

        if theoption1phrasal== "BREAK INTO":
            n7= codecs.open(r'phrsalverbs/BREAK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n7))

        if theoption1phrasal== "CAVE IN":
            n8= codecs.open(r'phrsalverbs/CAVE IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n8))

        if theoption1phrasal== "LOOSEN UP":
            n9= codecs.open(r'phrsalverbs/LOOSEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n9))

        if theoption1phrasal== "BREAK INTO1":
            n10= codecs.open(r'phrsalverbs/BREAK INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n10))

        if theoption1phrasal== "CATER TO":
            n11= codecs.open(r'phrsalverbs/CATER TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n11))

        if theoption1phrasal== "CAVE IN1":
            n12= codecs.open(r'phrsalverbs/CAVE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n12))

        if theoption1phrasal== "BREAK INTO2":
            n13= codecs.open(r'phrsalverbs/BREAK INTO2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n13))

        if theoption1phrasal== "CATCH UP WITH":
            n14= codecs.open(r'phrsalverbs/CATCH UP WITH4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n14))

        if theoption1phrasal== "KICK AROUND":
            n15= codecs.open(r'phrsalverbs/KICK AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n15))

        if theoption1phrasal== "CATER FOR":
            n16= codecs.open(r'phrsalverbs/CATER FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n16))

        if theoption1phrasal== "BREAK OFF":
            n17= codecs.open(r'phrsalverbs/BREAK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n17))

        if theoption1phrasal== "CATCH UP WITH1":
            n18= codecs.open(r'phrsalverbs/CATCH UP WITH3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n18))

        if theoption1phrasal== "LOOSE ON":
            n19= codecs.open(r'phrsalverbs/LOOSE ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n19))

        if theoption1phrasal== "BREAK OFF1":
            n20= codecs.open(r'phrsalverbs/BREAK OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n20))

        if theoption1phrasal== "CATCH UP WITH2":
            n21= codecs.open(r'phrsalverbs/CATCH UP WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n21))

        if theoption1phrasal== "LOOSE UPON":
            n22= codecs.open(r'phrsalverbs/LOOSE UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n22))

        if theoption1phrasal== "BREAK OUT":
            n23= codecs.open(r'phrsalverbs/BREAK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n23))

        if theoption1phrasal== "CATCH UP WITH3":
            n24= codecs.open(r'phrsalverbs/CATCH UP WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n24))

        if theoption1phrasal== "LORD IT OVER":
            n25= codecs.open(r'phrsalverbs/LORD IT OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n25))

        if theoption1phrasal== "BARGAIN FOR":
            n26= codecs.open(r'phrsalverbs/BARGAIN FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n26))

        if theoption1phrasal== "BREAK OUT IN":
            n27= codecs.open(r'phrsalverbs/BREAK OUT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n27))

        if theoption1phrasal== "CATCH UP ON":
            n28= codecs.open(r'phrsalverbs/CATCH UP ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n28))

        if theoption1phrasal== "LOSE OUT":
            n29= codecs.open(r'phrsalverbs/LOSE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n29))

        if theoption1phrasal== "BREAK OUT OF":
            n30= codecs.open(r'phrsalverbs/BREAK OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n30))

        if theoption1phrasal== "CATCH UP ON1":
            n31= codecs.open(r'phrsalverbs/CATCH UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n31))

        if theoption1phrasal== "CATCH UP":
            n32= codecs.open(r'phrsalverbs/CATCH UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n32))

        if theoption1phrasal== "CATCH UP IN":
            n33= codecs.open(r'phrsalverbs/CATCH UP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n33))

        if theoption1phrasal== "BREAK THROUGH":
            n34= codecs.open(r'phrsalverbs/BREAK THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n34))

        if theoption1phrasal== "CATCH UP1":
            n35= codecs.open(r'phrsalverbs/CATCH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n35))

        if theoption1phrasal== "LOSE OUT ON":
            n36= codecs.open(r'phrsalverbs/LOSE OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n36))

        if theoption1phrasal== "COME THROUGH":
            n37= codecs.open(r'phrsalverbs/COME THROUGH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n37))

        if theoption1phrasal== "BREAK UP":
            n38= codecs.open(r'phrsalverbs/BREAK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n38))

        if theoption1phrasal== "CATCH OUT":
            n39= codecs.open(r'phrsalverbs/CATCH OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n39))

        if theoption1phrasal== "LOSE OUT TO":
            n40= codecs.open(r'phrsalverbs/LOSE OUT TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n40))

        if theoption1phrasal== "BREAK UP1":
            n41= codecs.open(r'phrsalverbs/BREAK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n41))

        if theoption1phrasal== "CATCH OUT1":
            n42= codecs.open(r'phrsalverbs/CATCH OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n42))

        if theoption1phrasal== "MAGIC AWAY":
            n43= codecs.open(r'phrsalverbs/MAGIC AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n43))

        if theoption1phrasal== "BREAK UP2":
            n44= codecs.open(r'phrsalverbs/BREAK UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n44))

        if theoption1phrasal== "CATCH OUT2":
            n45= codecs.open(r'phrsalverbs/CATCH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n45))

        if theoption1phrasal== "LUCK INTO":
            n46= codecs.open(r'phrsalverbs/LUCK INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n46))

        if theoption1phrasal== "BREAK UP3":
            n47= codecs.open(r'phrsalverbs/BREAK UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n47))

        if theoption1phrasal== "KICK AROUND WITH":
            n48= codecs.open(r'phrsalverbs/KICK AROUND WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n48))

        if theoption1phrasal== "CATCH ON":
            n49= codecs.open(r'phrsalverbs/CATCH ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n49))

        if theoption1phrasal== "LUCK OUT":
            n50= codecs.open(r'phrsalverbs/LUCK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n50))

        if theoption1phrasal== "BREEZE ALONG":
            n51= codecs.open(r'phrsalverbs/BREEZE ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n51))

        if theoption1phrasal== "CATCH ON1":
            n52= codecs.open(r'phrsalverbs/CATCH ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n52))

        if theoption1phrasal== "LUST AFTER":
            n53= codecs.open(r'phrsalverbs/LUST AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n53))

        if theoption1phrasal== "BREEZE IN":
            n54= codecs.open(r'phrsalverbs/BREEZE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n54))

        if theoption1phrasal== "CATCH AT":
            n55= codecs.open(r'phrsalverbs/CATCH AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n55))

        if theoption1phrasal== "LUST AFTER1":
            n56= codecs.open(r'phrsalverbs/LUST AFTER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n56))

        if theoption1phrasal== "BREEZE INTO":
            n57= codecs.open(r'phrsalverbs/BREEZE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n57))

        if theoption1phrasal== "CAST UP":
            n58= codecs.open(r'phrsalverbs/CAST UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n58))

        if theoption1phrasal== "BARGE IN":
            n59= codecs.open(r'phrsalverbs/BARGE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n59))

        if theoption1phrasal== "MAKE AFTER":
            n60= codecs.open(r'phrsalverbs/MAKE AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n60))

        if theoption1phrasal== "BREEZE THROUGH":
            n61= codecs.open(r'phrsalverbs/BREEZE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n61))

        if theoption1phrasal== "CAST ROUND FOR":
            n62= codecs.open(r'phrsalverbs/CAST ROUND FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n62))

        if theoption1phrasal== "MAKE AWAY WITH":
            n63= codecs.open(r'phrsalverbs/MAKE AWAY WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n63))

        if theoption1phrasal== "BREED OUT":
            n64= codecs.open(r'phrsalverbs/BREED OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n64))

        if theoption1phrasal== "CAST OUT":
            n65= codecs.open(r'phrsalverbs/CAST OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n65))

        if theoption1phrasal== "MAKE DO WITH":
            n66= codecs.open(r'phrsalverbs/MAKE DO WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n66))

        if theoption1phrasal== "BRICK IN":
            n67= codecs.open(r'phrsalverbs/BRICK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n67))

        if theoption1phrasal== "CAST OFF":
            n68= codecs.open(r'phrsalverbs/CAST OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n68))

        if theoption1phrasal== "MAKE FOR":
            n69= codecs.open(r'phrsalverbs/MAKE FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n69))

        if theoption1phrasal== "FIND OUT1":
            n70= codecs.open(r'phrsalverbs/FIND OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n70))

        if theoption1phrasal== "COME THROUGH1":
            n71= codecs.open(r'phrsalverbs/COME THROUGH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n71))

        if theoption1phrasal== "BRICK UP":
            n72= codecs.open(r'phrsalverbs/BRICK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n72))

        if theoption1phrasal== "CAST OFF1":
            n73= codecs.open(r'phrsalverbs/CAST OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n73))

        if theoption1phrasal== "MAKE FOR1":
            n74= codecs.open(r'phrsalverbs/MAKE FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n74))

        if theoption1phrasal== "BRIGHTEN UP":
            n75= codecs.open(r'phrsalverbs/BRIGHTEN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n75))

        if theoption1phrasal== "CAST ASIDE":
            n76= codecs.open(r'phrsalverbs/CAST ASIDE.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n76))

        if theoption1phrasal== "MAKE INTO":
            n77= codecs.open(r'phrsalverbs/MAKE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n77))

        if theoption1phrasal== "BRIGHTEN UP1":
            n78= codecs.open(r'phrsalverbs/BRIGHTEN UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n78))

        if theoption1phrasal== "CAST AROUND FOR":
            n79= codecs.open(r'phrsalverbs/CAST AROUND FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n79))

        if theoption1phrasal== "MAKE IT":
            n80= codecs.open(r'phrsalverbs/MAKE IT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n80))

        if theoption1phrasal== "BRIGHTEN UP2":
            n81= codecs.open(r'phrsalverbs/BRIGHTEN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n81))

        if theoption1phrasal== "KICK BACK":
            n82= codecs.open(r'phrsalverbs/KICK BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n82))

        if theoption1phrasal== "CAST ABOUT FOR":
            n83= codecs.open(r'phrsalverbs/CAST ABOUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n83))

        if theoption1phrasal== "MAKE IT UP TO":
            n84= codecs.open(r'phrsalverbs/MAKE IT UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n84))

        if theoption1phrasal== "BRUSH OFF1":
            n85= codecs.open(r'phrsalverbs/BRUSH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n85))

        if theoption1phrasal== "CASH UP":
            n86= codecs.open(r'phrsalverbs/CASH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n86))

        if theoption1phrasal== "MAKE UP":
            n87= codecs.open(r'phrsalverbs/MAKE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n87))

        if theoption1phrasal== "BRUSH UP":
            n88= codecs.open(r'phrsalverbs/BRUSH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n88))

        if theoption1phrasal== "CASH OUT":
            n89= codecs.open(r'phrsalverbs/CASH OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n89))

        if theoption1phrasal== "MAKE UP1":
            n90= codecs.open(r'phrsalverbs/MAKE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n90))

        if theoption1phrasal== "BUBBLE OVER":
            n91= codecs.open(r'phrsalverbs/BUBBLE OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n91))

        if theoption1phrasal== "CASH OUT1":
            n92= codecs.open(r'phrsalverbs/CASH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n92))

        if theoption1phrasal== "BARGE INTO":
            n93= codecs.open(r'phrsalverbs/BARGE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n93))

        if theoption1phrasal== "MAKE TOWARDS":
            n94= codecs.open(r'phrsalverbs/MAKE TOWARDS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n94))

        if theoption1phrasal== "BUCK UP":
            n95= codecs.open(r'phrsalverbs/BUCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n95))

        if theoption1phrasal== "CASH IN ON":
            n96= codecs.open(r'phrsalverbs/CASH IN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n96))

        if theoption1phrasal== "MAKE OVER":
            n97= codecs.open(r'phrsalverbs/MAKE OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n97))

        if theoption1phrasal== "BUCK UP1":
            n98= codecs.open(r'phrsalverbs/BUCK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n98))

        if theoption1phrasal== "CASH IN":
            n99= codecs.open(r'phrsalverbs/CASH IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n99))

        if theoption1phrasal== "MAKE OUT":
            n100= codecs.open(r'phrsalverbs/MAKE OUT6.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n100))

        if theoption1phrasal== "BUCKET DOWN":
            n101= codecs.open(r'phrsalverbs/BUCKET DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n101))

        if theoption1phrasal== "CARVE UP":
            n102= codecs.open(r'phrsalverbs/CARVE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n102))

        if theoption1phrasal== "MAKE OF":
            n103= codecs.open(r'phrsalverbs/MAKE OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n103))

        if theoption1phrasal== "COME THROUGH2":
            n104= codecs.open(r'phrsalverbs/COME THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n104))

        if theoption1phrasal== "BUCKLE DOWN":
            n105= codecs.open(r'phrsalverbs/BUCKLE DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n105))

        if theoption1phrasal== "CARVE UP1":
            n106= codecs.open(r'phrsalverbs/CARVE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n106))

        if theoption1phrasal== "MAKE OFF":
            n107= codecs.open(r'phrsalverbs/MAKE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n107))

        if theoption1phrasal== "BUCKLE UP":
            n108= codecs.open(r'phrsalverbs/BUCKLE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n108))

        if theoption1phrasal== "CARVE OUT":
            n109= codecs.open(r'phrsalverbs/CARVE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n109))

        if theoption1phrasal== "MAKE OFF WITH":
            n110= codecs.open(r'phrsalverbs/MAKE OFF WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n110))

        if theoption1phrasal== "BUCKLE UP1":
            n111= codecs.open(r'phrsalverbs/BUCKLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n111))

        if theoption1phrasal== "CART OFF":
            n112= codecs.open(r'phrsalverbs/CART OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n112))

        if theoption1phrasal== "MAKE OUT1":
            n113= codecs.open(r'phrsalverbs/MAKE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n113))

        if theoption1phrasal== "BUCKLE UNDER":
            n114= codecs.open(r'phrsalverbs/BUCKLE UNDER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n114))

        if theoption1phrasal== "KICK BACK1":
            n115= codecs.open(r'phrsalverbs/KICK BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n115))

        if theoption1phrasal== "CART OFF1":
            n116= codecs.open(r'phrsalverbs/CART OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n116))

        if theoption1phrasal== "MAKE OUT2":
            n117= codecs.open(r'phrsalverbs/MAKE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n117))

        if theoption1phrasal== "BUDGE UP":
            n118= codecs.open(r'phrsalverbs/BUDGE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n118))

        if theoption1phrasal== "CARRY THROUGH":
            n119= codecs.open(r'phrsalverbs/CARRY THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n119))

        if theoption1phrasal== "MAKE OUT3":
            n120= codecs.open(r'phrsalverbs/MAKE OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n120))

        if theoption1phrasal== "BUFF UP":
            n121= codecs.open(r'phrsalverbs/BUFF UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n121))

        if theoption1phrasal== "CARRY OVER":
            n122= codecs.open(r'phrsalverbs/CARRY OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n122))

        if theoption1phrasal== "MAKE OUT4":
            n123= codecs.open(r'phrsalverbs/MAKE OUT3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n123))

        if theoption1phrasal== "BUFF UP ON":
            n124= codecs.open(r'phrsalverbs/BUFF UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n124))

        if theoption1phrasal== "CARRY OUT":
            n125 =codecs.open(r'phrsalverbs/CARRY OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n125))

        if theoption1phrasal== "BASH UP":
            n126= codecs.open(r'phrsalverbs/BASH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n126))

        if theoption1phrasal== "MAKE OUT5":
            n127= codecs.open(r'phrsalverbs/MAKE OUT4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n127))

        if theoption1phrasal== "BUFF UP1":
            n128= codecs.open(r'phrsalverbs/BUFF UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n128))

        if theoption1phrasal== "CARRY OUT1":
            n129= codecs.open(r'phrsalverbs/CARRY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n129))

        if theoption1phrasal== "MAKE OUT6":
            n130= codecs.open(r'phrsalverbs/MAKE OUT5.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n130))

        if theoption1phrasal== "BUG OFF":
            n131= codecs.open(r'phrsalverbs/BUG OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n131))

        if theoption1phrasal== "CARRY ON WITH":
            n132= codecs.open(r'phrsalverbs/CARRY ON WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n132))

        if theoption1phrasal== "MAKE UP2":
            n133= codecs.open(r'phrsalverbs/MAKE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n133))

        if theoption1phrasal== "BUG OUT":
            n134= codecs.open(r'phrsalverbs/BUG OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n134))

        if theoption1phrasal== "CARRY ON":
            n135= codecs.open(r'phrsalverbs/CARRY ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n135))

        if theoption1phrasal== "MAKE UP FOR":
            n136= codecs.open(r'phrsalverbs/MAKE UP FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n136))

        if theoption1phrasal== "COME ROUND":
            n137= codecs.open(r'phrsalverbs/COME ROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n137))

        if theoption1phrasal== "BUG OUT1":
            n138= codecs.open(r'phrsalverbs/BUG OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n138))

        if theoption1phrasal== "CARRY ON1":
            n139= codecs.open(r'phrsalverbs/CARRY ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n139))

        if theoption1phrasal== "MAKE UP TO":
            n140= codecs.open(r'phrsalverbs/MAKE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n140))

        if theoption1phrasal== "BULK OUT":
            n141= codecs.open(r'phrsalverbs/BULK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n141))

        if theoption1phrasal== "CARRY OFF":
            n142= codecs.open(r'phrsalverbs/CARRY OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n142))

        if theoption1phrasal== "MAKE WITH":
            n143= codecs.open(r'phrsalverbs/MAKE WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n143))

        if theoption1phrasal== "BULK UP":
            n144= codecs.open(r'phrsalverbs/BULK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n144))

        if theoption1phrasal== "CARRY OFF1":
            n145= codecs.open(r'phrsalverbs/CARRY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n145))

        if theoption1phrasal== "MAN DOWN":
            n146= codecs.open(r'phrsalverbs/MAN DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n146))

        if theoption1phrasal== "BUMP INTO":
            n147= codecs.open(r'phrsalverbs/BUMP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n147))

        if theoption1phrasal== "KICK BACK2":
            n148= codecs.open(r'phrsalverbs/KICK BACK2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n148))

        if theoption1phrasal== "CARRY FORWARD":
            n149= codecs.open(r'phrsalverbs/CARRY FORWARD1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n149))

        if theoption1phrasal== "MAN UP":
            n150= codecs.open(r'phrsalverbs/MAN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n150))

        if theoption1phrasal== "BUMP OFF":
            n151= codecs.open(r'phrsalverbs/BUMP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n151))

        if theoption1phrasal== "CARRY FORWARD1":
            n152= codecs.open(r'phrsalverbs/CARRY FORWARD.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n152))

        if theoption1phrasal== "MARK DOWN":
            n153= codecs.open(r'phrsalverbs/MARK DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n153))

        if theoption1phrasal== "BUMP UP":
            n154= codecs.open(r'phrsalverbs/BUMP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n154))

        if theoption1phrasal== "CARRIED AWAY":
            n155= codecs.open(r'phrsalverbs/CARRIED AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n155))

        if theoption1phrasal== "MARK DOWN1":
            n156= codecs.open(r'phrsalverbs/MARK DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n156))

        if theoption1phrasal== "BUNDLE OFF":
            n157= codecs.open(r'phrsalverbs/BUNDLE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n157))

        if theoption1phrasal== "CARE FOR":
            n158= codecs.open(r'phrsalverbs/CARE FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n158))

        if theoption1phrasal== "BASH ABOUT":
            n159= codecs.open(r'phrsalverbs/BASH ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n159))

        if theoption1phrasal== "MARK DOWN AS":
            n160= codecs.open(r'phrsalverbs/MARK DOWN AS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n160))

        if theoption1phrasal== "BUNDLE OUT":
            n161= codecs.open(r'phrsalverbs/BUNDLE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n161))

        if theoption1phrasal== "CAP OFF":
            n162= codecs.open(r'phrsalverbs/CAP OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n162))

        if theoption1phrasal== "MARK OFF":
            n163= codecs.open(r'phrsalverbs/MARK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n163))

        if theoption1phrasal== "BUNDLE UP":
            n164= codecs.open(r'phrsalverbs/BUNDLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n164))

        if theoption1phrasal== "CANCEL OUT":
            n165= codecs.open(r'phrsalverbs/CANCEL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n165))

        if theoption1phrasal== "CLAM UP":
            n166= codecs.open(r'phrsalverbs/CLAM UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n166))

        if theoption1phrasal== "BUNDLE UP1":
            n167= codecs.open(r'phrsalverbs/BUNDLE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n167))

        if theoption1phrasal== "MARK OUT":
            n168= codecs.open(r'phrsalverbs/MARK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n168))

        if theoption1phrasal== "CALM DOWN":
            n169= codecs.open(r'phrsalverbs/CALM DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n169))

        if theoption1phrasal== "COME ROUND1":
            n170= codecs.open(r'phrsalverbs/COME ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n170))

        if theoption1phrasal== "BUNK OFF":
            n171= codecs.open(r'phrsalverbs/BUNK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n171))

        if theoption1phrasal== "MARK OUT FOR":
            n172= codecs.open(r'phrsalverbs/MARK OUT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n172))

        if theoption1phrasal== "CALL UP":
            n173= codecs.open(r'phrsalverbs/CALL UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n173))

        if theoption1phrasal== "BUOY UP":
            n174= codecs.open(r'phrsalverbs/BUOY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n174))

        if theoption1phrasal== "MARK OUT FROM":
            n175= codecs.open(r'phrsalverbs/MARK OUT FROM.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n175))

        if theoption1phrasal== "CALL UP1":
            n176= codecs.open(r'phrsalverbs/CALL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n176))

        if theoption1phrasal== "BUOY UP1":
            n177= codecs.open(r'phrsalverbs/BUOY UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n177))

        if theoption1phrasal== "MARK UP":
            n178= codecs.open(r'phrsalverbs/MARK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n178))

        if theoption1phrasal== "CALL ROUND":
            n179= codecs.open(r'phrsalverbs/CALL ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n179))

        if theoption1phrasal== "BURN DOWN":
            n180= codecs.open(r'phrsalverbs/BURN DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n180))

        if theoption1phrasal== "ASK AROUND2":
            n181= codecs.open(r'phrsalverbs/ASK AROUND2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n181))

        if theoption1phrasal== "KICK DOWN":
            n182= codecs.open(r'phrsalverbs/KICK DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n182))

        if theoption1phrasal== "MARRY IN":
            n183= codecs.open(r'phrsalverbs/MARRY IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n183))

        if theoption1phrasal== "CALL OUT":
            n184= codecs.open(r'phrsalverbs/CALL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n184))

        if theoption1phrasal== "BURN OFF":
            n185= codecs.open(r'phrsalverbs/BURN OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n185))

        if theoption1phrasal== "MARRY OFF":
            n186= codecs.open(r'phrsalverbs/MARRY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n186))

        if theoption1phrasal== "CALL ON":
            n187= codecs.open(r'phrsalverbs/CALL ON3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n187))

        if theoption1phrasal== "BURN UP":
            n188= codecs.open(r'phrsalverbs/BURN UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n188))

        if theoption1phrasal== "MARRY OUT":
            n189= codecs.open(r'phrsalverbs/MARRY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n189))

        if theoption1phrasal== "CALL ON1":
            n190= codecs.open(r'phrsalverbs/CALL ON2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n190))

        if theoption1phrasal== "BURN UP1":
            n191= codecs.open(r'phrsalverbs/BURN UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n191))

        if theoption1phrasal== "MARRY UP":
            n192= codecs.open(r'phrsalverbs/MARRY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n192))

        if theoption1phrasal== "BASH IN":
            n193= codecs.open(r'phrsalverbs/BASH IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n193))

        if theoption1phrasal== "CALL ON2":
            n194= codecs.open(r'phrsalverbs/CALL ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n194))

        if theoption1phrasal== "BURN UP2":
            n195= codecs.open(r'phrsalverbs/BURN UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n195))

        if theoption1phrasal== "MARRY UP1":
            n196= codecs.open(r'phrsalverbs/MARRY UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n196))

        if theoption1phrasal== "CALL ON3":
            n197= codecs.open(r'phrsalverbs/CALL ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n197))

        if theoption1phrasal== "BURN OUT":
            n198= codecs.open(r'phrsalverbs/BURN OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n198))

        if theoption1phrasal== "MARRY UP2":
            n199= codecs.open(r'phrsalverbs/MARRY UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n199))

        if theoption1phrasal== "CALL OFF":
            n200= codecs.open(r'phrsalverbs/CALL OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n200))

        if theoption1phrasal== "BURST INTO":
            n201= codecs.open(r'phrsalverbs/BURST INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n201))

        if theoption1phrasal== "MASH UP":
            n202= codecs.open(r'phrsalverbs/MASH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n202))

        if theoption1phrasal== "CALL OFF1":
            n203= codecs.open(r'phrsalverbs/CALL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n203))

        if theoption1phrasal== "COME OVER":
            n204= codecs.open(r'phrsalverbs/COME OVER1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n204))

        if theoption1phrasal== "BURST INTO1":
            n205= codecs.open(r'phrsalverbs/BURST INTO1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n205))

        if theoption1phrasal== "MASH UP1":
            n206= codecs.open(r'phrsalverbs/MASH UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n206))

        if theoption1phrasal== "CALL IN":
            n207= codecs.open(r'phrsalverbs/CALL IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n207))

        if theoption1phrasal== "BUST UP":
            n208= codecs.open(r'phrsalverbs/BUST UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n208))

        if theoption1phrasal== "MASH UP2":
            n209= codecs.open(r'phrsalverbs/MASH UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n209))

        if theoption1phrasal== "CALL IN1":
            n210= codecs.open(r'phrsalverbs/CALL IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n210))

        if theoption1phrasal== "BUTTER UP":
            n211= codecs.open(r'phrsalverbs/BUTTER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n211))

        if theoption1phrasal== "MAX OUT":
            n212= codecs.open(r'phrsalverbs/MAX OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n212))

        if theoption1phrasal== "CALL FORTH":
            n213= codecs.open(r'phrsalverbs/CALL FORTH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n213))

        if theoption1phrasal== "BUTTON UP":
            n214= codecs.open(r'phrsalverbs/BUTTON UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n214))

        if theoption1phrasal== "KICK IN":
            n215= codecs.open(r'phrsalverbs/KICK IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n215))

        if theoption1phrasal== "MEASURE AGAINST":
            n216= codecs.open(r'phrsalverbs/MEASURE AGAINST.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n216))

        if theoption1phrasal== "CALL FOR":
            n217= codecs.open(r'phrsalverbs/CALL FOR4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n217))

        if theoption1phrasal== "BUTTON UP1":
            n218= codecs.open(r'phrsalverbs/BUTTON UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n218))

        if theoption1phrasal== "MEASURE OFF":
            n219= codecs.open(r'phrsalverbs/MEASURE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n219))

        if theoption1phrasal== "CALL FOR1":
            n220= codecs.open(r'phrsalverbs/CALL FOR3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n220))

        if theoption1phrasal== "BUY IN":
            n221= codecs.open(r'phrsalverbs/BUY IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n221))

        if theoption1phrasal== "MEASURE OFF1":
            n222= codecs.open(r'phrsalverbs/MEASURE OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n222))

        if theoption1phrasal== "CALL FOR2":
            n223= codecs.open(r'phrsalverbs/CALL FOR2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n223))

        if theoption1phrasal== "BUY INTO":
            n224= codecs.open(r'phrsalverbs/BUY INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n224))

        if theoption1phrasal== "CUT DOWN3":
            n225= codecs.open(r'phrsalverbs/CUT DOWN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n225))

        if theoption1phrasal== "BASH OUT":
            n226= codecs.open(r'phrsalverbs/BASH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n226))

        if theoption1phrasal== "CALL FOR3":
            n227= codecs.open(r'phrsalverbs/CALL FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n227))

        if theoption1phrasal== "BUY OFF":
            n228= codecs.open(r'phrsalverbs/BUY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n228))

        if theoption1phrasal== "MEASURE OUT":
            n229= codecs.open(r'phrsalverbs/MEASURE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n229))

        if theoption1phrasal== "CALL FOR4":
            n230= codecs.open(r'phrsalverbs/CALL FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n230))

        if theoption1phrasal== "BUY OUT":
            n231= codecs.open(r'phrsalverbs/BUY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n231))

        if theoption1phrasal== "MEASURE OUT1":
            n232= codecs.open(r'phrsalverbs/MEASURE OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n232))

        if theoption1phrasal== "CALL BACK":
            n233= codecs.open(r'phrsalverbs/CALL BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n233))

        if theoption1phrasal== "BUY UP":
            n234= codecs.open(r'phrsalverbs/BUY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n234))

        if theoption1phrasal== "MEASURE UP":
            n235= codecs.open(r'phrsalverbs/MEASURE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n235))

        if theoption1phrasal== "CALL AT":
            n236= codecs.open(r'phrsalverbs/CALL AT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n236))

        if theoption1phrasal== "COME OVER1":
            n237= codecs.open(r'phrsalverbs/COME OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n237))

        if theoption1phrasal== "BUZZ AROUND":
            n238= codecs.open(r'phrsalverbs/BUZZ AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n238))

        if theoption1phrasal== "MEASURE UP1":
            n239= codecs.open(r'phrsalverbs/MEASURE UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n239))

        if theoption1phrasal== "CALL AROUND":
            n240= codecs.open(r'phrsalverbs/CALL AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n240))

        if theoption1phrasal== "BUZZ OFF":
            n241= codecs.open(r'phrsalverbs/BUZZ OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n241))

        if theoption1phrasal== "MEASURE UP2":
            n242= codecs.open(r'phrsalverbs/MEASURE UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n242))

        if theoption1phrasal== "CALL AFTER":
            n243= codecs.open(r'phrsalverbs/CALL AFTER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n243))

        if theoption1phrasal== "BUZZ OFF1":
            n244= codecs.open(r'phrsalverbs/BUZZ OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n244))

        if theoption1phrasal== "MEASURE UP3":
            n245= codecs.open(r'phrsalverbs/MEASURE UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n245))

        if theoption1phrasal== "RISE UP":
            n246= codecs.open(r'phrsalverbs/RISE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n246))

        if theoption1phrasal== "COUNT UPON":
            n247= codecs.open(r'phrsalverbs/COUNT UPON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n247))

        if theoption1phrasal== "KICK IN1":
            n248= codecs.open(r'phrsalverbs/KICK IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n248))

        if theoption1phrasal== "MEASURE UP TO":
            n249= codecs.open(r'phrsalverbs/MEASURE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n249))

        if theoption1phrasal== "ROCK UP":
            n250= codecs.open(r'phrsalverbs/ROCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(n250))






        if theoption1phrasal== "COUNT UPON1":
            o1= codecs.open(r'phrsalverbs/COUNT UPON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o1))

        if theoption1phrasal== "MEET UP":
            o2= codecs.open(r'phrsalverbs/MEET UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o2))

        if theoption1phrasal== "ROLL BACK":
            o3= codecs.open(r'phrsalverbs/ROLL BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o3))

        if theoption1phrasal== "COUNTERACT IN":
            o4= codecs.open(r'phrsalverbs/COUNTERACT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o4))

        if theoption1phrasal== "MEET UP WITH":
            o5= codecs.open(r'phrsalverbs/MEET UP WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o5))

        if theoption1phrasal== "ROLL BACK1":
            o6= codecs.open(r'phrsalverbs/ROLL BACK1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o6))

        if theoption1phrasal== "COUNTERACT OUT":
            o7= codecs.open(r'phrsalverbs/COUNTERACT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o7))

        if theoption1phrasal== "MEET WITH":
            o8= codecs.open(r'phrsalverbs/MEET WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o8))

        if theoption1phrasal== "BAWL OUT":
            o9= codecs.open(r'phrsalverbs/BAWL OUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o9))

        if theoption1phrasal== "ROLL BY":
            o10= codecs.open(r'phrsalverbs/ROLL BY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o10))

        if theoption1phrasal== "COUNTERACT OUT OF":
            o11= codecs.open(r'phrsalverbs/COUNTERACT OUT OF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o11))

        if theoption1phrasal== "MEET WITH1":
            o12= codecs.open(r'phrsalverbs/MEET WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o12))

        if theoption1phrasal== "ROLL IN":
            o13= codecs.open(r'phrsalverbs/ROLL IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o13))

        if theoption1phrasal== "COVER FOR":
            o14= codecs.open(r'phrsalverbs/COVER FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o14))

        if theoption1phrasal== "MELT DOWN":
            o15= codecs.open(r'phrsalverbs/MELT DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o15))

        if theoption1phrasal== "ROLL IN1":
            o16= codecs.open(r'phrsalverbs/ROLL IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o16))

        if theoption1phrasal== "COVER FOR1":
            o17= codecs.open(r'phrsalverbs/COVER FOR1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o17))

        if theoption1phrasal== "MESS ABOUT":
            o18= codecs.open(r'phrsalverbs/MESS ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o18))

        if theoption1phrasal== "MESS ABOUT1":
            o19= codecs.open(r'phrsalverbs/MESS ABOUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o19))

        if theoption1phrasal== "KICK IN2":
            o20= codecs.open(r'phrsalverbs/KICK IN2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o20))

        if theoption1phrasal== "COVER UP":
            o21= codecs.open(r'phrsalverbs/COVER UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o21))

        if theoption1phrasal== "MESS ABOUT2":
            o22= codecs.open(r'phrsalverbs/MESS ABOUT2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o22))

        if theoption1phrasal== "ROLL OFF":
            o23= codecs.open(r'phrsalverbs/ROLL OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o23))

        if theoption1phrasal== "COWBOY UP":
            o24= codecs.open(r'phrsalverbs/COWBOY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o24))

        if theoption1phrasal== "MESS ABOUT WITH":
            o25= codecs.open(r'phrsalverbs/MESS ABOUT WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o25))

        if theoption1phrasal== "ROLL ON":
            o26= codecs.open(r'phrsalverbs/ROLL ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o26))

        if theoption1phrasal== "COZY UP":
            o27= codecs.open(r'phrsalverbs/COZY UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o27))

        if theoption1phrasal== "MESS ABOUT WITH11":
            o28= codecs.open(r'phrsalverbs/MESS ABOUT WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o28))

        if theoption1phrasal== "ROLL ON1":
            o29= codecs.open(r'phrsalverbs/ROLL ON1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o29))

        if theoption1phrasal== "COZY UP TO":
            o30= codecs.open(r'phrsalverbs/COZY UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o30))

        if theoption1phrasal== "COME OUT WITH":
            o31= codecs.open(r'phrsalverbs/COME OUT WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o31))

        if theoption1phrasal== "MESS AROUND":
            o32= codecs.open(r'phrsalverbs/MESS AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o32))

        if theoption1phrasal== "ROLL ON!":
            o33= codecs.open(r'phrsalverbs/ROLL ON!.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o33))

        if theoption1phrasal== "CRACK DOWN ON":
            o34= codecs.open(r'phrsalverbs/CRACK DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o34))

        if theoption1phrasal== "MESS AROUND1":
            o35= codecs.open(r'phrsalverbs/MESS AROUND1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o35))

        if theoption1phrasal== "ROLL OUT":
            o36= codecs.open(r'phrsalverbs/ROLL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o36))

        if theoption1phrasal== "CRACK ON":
            o37= codecs.open(r'phrsalverbs/CRACK ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o37))

        if theoption1phrasal== "MESS AROUND2":
            o38= codecs.open(r'phrsalverbs/MESS AROUND2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o38))

        if theoption1phrasal== "ROLL UP":
            o39= codecs.open(r'phrsalverbs/ROLL UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o39))

        if theoption1phrasal== "CRACK UP":
            o40= codecs.open(r'phrsalverbs/CRACK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o40))

        if theoption1phrasal== "MESS AROUND WITH":
            o41= codecs.open(r'phrsalverbs/MESS AROUND WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o41))

        if theoption1phrasal== "BRING DOWN":
            o42= codecs.open(r'phrsalverbs/BRING DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o42))

        if theoption1phrasal== "KICK IN3":
            o43= codecs.open(r'phrsalverbs/KICK IN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o43))

        if theoption1phrasal== "ROLL UP!":
            o44= codecs.open(r'phrsalverbs/ROLL UP!.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o44))

        if theoption1phrasal== "CRACK UP1":
            o45= codecs.open(r'phrsalverbs/CRACK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o45))

        if theoption1phrasal== "MESS AROUND WITH1":
            o46= codecs.open(r'phrsalverbs/MESS AROUND WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o46))

        if theoption1phrasal== "ROMP IN":
            o47= codecs.open(r'phrsalverbs/ROMP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o47))

        if theoption1phrasal== "CRACK UP2":
            o48= codecs.open(r'phrsalverbs/CRACK UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o48))

        if theoption1phrasal== "MESS OVER":
            o49= codecs.open(r'phrsalverbs/MESS OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o49))

        if theoption1phrasal== "ROMP THROUGH":
            o50= codecs.open(r'phrsalverbs/ROMP THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o50))

        if theoption1phrasal== "CRACK UP1":
            o51= codecs.open(r'phrsalverbs/CRACK UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o51))

        if theoption1phrasal== "MESS UP":
            o52= codecs.open(r'phrsalverbs/MESS UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o52))

        if theoption1phrasal== "ROOM IN":
            o53= codecs.open(r'phrsalverbs/ROOM IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o53))

        if theoption1phrasal== "ASK ROUND":
            o54= codecs.open(r'phrsalverbs/ASK ROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o54))

        if theoption1phrasal== "CRANK OUT":
            o55= codecs.open(r'phrsalverbs/CRANK OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o55))

        if theoption1phrasal== "MESS UP1":
            o56= codecs.open(r'phrsalverbs/MESS UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o56))

        if theoption1phrasal== "ROOT ABOUT":
            o57= codecs.open(r'phrsalverbs/ROOT ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o57))

        if theoption1phrasal== "CRANK UP":
            o58= codecs.open(r'phrsalverbs/CRANK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o58))

        if theoption1phrasal== "MESS UP2":
            o59= codecs.open(r'phrsalverbs/MESS UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o59))

        if theoption1phrasal== "ROOT AROUND":
            o60= codecs.open(r'phrsalverbs/ROOT AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o60))

        if theoption1phrasal== "CRANK UP1":
            o61= codecs.open(r'phrsalverbs/CRANK UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o61))

        if theoption1phrasal== "MESS WITH":
            o62= codecs.open(r'phrsalverbs/MESS WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o62))

        if theoption1phrasal== "ROOT FOR":
            o63= codecs.open(r'phrsalverbs/ROOT FOR.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o63))

        if theoption1phrasal== "CRANK UP2":
            o64= codecs.open(r'phrsalverbs/CRANK UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o64))

        if theoption1phrasal== "BAWL OUT1":
            o65= codecs.open(r'phrsalverbs/BAWL OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o65))

        if theoption1phrasal== "MESS WITH1":
            o66= codecs.open(r'phrsalverbs/MESS WITH1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o66))

        if theoption1phrasal== "ROOT OUT":
            o67= codecs.open(r'phrsalverbs/ROOT OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o67))

        if theoption1phrasal== "CRASH OUT":
            o68= codecs.open(r'phrsalverbs/CRASH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o68))

        if theoption1phrasal== "MESS WITH2":
            o69= codecs.open(r'phrsalverbs/MESS WITH2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o69))

        if theoption1phrasal== "ROOT OUT1":
            o70= codecs.open(r'phrsalverbs/ROOT OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o70))

        if theoption1phrasal== "CRASH OUT":
            o71= codecs.open(r'phrsalverbs/CRASH OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o71))

        if theoption1phrasal== "MESS WITH3":
            o72= codecs.open(r'phrsalverbs/MESS WITH3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o72))

        if theoption1phrasal== "ROOT UP":
            o73= codecs.open(r'phrsalverbs/ROOT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o73))

        if theoption1phrasal== "CREAM OFF":
            o74= codecs.open(r'phrsalverbs/CREAM OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o74))

        if theoption1phrasal== "METE OUT":
            o75= codecs.open(r'phrsalverbs/METE OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o75))

        if theoption1phrasal== "KICK OFF":
            o76= codecs.open(r'phrsalverbs/KICK OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o76))

        if theoption1phrasal== "ROPE IN":
            o77= codecs.open(r'phrsalverbs/ROPE IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o77))

        if theoption1phrasal== "CREAM OFF1":
            o78= codecs.open(r'phrsalverbs/CREAM OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o78))

        if theoption1phrasal== "CREEP IN":
            o79= codecs.open(r'phrsalverbs/CREEP IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o79))

        if theoption1phrasal== "MILL AROUND":
            o80= codecs.open(r'phrsalverbs/MILL AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o80))

        if theoption1phrasal== "ROPE INTO":
            o81= codecs.open(r'phrsalverbs/ROPE INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o81))

        if theoption1phrasal== "CREEP IN1":
            o82= codecs.open(r'phrsalverbs/CREEP IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o82))

        if theoption1phrasal== "MISS OUT":
            o83= codecs.open(r'phrsalverbs/MISS OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o83))

        if theoption1phrasal== "ROPE OFF":
            o84= codecs.open(r'phrsalverbs/ROPE OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o84))

        if theoption1phrasal== "CREEP INTO":
            o85= codecs.open(r'phrsalverbs/CREEP INTO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o85))

        if theoption1phrasal== "MISS OUT1":
            o86= codecs.open(r'phrsalverbs/MISS OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o86))

        if theoption1phrasal== "COME OUT WITH":
            o87= codecs.open(r'phrsalverbs/COME OUT WITH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o87))

        if theoption1phrasal== "CREEP IN2":
            o88= codecs.open(r'phrsalverbs/CREEP IN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o88))

        if theoption1phrasal== "CREEP OUT":
            o89= codecs.open(r'phrsalverbs/CREEP OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o89))

        if theoption1phrasal== "MISS OUT ON":
            o90= codecs.open(r'phrsalverbs/MISS OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o90))

        if theoption1phrasal== "MISS OUT2":
            o91= codecs.open(r'phrsalverbs/MISS OUT1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o91))

        if theoption1phrasal== "CREEP OUT ON":
            o92= codecs.open(r'phrsalverbs/CREEP OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o92))

        if theoption1phrasal== "MIX UP":
            o93= codecs.open(r'phrsalverbs/MIX UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o93))

        if theoption1phrasal== "MISS OUT ON1":
            o94= codecs.open(r'phrsalverbs/MISS OUT ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o94))

        if theoption1phrasal== "CREEP OVER":
            o95= codecs.open(r'phrsalverbs/CREEP OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o95))

        if theoption1phrasal== "MIX UP1":
            o96= codecs.open(r'phrsalverbs/MIX UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o96))

        if theoption1phrasal== "ROUGH OUT":
            o97= codecs.open(r'phrsalverbs/ROUGH OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o97))

        if theoption1phrasal== "KICK OFF1":
            o98= codecs.open(r'phrsalverbs/KICK OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o98))

        if theoption1phrasal== "CREEP UP ON":
            o99= codecs.open(r'phrsalverbs/CREEP UP ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o99))

        if theoption1phrasal== "MOCK UP":
            o100= codecs.open(r'phrsalverbs/MOCK UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o100))

        if theoption1phrasal== "ROUGH UP":
            o101= codecs.open(r'phrsalverbs/ROUGH UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o101))

        if theoption1phrasal== "CROP UP":
            o102= codecs.open(r'phrsalverbs/CROP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o102))

        if theoption1phrasal== "MOGGY OFF":
            o103= codecs.open(r'phrsalverbs/MOGGY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o103))

        if theoption1phrasal== "ROUND DOWN":
            o104= codecs.open(r'phrsalverbs/ROUND DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o104))

        if theoption1phrasal== "CROSS OFF":
            o105= codecs.open(r'phrsalverbs/CROSS OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o105))

        if theoption1phrasal== "MONKEY AROUND":
            o106= codecs.open(r'phrsalverbs/MONKEY AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o106))

        if theoption1phrasal== "ROUND OFF":
            o107= codecs.open(r'phrsalverbs/ROUND OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o107))

        if theoption1phrasal== "CROSS OUT":
            o108= codecs.open(r'phrsalverbs/CROSS OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o108))

        if theoption1phrasal== "BAWL OUT2":
            o109= codecs.open(r'phrsalverbs/BAWL OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o109))

        if theoption1phrasal== "MOOCH ABOUT":
            o110= codecs.open(r'phrsalverbs/MOOCH ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o110))

        if theoption1phrasal== "ROUND OFF1":
            o111= codecs.open(r'phrsalverbs/ROUND OFF1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o111))

        if theoption1phrasal== "CROSS UP":
            o112= codecs.open(r'phrsalverbs/CROSS UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o112))

        if theoption1phrasal== "MOOCH AROUND":
            o113= codecs.open(r'phrsalverbs/MOOCH AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o113))

        if theoption1phrasal== "ROUND OFF2":
            o114= codecs.open(r'phrsalverbs/ROUND OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o114))

        if theoption1phrasal== "CRUISE THROUGH":
            o115= codecs.open(r'phrsalverbs/CRUISE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o115))

        if theoption1phrasal== "CUT IN3":
            o116= codecs.open(r'phrsalverbs/CUT IN4.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o116))

        if theoption1phrasal== "ROUND ON":
            o117= codecs.open(r'phrsalverbs/ROUND ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o117))

        if theoption1phrasal== "CRUMB DOWN":
            o118= codecs.open(r'phrsalverbs/CRUMB DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o118))

        if theoption1phrasal== "MOP UP":
            o119= codecs.open(r'phrsalverbs/MOP UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o119))

        if theoption1phrasal== "KICK OFF2":
            o120= codecs.open(r'phrsalverbs/KICK OFF2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o120))

        if theoption1phrasal== "ROUND OUT":
            o121= codecs.open(r'phrsalverbs/ROUND OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o121))

        if theoption1phrasal== "CRY OFF":
            o122= codecs.open(r'phrsalverbs/CRY OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o122))

        if theoption1phrasal== "MOP UP1":
            o123= codecs.open(r'phrsalverbs/MOP UP1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o123))

        if theoption1phrasal== "ROUND UP":
            o124= codecs.open(r'phrsalverbs/ROUND UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o124))

        if theoption1phrasal== "CRY OUT":
            o125= codecs.open(r'phrsalverbs/CRY OUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o125))

        if theoption1phrasal== "CUT DOWN ON":
            o126= codecs.open(r'phrsalverbs/CUT DOWN ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o126))

        if theoption1phrasal== "CUT IN4":
            o127= codecs.open(r'phrsalverbs/CUT IN3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o127))

        if theoption1phrasal== "CUDDLE UP":
            o128= codecs.open(r'phrsalverbs/CUDDLE UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o128))

        if theoption1phrasal== "MOP UP2":
            o129= codecs.open(r'phrsalverbs/MOP UP2.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o129))

        if theoption1phrasal== "ROW BACK":
            o130= codecs.open(r'phrsalverbs/ROW BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o130))

        if theoption1phrasal== "ASK OVER":
            o131= codecs.open(r'phrsalverbs/ASK OVER.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o131))

        if theoption1phrasal== "CUDDLE UP TO":
            o132= codecs.open(r'phrsalverbs/CUDDLE UP TO.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o132))

        if theoption1phrasal== "MOP UP3":
            o133= codecs.open(r'phrsalverbs/MOP UP3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o133))

        if theoption1phrasal== "RUB ALONG":
            o134= codecs.open(r'phrsalverbs/RUB ALONG.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o134))

        if theoption1phrasal== "COTTON ON":
            o135= codecs.open(r'phrsalverbs/COTTON ON.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o135))

        if theoption1phrasal== "MOPE ABOUT":
            o136= codecs.open(r'phrsalverbs/MOPE ABOUT.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o136))

        if theoption1phrasal== "RUB DOWN":
            o137= codecs.open(r'phrsalverbs/RUB DOWN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o137))

        if theoption1phrasal== "CUT ACROSS":
            o138= codecs.open(r'phrsalverbs/CUT ACROSS.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o138))

        if theoption1phrasal== "MOPE AROUND":
            o139= codecs.open(r'phrsalverbs/MOPE AROUND.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o139))

        if theoption1phrasal== "RUB DOWN1":
            o140= codecs.open(r'phrsalverbs/RUB DOWN1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o140))

        if theoption1phrasal== "CUT ACROSS1":
            o141= codecs.open(r'phrsalverbs/CUT ACROSS1.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o141))

        if theoption1phrasal== "KICK OFF3":
            o142= codecs.open(r'phrsalverbs/KICK OFF3.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o142))

        if theoption1phrasal== "MOUNT UP":
            o143= codecs.open(r'phrsalverbs/MOUNT UP.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o143))

        if theoption1phrasal== "RUB IN":
            o144= codecs.open(r'phrsalverbs/RUB IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o144))

        if theoption1phrasal== "CUT BACK":
            o145= codecs.open(r'phrsalverbs/CUT BACK.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o145))

        if theoption1phrasal== "MOUTH OFF":
            o146= codecs.open(r'phrsalverbs/MOUTH OFF.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o146))

        if theoption1phrasal== "RUB IT IN":
            o147= codecs.open(r'phrsalverbs/RUB IT IN.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o147))

        if theoption1phrasal== "MUDDLE THROUGH":
            o148= codecs.open(r'phrsalverbs/MUDDLE THROUGH.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o148))

        if theoption1phrasal== "BACK AWAY":
            o149= codecs.open(r'phrsalverbs/BACK AWAY.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(o149))










class Vocabulary_a(Screen):
    global vo,vo1,vo2,vo3,vo4,vo_id
    
            
    db = sqlite3.connect('book.db')
    b = db.cursor()
    b1= db.cursor()
    b2 = db.cursor()
    b3 = db.cursor()
    b4= db.cursor()
    b5 = db.cursor()
    b.execute("select question from vocabulary")
    b1.execute("select wronganswer1 from vocabulary")
    b2.execute("select wronganswer2 from vocabulary")
    b3.execute("select rightanswer from vocabulary")
    b4.execute("select option from vocabulary")
    b5.execute("select num from vocabulary")
    vo= b.fetchall()
    vo1= b1.fetchall()
    vo2= b2.fetchall()
    vo3 = b3.fetchall()
    vo4 = b4.fetchall()
    vo_id= b5.fetchall()
    
    
    
    
     
    
    def on_pre_enter(self, *args):
        
        global vcounter
        
        global the_potion_vocabulary
        global the_voc_id
        vcounter = vcounter + 1
        
        if vcounter == 203:
            vcounter = 1
        myinteger = random.randint(1,2)
        if myinteger == 1:
            self.ids.vocabu.text = str (vo[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v1.text = str (vo1[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v2.text = str (vo2[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v3.text = str (vo3[vcounter]).strip("()").strip(",").strip("''")
            the_potion_vocabulary = str(vo4[vcounter]).strip("()").strip(",").strip("''")
            the_voc_id = str(vo_id[vcounter]).strip("()").strip(",").strip("''")
        else:
            self.ids.vocabu.text = str (vo[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v1.text = str (vo3[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v2.text = str (vo2[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v3.text = str (vo1[vcounter]).strip("()").strip(",").strip("''")
            the_potion_vocabulary = str(vo4[vcounter]).strip("()").strip(",").strip("''")
            the_voc_id = str(vo_id[vcounter]).strip("()").strip(",").strip("''")

    def writeit(self):
        
        f = open("vocabulary.txt","w")
        
        f.write(the_voc_id)
        f.close()

    def stophere1(self):
        f = open("stophere.txt","w")
        f.write(intermediateid)
        f.close()

    def on_estate_check(self):
        
        if self.ids.check1.active is True:
            if self.ids.v1.text == str(vo3[vcounter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass
        
        if self.ids.check3.active is True:
            if self.ids.v3.text == str(vo3[vcounter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)

          
        if self.ids.check2.active is True:
            content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)



class Vocabulary_b(Screen):
    global vo,vo1,vo2,vo3,vo4,vo_id
    
            
    db = sqlite3.connect('book.db')
    b = db.cursor()
    b1= db.cursor()
    b2 = db.cursor()
    b3 = db.cursor()
    b4= db.cursor()
    b5 = db.cursor()
    b.execute("select question from vocabulary")
    b1.execute("select wronganswer1 from vocabulary")
    b2.execute("select wronganswer2 from vocabulary")
    b3.execute("select rightanswer from vocabulary")
    b4.execute("select option from vocabulary")
    b5.execute("select num from vocabulary")
    vo= b.fetchall()
    vo1= b1.fetchall()
    vo2= b2.fetchall()
    vo3 = b3.fetchall()
    vo4 = b4.fetchall()
    vo_id= b5.fetchall()
    
    
    
    
     
    
    def on_pre_enter(self, *args):
        
        global vcounter
        
        global the_potion_vocabulary
        global the_voc_id
        vcounter = vcounter + 1
        
        if vcounter == 203:
            vcounter = 1
        myinteger = random.randint(1,2)
        if myinteger == 1:
            self.ids.vocabu.text = str (vo[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v1.text = str (vo1[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v2.text = str (vo2[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v3.text = str (vo3[vcounter]).strip("()").strip(",").strip("''")
            the_potion_vocabulary = str(vo4[vcounter]).strip("()").strip(",").strip("''")
            the_voc_id = str(vo_id[vcounter]).strip("()").strip(",").strip("''")
        else:
            self.ids.vocabu.text = str (vo[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v1.text = str (vo3[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v2.text = str (vo2[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v3.text = str (vo1[vcounter]).strip("()").strip(",").strip("''")
            the_potion_vocabulary = str(vo4[vcounter]).strip("()").strip(",").strip("''")
            the_voc_id = str(vo_id[vcounter]).strip("()").strip(",").strip("''")

    def writeit(self):
        
        f = open("vocabulary.txt","w")
        
        f.write(the_voc_id)
        f.close()



    def on_estate_check(self):
        
        if self.ids.check1.active is True:
            if self.ids.v1.text == str(vo3[vcounter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass
        
        if self.ids.check3.active is True:
            if self.ids.v3.text == str(vo3[vcounter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)

          
        if self.ids.check2.active is True:
            content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)
    

        

class Vocabulary_c(Screen):
    global o,o1,o2,o3,o4,vo_id
    
            
    db = sqlite3.connect('book.db')
    b = db.cursor()
    b1= db.cursor()
    b2 = db.cursor()
    b3 = db.cursor()
    b4= db.cursor()
    b5 = db.cursor()
    b.execute("select question from vocabulary")
    b1.execute("select wronganswer1 from vocabulary")
    b2.execute("select wronganswer2 from vocabulary")
    b3.execute("select rightanswer from vocabulary")
    b4.execute("select option from vocabulary")
    b5.execute("select num from vocabulary")
    o= b.fetchall()
    o1= b1.fetchall()
    o2= b2.fetchall()
    o3 = b3.fetchall()
    o4 = b4.fetchall()
    vo_id= b5.fetchall()
    
    
    
    
     
    
    def on_pre_enter(self, *args):
        
        global vcounter
        
        global the_potion_vocabulary
        global the_voc_id
        vcounter = vcounter + 1
        
        if vcounter == 203:
            vcounter = 1
        myinteger = random.randint(1,2)
        if myinteger == 1:
            self.ids.vocabu.text = str (o[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v1.text = str (o1[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v2.text = str (o2[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v3.text = str (o3[vcounter]).strip("()").strip(",").strip("''")
            the_potion_vocabulary = str(o4[vcounter]).strip("()").strip(",").strip("''")
            the_voc_id = str(vo_id[vcounter]).strip("()").strip(",").strip("''")
        else:
            self.ids.vocabu.text = str (o[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v1.text = str (o3[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v2.text = str (o2[vcounter]).strip("()").strip(",").strip("''")
            self.ids.v3.text = str (o1[vcounter]).strip("()").strip(",").strip("''")
            the_potion_vocabulary = str(o4[vcounter]).strip("()").strip(",").strip("''")
            the_voc_id = str(vo_id[vcounter]).strip("()").strip(",").strip("''")

    def writeit(self):
        
        f = open("vocabulary.txt","w")
        
        f.write(the_voc_id)
        f.close()
    


    def on_estate_check(self):
        
        if self.ids.check1.active is True:
            if self.ids.v1.text == str(o3[vcounter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass
        
        if self.ids.check3.active is True:
            if self.ids.v3.text == str(o3[vcounter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)

          
        if self.ids.check2.active is True:
            content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
            popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
            popup.open()
            Clock.schedule_once(lambda dt: popup.dismiss(),3)


class ShowVocabulary(Screen):
    def on_pre_enter(self, *args):
    
        if the_potion_vocabulary== "intend":
            p = codecs.open(r'vocabularytest/intend.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p))

        if the_potion_vocabulary== "book":
            p1 = codecs.open(r'vocabularytest/book.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p1))

        if the_potion_vocabulary== "go":
            p2 = codecs.open(r'vocabularytest/go.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p2))

        if the_potion_vocabulary== "bring":
            p3 = codecs.open(r'vocabularytest/bring.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p3))

        if the_potion_vocabulary== "listen":
            p4 = codecs.open(r'vocabularytest/listen.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p4))

        if the_potion_vocabulary== "soldier":
            p5 = codecs.open(r'vocabularytest/soldier.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p5))

        if the_potion_vocabulary== "visit":
            p6 = codecs.open(r'vocabularytest/visit.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p6))

        if the_potion_vocabulary== "man":
            p7 = codecs.open(r'vocabularytest/man.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p7))

        if the_potion_vocabulary== "refrigerator":
            p8 = codecs.open(r'vocabularytest/refrigerator.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p8))

        if the_potion_vocabulary== "update":
            p9 = codecs.open(r'vocabularytest/update.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p9))

        if the_potion_vocabulary== "religion":
            p10 = codecs.open(r'vocabularytest/religion.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p10))

        if the_potion_vocabulary== "studious":
            p11 = codecs.open(r'vocabularytest/studious.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p11))

        if the_potion_vocabulary== "lexicon":
            p12 = codecs.open(r'vocabularytest/lexicon.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p12))

        if the_potion_vocabulary== "deciding":
            p13 = codecs.open(r'vocabularytest/deciding.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p13))

        if the_potion_vocabulary== "wise":
            p14 = codecs.open(r'vocabularytest/wise.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p14))

        if the_potion_vocabulary== "agree":
            p15 = codecs.open(r'vocabularytest/agree.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p15))

        if the_potion_vocabulary== "authority":
            p16 = codecs.open(r'vocabularytest/authority.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p16))

        if the_potion_vocabulary== "courage":
            p17 = codecs.open(r'vocabularytest/courage.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p17))

        if the_potion_vocabulary== "colony":
            p18 = codecs.open(r'vocabularytest/colony.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p18))

        if the_potion_vocabulary== "class":
            p19 = codecs.open(r'vocabularytest/class.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p19))

        if the_potion_vocabulary== "friend":
            p20 = codecs.open(r'vocabularytest/friend.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p20))

        if the_potion_vocabulary== "master":
            p21 = codecs.open(r'vocabularytest/master.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p21))

        if the_potion_vocabulary== "do":
            p22 = codecs.open(r'vocabularytest/do.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p22))

        if the_potion_vocabulary== "work":
            p23 = codecs.open(r'vocabularytest/work.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p23))

        if the_potion_vocabulary== "mean":
            p24 = codecs.open(r'vocabularytest/mean.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p24))

        if the_potion_vocabulary== "use":
            p25 = codecs.open(r'vocabularytest/use.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p25))

        if the_potion_vocabulary== "important":
            p26 = codecs.open(r'vocabularytest/important.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p26))

        if the_potion_vocabulary== "infect":
            p27 = codecs.open(r'vocabularytest/infect.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p27))

        if the_potion_vocabulary== "heart":
            p28 = codecs.open(r'vocabularytest/heart.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p28))

        if the_potion_vocabulary== "approve":
            p29 = codecs.open(r'vocabularytest/approve.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p29))

        if the_potion_vocabulary== "advised":
            p30 = codecs.open(r'vocabularytest/advised.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p30))

        if the_potion_vocabulary== "sense":
            p31 = codecs.open(r'vocabularytest/sense.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p31))

        if the_potion_vocabulary== "wonder":
            p32 = codecs.open(r'vocabularytest/wonder.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p32))

        if the_potion_vocabulary== "patient":
            p33= codecs.open(r'vocabularytest/patient.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p33))

        if the_potion_vocabulary== "right":
            p34 = codecs.open(r'vocabularytest/right.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p34))

        if the_potion_vocabulary== "question":
            p35 = codecs.open(r'vocabularytest/question.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p35))

        if the_potion_vocabulary== "die":
            p36 = codecs.open(r'vocabularytest/die.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p36))

        if the_potion_vocabulary== "manager":
            p37 = codecs.open(r'vocabularytest/manager.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p37))

        if the_potion_vocabulary== "lead":
            p38 = codecs.open(r'vocabularytest/lead.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p38))

        if the_potion_vocabulary== "heal":
            p39 = codecs.open(r'vocabularytest/heal.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p39))

        if the_potion_vocabulary== "move":
            p40 = codecs.open(r'vocabularytest/move.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p40))

        if the_potion_vocabulary== "predict":
            p41 = codecs.open(r'vocabularytest/predict.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p41))

        if the_potion_vocabulary== "exam":
            p42 = codecs.open(r'vocabularytest/exam.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p42))

        if the_potion_vocabulary== "rest":
            p43 = codecs.open(r'vocabularytest/rest.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p43))

        
        if the_potion_vocabulary== "mind":
            p44 = codecs.open(r'vocabularytest/mind.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p44))

        if the_potion_vocabulary== "favourite":
            p45 = codecs.open(r'vocabularytest/favourite.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p45))

        if the_potion_vocabulary== "military":
            p46 = codecs.open(r'vocabularytest/military.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p46))

        if the_potion_vocabulary== "owner":
            p47 = codecs.open(r'vocabularytest/owner.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p47))

        if the_potion_vocabulary== "able":
            p48 = codecs.open(r'vocabularytest/able.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p48))

        if the_potion_vocabulary== "normal":
            p49 = codecs.open(r'vocabularytest/normal.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p49))

        if the_potion_vocabulary== "equal":
            p50 = codecs.open(r'vocabularytest/equal.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p50))

        if the_potion_vocabulary== "even":
            p51 = codecs.open(r'vocabularytest/even.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p51))

        if the_potion_vocabulary== "immortal":
            p52 = codecs.open(r'vocabularytest/immortal.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p52))

        if the_potion_vocabulary== "false":
            p53 = codecs.open(r'vocabularytest/false.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p53))

        if the_potion_vocabulary== "blood":
            p54 = codecs.open(r'vocabularytest/blood.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p54))

        if the_potion_vocabulary== "economy":
            p55 = codecs.open(r'vocabularytest/economy.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p55))

        if the_potion_vocabulary== "force":
            p56 = codecs.open(r'vocabularytest/force.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p56))

        if the_potion_vocabulary== "power":
            p57 = codecs.open(r'vocabularytest/power.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p57))

        if the_potion_vocabulary== "fame":
            p58 = codecs.open(r'vocabularytest/fame.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p58))

        if the_potion_vocabulary== "consider":
            p59 = codecs.open(r'vocabularytest/consider.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p59))

        if the_potion_vocabulary== "easily":
            p60 = codecs.open(r'vocabularytest/easily.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p60))

        if the_potion_vocabulary== "earnest":
            p61 = codecs.open(r'vocabularytest/earnest.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p61))

        if the_potion_vocabulary== "serious":
            p62 = codecs.open(r'vocabularytest/serious.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p62))

        if the_potion_vocabulary== "lazy":
            p63 = codecs.open(r'vocabularytest/lazy.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p63))

        if the_potion_vocabulary== "popular":
            p64 = codecs.open(r'vocabularytest/popular.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p64))

        if the_potion_vocabulary== "loneliness":
            p65 = codecs.open(r'vocabularytest/loneliness.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p65))

        if the_potion_vocabulary== "water":
            p66 = codecs.open(r'vocabularytest/water.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p66))

        if the_potion_vocabulary== "clear":
            p67 = codecs.open(r'vocabularytest/clear.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p67))

        if the_potion_vocabulary== "obvious":
            p68 = codecs.open(r'vocabularytest/obvious.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p68))

        if the_potion_vocabulary== "certainly":
            p69 = codecs.open(r'vocabularytest/certainly.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p69))

        if the_potion_vocabulary== "mistake":
            p70 = codecs.open(r'vocabularytest/mistake.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p70))

        if the_potion_vocabulary== "evidently":
            p71 = codecs.open(r'vocabularytest/evidently.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p71))

        if the_potion_vocabulary== "new":
            p72 = codecs.open(r'vocabularytest/new.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p72))

        if the_potion_vocabulary== "fraud":
            p73 = codecs.open(r'vocabularytest/fraud.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p73))

        if the_potion_vocabulary== "just":
            p74 = codecs.open(r'vocabularytest/just.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p74))

        if the_potion_vocabulary== "base":
            p75 = codecs.open(r'vocabularytest/base.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p75))

        if the_potion_vocabulary== "news":
            p76 = codecs.open(r'vocabularytest/news.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p76))

        if the_potion_vocabulary== "fear":
            p77 = codecs.open(r'vocabularytest/fear.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p77))

        if the_potion_vocabulary== "threat":
            p78 = codecs.open(r'vocabularytest/threat.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p78))

        if the_potion_vocabulary== "thank":
            p79 = codecs.open(r'vocabularytest/thank.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p79))

        if the_potion_vocabulary== "present":
            p80 = codecs.open(r'vocabularytest/present.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p80))

        if the_potion_vocabulary== "nice":
            p81 = codecs.open(r'vocabularytest/nice.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p81))

        if the_potion_vocabulary== "good":
            p82 = codecs.open(r'vocabularytest/good.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p82))

        if the_potion_vocabulary== "trust":
            p83 = codecs.open(r'vocabularytest/trust.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p83))

        if the_potion_vocabulary== "battle":
            p84 = codecs.open(r'vocabularytest/battle.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p84))

        if the_potion_vocabulary== "deceive":
            p85 = codecs.open(r'vocabularytest/decieve.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p85))

        if the_potion_vocabulary== "proud":
            p86 = codecs.open(r'vocabularytest/proud.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p86))

        if the_potion_vocabulary== "want":
            p87 = codecs.open(r'vocabularytest/want.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p87))

        if the_potion_vocabulary== "afford":
            p88 = codecs.open(r'vocabularytest/afford.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p88))

        if the_potion_vocabulary== "avoid":
            p89 = codecs.open(r'vocabularytest/avoid.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p89))

        if the_potion_vocabulary== "prevent":
            p90 = codecs.open(r'vocabularytest/prevent.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p90))

        if the_potion_vocabulary== "succeed":
            p91 = codecs.open(r'vocabularytest/succeed.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p91))

        if the_potion_vocabulary== "protect":
            p92 = codecs.open(r'vocabularytest/protect.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p92))

        if the_potion_vocabulary== "count":
            p93 = codecs.open(r'vocabularytest/count.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p93))

        if the_potion_vocabulary== "operation":
            p94 = codecs.open(r'vocabularytest/operation.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p94))

        if the_potion_vocabulary== "recover":
            p95 = codecs.open(r'vocabularytest/recover.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p95))

        if the_potion_vocabulary== "abide":
            p96 = codecs.open(r'vocabularytest/abide.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p96))

        if the_potion_vocabulary== "obtain":
            p97 = codecs.open(r'vocabularytest/obtain.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p97))

        if the_potion_vocabulary== "sustain":
            p98 = codecs.open(r'vocabularytest/sustain.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p98))

        if the_potion_vocabulary== "law":
            p99 = codecs.open(r'vocabularytest/law.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p99))

        if the_potion_vocabulary== "face":
            p100 = codecs.open(r'vocabularytest/face.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p100))


        if the_potion_vocabulary== "life":
            p101 = codecs.open(r'vocabularytest/life.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p101))

        if the_potion_vocabulary== "accept":
            p102 = codecs.open(r'vocabularytest/accept.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p102))

        if the_potion_vocabulary== "enjoy":
            p103 = codecs.open(r'vocabularytest/enjoy.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p103))

        if the_potion_vocabulary== "cheer":
            p104 = codecs.open(r'vocabularytest/cheer.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p104))

        if the_potion_vocabulary== "shame":
            p105 = codecs.open(r'vocabularytest/shame.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p105))

        if the_potion_vocabulary== "refute":
            p106 = codecs.open(r'vocabularytest/refute.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p106))

        if the_potion_vocabulary== "respect":
            p107 = codecs.open(r'vocabularytest/respect.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p107))

        if the_potion_vocabulary== "responsible":
            p108 = codecs.open(r'vocabularytest/responsible.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p108))

        if the_potion_vocabulary== "lead":
            p109 = codecs.open(r'vocabularytest/lead.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p109))

        if the_potion_vocabulary== "react":
            p110 = codecs.open(r'vocabularytest/react.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p110))

        if the_potion_vocabulary== "inconvenient":
            p111 = codecs.open(r'vocabularytest/inconvenient.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p111))

        if the_potion_vocabulary== "comfort":
            p112 = codecs.open(r'vocabularytest/comfort.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p112))

        if the_potion_vocabulary== "consider":
            p113 = codecs.open(r'vocabularytest/consider.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p113))

        if the_potion_vocabulary== "madman":
            p114 = codecs.open(r'vocabularytest/madman.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p114))

        if the_potion_vocabulary== "mind":
            p115 = codecs.open(r'vocabularytest/mind.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p115))

        if the_potion_vocabulary== "brain":
            p116 = codecs.open(r'vocabularytest/brain.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p116))

        if the_potion_vocabulary== "star":
            p117 = codecs.open(r'vocabularytest/star.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p117))

        if the_potion_vocabulary== "achieve":
            p118 = codecs.open(r'vocabularytest/achieve.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p118))

        if the_potion_vocabulary== "will":
            p119 = codecs.open(r'vocabularytest/will.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p119))

        if the_potion_vocabulary== "land":
            p120 = codecs.open(r'vocabularytest/land.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p120))

        if the_potion_vocabulary== "like":
            p121 = codecs.open(r'vocabularytest/like.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p121))

        if the_potion_vocabulary== "air":
            p122 = codecs.open(r'vocabularytest/air.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p122))

        if the_potion_vocabulary== "secure":
            p123 = codecs.open(r'vocabularytest/secure.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p123))

        if the_potion_vocabulary== "content":
            p124 = codecs.open(r'vocabularytest/content.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p124))

        if the_potion_vocabulary== "satisfy":
            p125 = codecs.open(r'vocabularytest/satisfy.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p125))

        if the_potion_vocabulary== "repute":
            p126 = codecs.open(r'vocabularytest/repute.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p126))

        if the_potion_vocabulary== "national":
            p127 = codecs.open(r'vocabularytest/national.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p127))

        if the_potion_vocabulary== "partial":
            p128 = codecs.open(r'vocabularytest/partial.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p128))

        if the_potion_vocabulary== "intelligent":
            p129 = codecs.open(r'vocabularytest/intelligent.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p129))

        if the_potion_vocabulary== "fact":
            p130 = codecs.open(r'vocabularytest/fact.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p130))


        if the_potion_vocabulary== "some":
            p131 = codecs.open(r'vocabularytest/some.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p131))

        if the_potion_vocabulary== "tact":
            p132 = codecs.open(r'vocabularytest/tact.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p132))

        if the_potion_vocabulary== "legitimate":
            p133 = codecs.open(r'vocabularytest/legitimate.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p133))

        if the_potion_vocabulary== "legible":
            p134 = codecs.open(r'vocabularytest/legible.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p134))

        if the_potion_vocabulary== "read":
            p135 = codecs.open(r'vocabularytest/read.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p135))

        if the_potion_vocabulary== "night":
            p136 = codecs.open(r'vocabularytest/night.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p136))

        if the_potion_vocabulary== "place":
            p137 = codecs.open(r'vocabularytest/place.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p137))

        if the_potion_vocabulary== "access":
            p138 = codecs.open(r'vocabularytest/access.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p138))

        if the_potion_vocabulary== "watch":
            p139 = codecs.open(r'vocabularytest/watch.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p139))

        if the_potion_vocabulary== "stream":
            p140 = codecs.open(r'vocabularytest/stream.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p140))

        if the_potion_vocabulary== "product":
            p141 = codecs.open(r'vocabularytest/product.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p141))

        if the_potion_vocabulary== "dress":
            p142 = codecs.open(r'vocabularytest/dress.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p142))

        if the_potion_vocabulary== "reverent":
            p143 = codecs.open(r'vocabularytest/reverent.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p143))
        
        if the_potion_vocabulary== "prudent":
            p144 = codecs.open(r'vocabularytest/prudent.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p144))

        if the_potion_vocabulary== "suit":
            p145 = codecs.open(r'vocabularytest/suit.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p145))
        
        if the_potion_vocabulary== "conclusive":
            p146 = codecs.open(r'vocabularytest/conclusive.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p146))

        if the_potion_vocabulary== "define":
            p147 = codecs.open(r'vocabularytest/define.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p147))

        if the_potion_vocabulary== "sleep":
            p148 = codecs.open(r'vocabularytest/sleep.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p148))

        if the_potion_vocabulary== "forget":
            p149 = codecs.open(r'vocabularytest/forget.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p149))

        if the_potion_vocabulary== "now":
            p150 = codecs.open(r'vocabularytest/now.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p150))

        if the_potion_vocabulary== "prefer":
            p151 = codecs.open(r'vocabularytest/prefer.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p151))

        if the_potion_vocabulary== "house":
            p152 = codecs.open(r'vocabularytest/house.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p152))

        if the_potion_vocabulary== "relate":
            p153 = codecs.open(r'vocabularytest/relate.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p153))

        if the_potion_vocabulary== "stand":
            p154 = codecs.open(r'vocabularytest/stand.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p154))

        if the_potion_vocabulary== "free":
            p155 = codecs.open(r'vocabularytest/free.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p155))

        if the_potion_vocabulary== "down":
            p156 = codecs.open(r'vocabularytest/down.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p156))

        if the_potion_vocabulary== "out":
            p157 = codecs.open(r'vocabularytest/out.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p157))

        if the_potion_vocabulary== "right":
            p158 = codecs.open(r'vocabularytest/right.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p158))

        if the_potion_vocabulary== "late":
            p159 = codecs.open(r'vocabularytest/late.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p159))
        

        if the_potion_vocabulary== "up":
            p160 = codecs.open(r'vocabularytest/up.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p160))


        if the_potion_vocabulary== "accord":
            p161 = codecs.open(r'vocabularytest/accord.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p161))

        if the_potion_vocabulary== "think":
            p162 = codecs.open(r'vocabularytest/think.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p162))

        if the_potion_vocabulary== "cover":
            p163 = codecs.open(r'vocabularytest/cover.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p163))

        if the_potion_vocabulary== "adjust":
            p164 = codecs.open(r'vocabularytest/adjust.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p164))

        if the_potion_vocabulary== "help":
            p165 = codecs.open(r'vocabularytest/help.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p165))

        if the_potion_vocabulary== "stop":
            p166 = codecs.open(r'vocabularytest/stop.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p166))

        if the_potion_vocabulary== "state":
            p167 = codecs.open(r'vocabularytest/state.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p167))

        if the_potion_vocabulary== "hand":
            p168 = codecs.open(r'vocabularytest/hand.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p168))

        if the_potion_vocabulary== "trouble":
            p169 = codecs.open(r'vocabularytest/trouble.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p169))

        if the_potion_vocabulary== "hard":
            p170 = codecs.open(r'vocabularytest/hard.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p170))

        if the_potion_vocabulary== "conscious":
            p171 = codecs.open(r'vocabularytest/conscious.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p171))

        if the_potion_vocabulary== "super":
            p172 = codecs.open(r'vocabularytest/super.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p172))

        if the_potion_vocabulary== "command":
            p173 = codecs.open(r'vocabularytest/command.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p173))

        if the_potion_vocabulary== "counter":
            p174 = codecs.open(r'vocabularytest/counter.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p174))

        if the_potion_vocabulary== "under":
            p175 = codecs.open(r'vocabularytest/under.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p175))

        if the_potion_vocabulary== "computer":
            p176 = codecs.open(r'vocabularytest/computer.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p176))

        if the_potion_vocabulary== "clean":
            p177 = codecs.open(r'vocabularytest/clean.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p177))

        if the_potion_vocabulary== "nuclear":
            p178 = codecs.open(r'vocabularytest/nuclear.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p178))

        if the_potion_vocabulary== "chaste":
            p179 = codecs.open(r'vocabularytest/chaste.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p179))

        if the_potion_vocabulary== "sport":
            p180 = codecs.open(r'vocabularytest/sport.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p180))

        if the_potion_vocabulary== "gentle":
            p181 = codecs.open(r'vocabularytest/gentle.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p181))

        if the_potion_vocabulary== "confidant":
            p182 = codecs.open(r'vocabularytest/confidant.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p182))

        if the_potion_vocabulary== "after":
            p183 = codecs.open(r'vocabularytest/after.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p183))

        if the_potion_vocabulary== "modern":
            p184 = codecs.open(r'vocabularytest/modern.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p184))

        if the_potion_vocabulary== "mark":
            p185 = codecs.open(r'vocabularytest/mark.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p185))

        if the_potion_vocabulary== "money":
            p186 = codecs.open(r'vocabularytest/money.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p186))

        if the_potion_vocabulary== "fit":
            p187 = codecs.open(r'vocabularytest/fit.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p187))

        if the_potion_vocabulary== "head":
            p188 = codecs.open(r'vocabularytest/head.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p188))

        if the_potion_vocabulary== "suffer":
            p189 = codecs.open(r'vocabularytest/suffer.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p189))

        if the_potion_vocabulary== "sub":
            p190 = codecs.open(r'vocabularytest/sub.txt',encoding='utf-8').read()
            self.ids.ph.multiline = True
            self.ids.ph.text = get_display(arabic_reshaper.reshape(p190))

class Punctuation1(Screen):
     global punc,punc1,punc2,punc3,punc4,punc_id,r
    
            
     db = sqlite3.connect('book.db')
     b = db.cursor()
     b1= db.cursor()
     b2 = db.cursor()
     b3 = db.cursor()
     b4= db.cursor()
     b5 = db.cursor()
     b6 = db.cursor()
     b.execute("select one from punctuation")
     b1.execute("select two from punctuation")
     b2.execute("select three from punctuation")
     b3.execute("select four from punctuation")
     b4.execute("select option from punctuation")
     b5.execute("select num from punctuation")
     b6.execute("select rightanswer from punctuation")
     punc= b.fetchall()
     punc1= b1.fetchall()
     punc2= b2.fetchall()
     punc3 = b3.fetchall()
     punc4 = b4.fetchall()
     punc_id= b5.fetchall()
     r = b6.fetchall()
    
    
    
    
     
    
     def on_pre_enter(self, *args):
        
        global punc_counter
        global the_punctuation
        global the_rightanswer
        global the_punctuation_id
        punc_counter = punc_counter + 1
        if punc_counter == 224:
            punc_counter = 0
        self.ids.punc1.text = str (punc[punc_counter]).strip("()").strip(",").strip("''")
        self.ids.punc2.text = str (punc1[punc_counter]).strip("()").strip(",").strip("''")
        self.ids.punc3.text = str (punc2[punc_counter]).strip("()").strip(",").strip("''")
        self.ids.punc4.text = str (punc3[punc_counter]).strip("()").strip(",").strip("''")
        the_punctuation = str(punc4[punc_counter]).strip("()").strip(",").strip("''")
        the_punctuation_id = str(punc_id[punc_counter]).strip("()").strip(",").strip("''")
        the_righanswer= str(r[punc_counter]).strip("()").strip(",").strip("''")
     def writepunc(self):
        
        f = open("punctuation.txt","w")
        
        f.write(the_punctuation_id)
        f.close()

     def on_estate_check(self):
        if self.ids.check1.active is True:
            if self.ids.punc1.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass





        if self.ids.check2.active is True:
            if self.ids.punc2.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass



        if self.ids.check3.active is True:
            if self.ids.punc3.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass


        if self.ids.check4.active is True:
            if self.ids.punc4.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass




        
class Punctuation2(Screen):
     global punc,punc1,punc2,punc3,punc4,punc_idl,r
    
            
     db = sqlite3.connect('book.db')
     b = db.cursor()
     b1= db.cursor()
     b2 = db.cursor()
     b3 = db.cursor()
     b4= db.cursor()
     b5 = db.cursor()
     b6= db.cursor()
     b.execute("select one from punctuation")
     b1.execute("select two from punctuation")
     b2.execute("select three from punctuation")
     b3.execute("select four from punctuation")
     b4.execute("select option from punctuation")
     b5.execute("select num from punctuation")
     b6.execute("select rightanswer from punctuation")
     punc= b.fetchall()
     punc1= b1.fetchall()
     punc2= b2.fetchall()
     punc3 = b3.fetchall()
     punc4 = b4.fetchall()
     punc_id= b5.fetchall()
     r= b6.fetchall()
    
    
    
    
     
    
     def on_pre_enter(self, *args):
        
        global punc_counter
        global the_punctuation
        global the_punctuation_id
        global the_rightanswer
        punc_counter = punc_counter + 1
        if punc_counter == 224:
            punc_counter = 0
        self.ids.punc1.text = str (punc[punc_counter]).strip("()").strip(",").strip("''")
        self.ids.punc2.text = str (punc1[punc_counter]).strip("()").strip(",").strip("''")
        self.ids.punc3.text = str (punc2[punc_counter]).strip("()").strip(",").strip("''")
        self.ids.punc4.text = str (punc3[punc_counter]).strip("()").strip(",").strip("''")
        the_punctuation = str(punc4[punc_counter]).strip("()").strip(",").strip("''")
        the_punctuation_id = str(punc_id[punc_counter]).strip("()").strip(",").strip("''")
        the_rightanswer = str(r[punc_counter]).strip("()").strip(",").strip("''")
     
     def writepunc(self):
        
        f = open("punctuation.txt","w")
        
        f.write(the_punctuation_id)
        f.close()
     def on_estate_check(self):
        if self.ids.check1.active is True:
            if self.ids.punc1.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass





        if self.ids.check2.active is True:
            if self.ids.punc2.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass



        if self.ids.check3.active is True:
            if self.ids.punc3.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass


        if self.ids.check4.active is True:
            if self.ids.punc4.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass
class Punctuation3(Screen):
     global punc,punc1,punc2,punc3,punc4,punc_id,r
    
            
     db = sqlite3.connect('book.db')
     b = db.cursor()
     b1= db.cursor()
     b2 = db.cursor()
     b3 = db.cursor()
     b4= db.cursor()
     b5 = db.cursor()
     b6= db.cursor()
     b.execute("select one from punctuation")
     b1.execute("select two from punctuation")
     b2.execute("select three from punctuation")
     b3.execute("select four from punctuation")
     b4.execute("select option from punctuation")
     b5.execute("select num from punctuation")
     b6.execute("select rightanswer from punctuation")
     punc= b.fetchall()
     punc1= b1.fetchall()
     punc2= b2.fetchall()
     punc3 = b3.fetchall()
     punc4 = b4.fetchall()
     punc_id= b5.fetchall()
     r= b6.fetchall()
    
    
    
     
    
     def on_pre_enter(self, *args):
        
        global punc_counter
        global the_punctuation
        global the_punctuation_id
        global the_rightanswer
        punc_counter = punc_counter + 1
        
        if punc_counter == 224:
            punc_counter = 0
        self.ids.punc1.text = str (punc[punc_counter]).strip("()").strip(",").strip("''")
        self.ids.punc2.text = str (punc1[punc_counter]).strip("()").strip(",").strip("''")
        self.ids.punc3.text = str (punc2[punc_counter]).strip("()").strip(",").strip("''")
        self.ids.punc4.text = str (punc3[punc_counter]).strip("()").strip(",").strip("''")
        the_punctuation = str(punc4[punc_counter]).strip("()").strip(",").strip("''")
        the_rightanswer = str(r[punc_counter]).strip("()").strip(",").strip("''")
     def writepunc(self):
        
        f = open("punctuation.txt","w")
        
        f.write(the_punctuation_id)
        f.close()
     def on_estate_check(self):
        if self.ids.check1.active is True:
            if self.ids.punc1.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass





        if self.ids.check2.active is True:
            if self.ids.punc2.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass



        if self.ids.check3.active is True:
            if self.ids.punc3.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass


        if self.ids.check4.active is True:
            if self.ids.punc4.text == str(r[punc_counter]).strip("()").strip(",").strip("''"):
                
                content=Label(text="Excellent. continue like this",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3) 
            else:
                content=Label(text="Sorry,Wrong answer, Try again",halign='center',valign='middle')
                popup= Popup(title='info',content=content,size_hint=(0.9,0.2),auto_dismiss=False)
                popup.open()
                Clock.schedule_once(lambda dt: popup.dismiss(),3)
        else:
            pass

class ShowPunctuation(Screen):
    def on_pre_enter(self, *args):
        
        if the_punctuation== "writingN1":
            q1 = codecs.open(r'punctuation/writingn1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q1))


        if the_punctuation== "writingN2":
            q2 = codecs.open(r'punctuation/writingn2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q2))

        if the_punctuation== "writingN3":
            q3 = codecs.open(r'punctuation/writingn3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q3))


        if the_punctuation== "writingN4":
            q4 = codecs.open(r'punctuation/writingn4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q4))

        if the_punctuation== "writingN5":
            q5 = codecs.open(r'punctuation/writingn5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q5))

        if the_punctuation== "writingN6":
            q6 = codecs.open(r'punctuation/writingn6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q6))

        if the_punctuation== "writingN7":
            q7 = codecs.open(r'punctuation/writingn7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q7))

        if the_punctuation== "writingN8":
            q8 = codecs.open(r'punctuation/writingn8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q8))

        if the_punctuation== "writingN9":
            q9 = codecs.open(r'punctuation/writingn9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q9))

        if the_punctuation== "writingN10":
            q10 = codecs.open(r'punctuation/writingn10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q10))


        if the_punctuation== "writingN11":
            q11 = codecs.open(r'punctuation/writingn11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q11))

        if the_punctuation== "writingN12":
            q12 = codecs.open(r'punctuation/writingn12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q12))

        if the_punctuation== "writingN13":
            q13 = codecs.open(r'punctuation/writingn13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q13))

        if the_punctuation== "writingN14":
            q14 = codecs.open(r'punctuation/writingn14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q14))

        if the_punctuation== "writingN15":
            q15 = codecs.open(r'punctuation/writingn15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q15))

        if the_punctuation== "writingN16":
            q16 = codecs.open(r'punctuation/writingn16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q16))

        if the_punctuation== "writingN17":
            q17 = codecs.open(r'punctuation/writingn17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q17))

        if the_punctuation== "writingN18":
            q18 = codecs.open(r'punctuation/writingn18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q18))

        if the_punctuation== "writingN19":
            q19 = codecs.open(r'punctuation/writingn19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q19))

        if the_punctuation== "writingN20":
            q20 = codecs.open(r'punctuation/writingn20.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q20))

        if the_punctuation== "period-q-exc1":
            q21 = codecs.open(r'punctuation/period-q-exc1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q21))

        if the_punctuation== "period-q-exc2":
            q22 = codecs.open(r'punctuation/period-q-exc2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q22))

        if the_punctuation== "period-q-exc3":
            q23 = codecs.open(r'punctuation/period-q-exc3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q23))

        if the_punctuation== "period-q-exc4":
            q24 = codecs.open(r'punctuation/period-q-exc4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q24))

        if the_punctuation== "period-q-exc5":
            q25 = codecs.open(r'punctuation/period-q-exc5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q25))

        if the_punctuation== "period-q-exc6":
            q26 = codecs.open(r'punctuation/period-q-exc6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q26))

        if the_punctuation== "period-q-exc7":
            q27 = codecs.open(r'punctuation/period-q-exc7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q27))

        if the_punctuation== "period-q-exc8":
            q28 = codecs.open(r'punctuation/period-q-exc8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q28))

        if the_punctuation== "period-q-exc9":
            q29 = codecs.open(r'punctuation/period-q-exc9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q29))

        if the_punctuation== "period-q-exc10":
            q30 = codecs.open(r'punctuation/period-q-exc10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q30))

        if the_punctuation== "q-q-p1":
            q31 = codecs.open(r'punctuation/q-q-p1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q31))

        if the_punctuation== "q-q-p2":
            q32 = codecs.open(r'punctuation/q-q-p2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q32))

        if the_punctuation== "q-q-p3":
            q33 = codecs.open(r'punctuation/q-q-p3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q33))

        if the_punctuation== "q-q-p4":
            q34 = codecs.open(r'punctuation/q-q-p4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q34))

        if the_punctuation== "q-q-p5":
            q35 = codecs.open(r'punctuation/q-q-p5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q35))

        if the_punctuation== "q-q-p6":
            q36 = codecs.open(r'punctuation/q-q-p6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q36))

        if the_punctuation== "q-q-p7":
            q37 = codecs.open(r'punctuation/q-q-p7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q37))

        if the_punctuation== "q-q-p8":
            q38 = codecs.open(r'punctuation/q-q-p8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q38))

        if the_punctuation== "q-q-p9":
            q39 = codecs.open(r'punctuation/q-q-p9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q39))

        if the_punctuation== "q-q-p10":
            q40 = codecs.open(r'punctuation/q-q-p10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q40))

        if the_punctuation== "q-q-p11":
            q41 = codecs.open(r'punctuation/q-q-p11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q41))

        if the_punctuation== "q-q-p12":
            q42= codecs.open(r'punctuation/q-q-p12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q42))

        if the_punctuation== "q-q-p13":
            q43 = codecs.open(r'punctuation/q-q-p13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q43))

        if the_punctuation== "q-q-p14":
            q44 = codecs.open(r'punctuation/q-q-p14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q44))

        if the_punctuation== "q-q-p15":
            q45 = codecs.open(r'punctuation/q-q-p15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q45))

        if the_punctuation== "q-q-p16":
            q46 = codecs.open(r'punctuation/q-q-p16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q46))

        if the_punctuation== "q-q-p17":
            q47 = codecs.open(r'punctuation/q-q-p17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q47))

        if the_punctuation== "q-q-p18":
            q48 = codecs.open(r'punctuation/q-q-p18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q48))

        if the_punctuation== "q-q-p19":
            q49 = codecs.open(r'punctuation/q-q-p19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q49))

        if the_punctuation== "q-q-p20":
            q50 = codecs.open(r'punctuation/q-q-p20.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q50))

        if the_punctuation== "hyphen-re1":
            q51 = codecs.open(r'punctuation/hyphen-re1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q51))

        if the_punctuation== "hyphen-re2":
            q52 = codecs.open(r'punctuation/hyphen-re2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q52))

        if the_punctuation== "hyphen-re3":
            q53 = codecs.open(r'punctuation/hyphen-re3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q53))

        if the_punctuation== "hyphen-re4":
            q54 = codecs.open(r'punctuation/hyphen-re4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q54))

        if the_punctuation== "hyphen-re5":
            q55 = codecs.open(r'punctuation/hyphen-re5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q55))

        if the_punctuation== "hyphen-re6":
            q56 = codecs.open(r'punctuation/hyphen-re6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q56))

        if the_punctuation== "hyphen-re7":
            q57 = codecs.open(r'punctuation/hyphen-re7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q57))

        if the_punctuation== "hyphen-re8":
            q58 = codecs.open(r'punctuation/hyphen-re8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q58))

        if the_punctuation== "hyphen-re9":
            q59 = codecs.open(r'punctuation/hyphen-re9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q59))

        if the_punctuation== "hyphen-re10":
            q60 = codecs.open(r'punctuation/hyphen-re10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q60))

        if the_punctuation== "hyphen-re11":
            q61 = codecs.open(r'punctuation/hyphen-re11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q61))

        if the_punctuation== "hyphen-re12":
            q62 = codecs.open(r'punctuation/hyphen-re12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q62))

        if the_punctuation== "hyphen-re13":
            q63 = codecs.open(r'punctuation/hyphen-re13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q63))

        if the_punctuation== "hyphen-re14":
            q64 = codecs.open(r'punctuation/hyphen-re14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q64))

        if the_punctuation== "hyphen-re15":
            q65 = codecs.open(r'punctuation/hyphen-re15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q65))

        if the_punctuation== "hyphen-re16":
            q66 = codecs.open(r'punctuation/hyphen-re16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q66))

        if the_punctuation== "hyphen-re17":
            q67 = codecs.open(r'punctuation/hyphen-re17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q67))

        if the_punctuation== "hyphen-re18":
            q68 = codecs.open(r'punctuation/hyphen-re18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q68))

        if the_punctuation== "hyphen-re19":
            q69 = codecs.open(r'punctuation/hyphen-re19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q69))

        if the_punctuation== "hyphen-re20":
            q70 = codecs.open(r'punctuation/hyphen-re20.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q70))

        if the_punctuation== "hyphen-pre1":
            q71 = codecs.open(r'punctuation/hyphen-pre1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q71))

        if the_punctuation== "hyphen-pre2":
            q72 = codecs.open(r'punctuation/hyphen-pre2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q72))

        if the_punctuation== "hyphen-pre3":
            q73 = codecs.open(r'punctuation/hyphen-pre3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q73))

        if the_punctuation== "hyphen-pre4":
            q74 = codecs.open(r'punctuation/hyphen-pre4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q74))

        if the_punctuation== "hyphen-pre5":
            q75 = codecs.open(r'punctuation/hyphen-pre5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q75))

        if the_punctuation== "hyphen-pre6":
            q76 = codecs.open(r'punctuation/hyphen-pre6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q76))

        if the_punctuation== "hyphen-pre7":
            q77 = codecs.open(r'punctuation/hyphen-pre7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q77))

        if the_punctuation== "hyphen-pre8":
            q78= codecs.open(r'punctuation/hyphen-pre8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q78))

        if the_punctuation== "hyphen-pre9":
            q79 = codecs.open(r'punctuation/hyphen-pre9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q79))

        if the_punctuation== "hyphen-pre10":
            q80 = codecs.open(r'punctuation/hyphen-pre10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q80))

        if the_punctuation== "hyphen-pre11":
            q81 = codecs.open(r'punctuation/hyphen-pre11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q81))

        if the_punctuation== "hyphen-pre12":
            q82 = codecs.open(r'punctuation/hyphen-pre12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q82))

        if the_punctuation== "hyphen-pre13":
            q83 = codecs.open(r'punctuation/hyphen-pre13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q83))

        if the_punctuation== "hyphen-pre14":
            q84 = codecs.open(r'punctuation/hyphen-pre14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q84))

        if the_punctuation== "hyphen-pre15":
            q85 = codecs.open(r'punctuation/hyphen-pre15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q85))

        if the_punctuation== "hyphen-pre16":
            q86 = codecs.open(r'punctuation/hyphen-pre16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q86))

        if the_punctuation== "hyphen-pre17":
            q87 = codecs.open(r'punctuation/hyphen-pre17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q87))

        if the_punctuation== "hyphen-pre18":
            q88 = codecs.open(r'punctuation/hyphen-pre18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q88))

        if the_punctuation== "hyphen-pre19":
            q89 = codecs.open(r'punctuation/hyphen-pre19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q89))

        if the_punctuation== "hyphen-pre20":
            q90 = codecs.open(r'punctuation/hyphen-pre20.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q90))

        if the_punctuation== "hyphen-ly1":
            q91 = codecs.open(r'punctuation/hyphen-ly1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q91))

        if the_punctuation== "hyphen-ly2":
            q92= codecs.open(r'punctuation/hyphen-ly2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q92))

        if the_punctuation== "hyphen-ly3":
            q93 = codecs.open(r'punctuation/hyphen-ly3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q93))

        if the_punctuation== "hyphen-ly4":
            q94 = codecs.open(r'punctuation/hyphen-ly4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q94))

        if the_punctuation== "hyphen-ly5":
            q95 = codecs.open(r'punctuation/hyphen-ly5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q95))

        if the_punctuation== "hyphen-ly6":
            q96 = codecs.open(r'punctuation/hyphen-ly6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q96))

        if the_punctuation== "hyphen-ly7":
            q97 = codecs.open(r'punctuation/hyphen-ly7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q97))

        if the_punctuation== "hyphen-ly8":
            q98 = codecs.open(r'punctuation/hyphen-ly8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q98))

        if the_punctuation== "hyphen-ly9":
            q99 = codecs.open(r'punctuation/hyphen-ly9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q99))

        if the_punctuation== "hyphen-ly10":
            q100 = codecs.open(r'punctuation/hyphen-ly10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q100))

        if the_punctuation== "h-between1":
            q101 = codecs.open(r'punctuation/h-between1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q101))

        if the_punctuation== "h-between2":
            q102 = codecs.open(r'punctuation/h-between2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q102))

        if the_punctuation== "h-between3":
            q103 = codecs.open(r'punctuation/h-between3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q103))

        if the_punctuation== "h-between4":
            q104 = codecs.open(r'punctuation/h-between4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q104))

        if the_punctuation== "h-between5":
            q105 = codecs.open(r'punctuation/h-between5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q105))

        if the_punctuation== "h-between6":
            q106 = codecs.open(r'punctuation/h-between6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q106))

        if the_punctuation== "h-between7":
            q107 = codecs.open(r'punctuation/h-between7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q107))

        if the_punctuation== "h-between8":
            q108 = codecs.open(r'punctuation/h-between8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q108))

        if the_punctuation== "h-between9":
            q109 = codecs.open(r'punctuation/h-between9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q109))

        if the_punctuation== "h-between10":
            q110 = codecs.open(r'punctuation/h-between10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q110))

        if the_punctuation== "h-between11":
            q111 = codecs.open(r'punctuation/h-between11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q111))

        if the_punctuation== "h-between12":
            q112 = codecs.open(r'punctuation/h-between12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q112))

        if the_punctuation== "h-between13":
            q113 = codecs.open(r'punctuation/h-between13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q113))

        if the_punctuation== "h-between14":
            q114 = codecs.open(r'punctuation/h-between14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q114))

        if the_punctuation== "h-between15":
            q115 = codecs.open(r'punctuation/h-between15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q115))

        if the_punctuation== "h-between16":
            q116 = codecs.open(r'punctuation/h-between16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q116))

        if the_punctuation== "h-between17":
            q117 = codecs.open(r'punctuation/h-between17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q117))

        if the_punctuation== "h-between18":
            q118 = codecs.open(r'punctuation/h-between18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q118))

        if the_punctuation== "h-between19":
            q119 = codecs.open(r'punctuation/h-between19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q119))

        if the_punctuation== "h-between20":
            q120 = codecs.open(r'punctuation/h-between20.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q120))

        if the_punctuation== "h-between21":
            q121 = codecs.open(r'punctuation/h-between21.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q121))

        if the_punctuation== "h-between22":
            q122 = codecs.open(r'punctuation/h-between22.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(q122))

        if the_punctuation== "h-advanced1":
            r1 = codecs.open(r'punctuation/h-advanced1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r1))

        if the_punctuation== "h-advanced2":
            r2 = codecs.open(r'punctuation/h-advanced2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r2))

        if the_punctuation== "h-advanced3":
            r3 = codecs.open(r'punctuation/h-advanced3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r3))

        if the_punctuation== "h-advanced4":
            r4 = codecs.open(r'punctuation/h-advanced4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r4))

        if the_punctuation== "h-advanced5":
            r5 = codecs.open(r'punctuation/h-advanced5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r5))

        if the_punctuation== "h-advanced6":
            r6 = codecs.open(r'punctuation/h-advanced6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r6))

        if the_punctuation== "h-advanced7":
            r7 = codecs.open(r'punctuation/h-advanced7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r7))

        if the_punctuation== "h-advanced8":
            r8 = codecs.open(r'punctuation/h-advanced8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r8))

        if the_punctuation== "h-advanced9":
            r9 = codecs.open(r'punctuation/h-advanced9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r9))

        if the_punctuation== "h-advanced10":
            r10 = codecs.open(r'punctuation/h-advanced10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r10))

        if the_punctuation== "h-advanced11":
            r11 = codecs.open(r'punctuation/h-advanced-11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r11))

        if the_punctuation== "h-advanced12":
            r12 = codecs.open(r'punctuation/h-advanced12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r12))

        if the_punctuation== "h-advanced13":
            r13 = codecs.open(r'punctuation/h-advanced13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r13))

        if the_punctuation== "h-advanced14":
            r14 = codecs.open(r'punctuation/h-advanced14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r14))

        if the_punctuation== "h-advanced15":
            r15 = codecs.open(r'punctuation/h-advanced15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r15))

        if the_punctuation== "h-advanced16":
            r16 = codecs.open(r'punctuation/h-advanced16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r16))

        if the_punctuation== "h-advanced17":
            r17 = codecs.open(r'punctuation/h-advanced17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r17))

        if the_punctuation== "h-advanced18":
            r18 = codecs.open(r'punctuation/h-advanced18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r18))

        if the_punctuation== "h-advanced19":
            r19 = codecs.open(r'punctuation/h-advanced19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r19))

        if the_punctuation== "h-advanced20":
            r20 = codecs.open(r'punctuation/h-advanced20.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r20))

        if the_punctuation== "capital1":
            r21 = codecs.open(r'punctuation/capital1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r21))

        if the_punctuation== "capital2":
            r22 = codecs.open(r'punctuation/capital2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r22))

        if the_punctuation== "capital3":
            r23 = codecs.open(r'punctuation/capital3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r23))

        if the_punctuation== "capital4":
            r24 = codecs.open(r'punctuation/capital4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r24))

        if the_punctuation== "capital5":
            r25 = codecs.open(r'punctuation/capital5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r25))

        if the_punctuation== "capital6":
            r26 = codecs.open(r'punctuation/capital6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r26))

        if the_punctuation== "capital7":
            r27 = codecs.open(r'punctuation/capital7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r27))

        if the_punctuation== "capital8":
            r28 = codecs.open(r'punctuation/capital8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r28))

        if the_punctuation== "capital9":
            r29 = codecs.open(r'punctuation/capital9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r29))

        if the_punctuation== "capital10":
            r30 = codecs.open(r'punctuation/capital10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r30))

        if the_punctuation== "capital11":
            r31 = codecs.open(r'punctuation/capital11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r31))

        if the_punctuation== "capital12":
            r32 = codecs.open(r'punctuation/capital12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r32))

        if the_punctuation== "capital13":
            r33 = codecs.open(r'punctuation/capital13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r33))

        if the_punctuation== "capital14":
            r34 = codecs.open(r'punctuation/capital14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r34))

        if the_punctuation== "capital15":
            r35 = codecs.open(r'punctuation/capital15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r35))

        if the_punctuation== "capital16":
            r36 = codecs.open(r'punctuation/capital16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r36))

        if the_punctuation== "capital17":
            r37 = codecs.open(r'punctuation/capital17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r37))

        if the_punctuation== "capital18":
            r38 = codecs.open(r'punctuation/capital18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r38))

        if the_punctuation== "capital19":
            r39 = codecs.open(r'punctuation/capital19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r39))

        if the_punctuation== "capital20":
            r40 = codecs.open(r'punctuation/capital20.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r40))

        if the_punctuation== "capital21":
            r41 = codecs.open(r'punctuation/capital21.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r41))

        if the_punctuation== "capital22":
            r42 = codecs.open(r'punctuation/capital22.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r42))

        if the_punctuation== "apostrophe1":
            r43 = codecs.open(r'punctuation/apostrophe1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r43))

        if the_punctuation== "apostrophe2":
            r44 = codecs.open(r'punctuation/apostrophe2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r44))

        if the_punctuation== "apostrophe3":
            r45 = codecs.open(r'punctuation/apostrophe3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r45))

        if the_punctuation== "apostrophe4":
            r46 = codecs.open(r'punctuation/apostrophe4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r46))

        if the_punctuation== "apostrophe5":
            r47 = codecs.open(r'punctuation/apostrophe5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r47))

        if the_punctuation== "apostrophe6":
            r48 = codecs.open(r'punctuation/apostrophe6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r48))

        if the_punctuation== "apostrophe7":
            r49 = codecs.open(r'punctuation/apostrophe7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r49))

        if the_punctuation== "apostrophe8":
            r50 = codecs.open(r'punctuation/apostrophe8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r50))

        if the_punctuation== "apostrophe9":
            r51 = codecs.open(r'punctuation/apostrophe9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r51))

        if the_punctuation== "apostrophe10":
            r52 = codecs.open(r'punctuation/apostrophe10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r52))

        if the_punctuation== "apostrophe11":
            r53 = codecs.open(r'punctuation/apostrophe11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r53))

        if the_punctuation== "apostrophe12":
            r54 = codecs.open(r'punctuation/apostrophe12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r54))

        if the_punctuation== "apostrophe13":
            r55 = codecs.open(r'punctuation/apostrophe13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r55))

        if the_punctuation== "apostrophe14":
            r56 = codecs.open(r'punctuation/apostrophe14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r56))

        if the_punctuation== "apostrophe15":
            r57 = codecs.open(r'punctuation/apostrophe15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r57))

        if the_punctuation== "apostrophe16":
            r58 = codecs.open(r'punctuation/apostrophe16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r58))

        if the_punctuation== "apostrophe17":
            r59 = codecs.open(r'punctuation/apostrophe17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r59))

        if the_punctuation== "apostrophe18":
            r60 = codecs.open(r'punctuation/apostrophe18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r60))

        if the_punctuation== "apostrophe19":
            r61 = codecs.open(r'punctuation/apostrophe19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r61))

        if the_punctuation== "apostrophe20":
            r62 = codecs.open(r'punctuation/apostrophe20.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(r62))

        if the_punctuation== "semi-colon1":
            t1 = codecs.open(r'punctuation/semi-colon1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t1))

        if the_punctuation== "semi-colon2":
            t2 = codecs.open(r'punctuation/semi-colon2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t2))

        if the_punctuation== "semi-colon3":
            t3 = codecs.open(r'punctuation/semi-colon3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t3))

        if the_punctuation== "semi-colon4":
            t4 = codecs.open(r'punctuation/semi-colon4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t4))

        if the_punctuation== "semi-colon5":
            t5 = codecs.open(r'punctuation/semi-colon5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t5))

        if the_punctuation== "semi-colon6":
            t6 = codecs.open(r'punctuation/semi-colon6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t6))

        if the_punctuation== "semi-colon7":
            t7 = codecs.open(r'punctuation/semi-colon7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t7))

        if the_punctuation== "semi-colon8":
            t8 = codecs.open(r'punctuation/semi-colon8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t8))

        if the_punctuation== "semi-colon9":
            t9 = codecs.open(r'punctuation/semi-colon9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t9))

        if the_punctuation== "semi-colon10":
            t10 = codecs.open(r'punctuation/semi-colon10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t10))

        if the_punctuation== "semi-colon11":
            t11 = codecs.open(r'punctuation/semi-colon11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t11))

        if the_punctuation== "semi-colon12":
            t12 = codecs.open(r'punctuation/semi-colon12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t12))

        if the_punctuation== "semi-colon13":
            t13 = codecs.open(r'punctuation/semi-colon13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t13))

        if the_punctuation== "semi-colon14":
            t14 = codecs.open(r'punctuation/semi-colon14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t14))

        if the_punctuation== "semi-colon15":
            t15 = codecs.open(r'punctuation/semi-colon15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t15))

        if the_punctuation== "semi-colon16":
            t16 = codecs.open(r'punctuation/semi-colon16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t16))

        if the_punctuation== "semi-colon17":
            t17 = codecs.open(r'punctuation/semi-colon17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t17))

        if the_punctuation== "semi-colon18":
            t18 = codecs.open(r'punctuation/semi-colon18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t18))

        if the_punctuation== "semi-colon19":
            t19 = codecs.open(r'punctuation/semi-colon19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t19))

        if the_punctuation== "semi-colon20":
            t20 = codecs.open(r'punctuation/semi-colon20.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t20))

        if the_punctuation== "comma1":
            t21 = codecs.open(r'punctuation/comma1.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t21))

        if the_punctuation== "comma2":
            t22 = codecs.open(r'punctuation/comma2.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t22))

        if the_punctuation== "comma3":
            t23 = codecs.open(r'punctuation/comma3.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t23))

        if the_punctuation== "comma4":
            t24 = codecs.open(r'punctuation/comma4.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t24))

        if the_punctuation== "comma5":
            t25 = codecs.open(r'punctuation/comma5.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t25))

        if the_punctuation== "comma6":
            t26 = codecs.open(r'punctuation/comma6.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t26))

        if the_punctuation== "comma7":
            t27 = codecs.open(r'punctuation/comma7.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t27))

        if the_punctuation== "comma8":
            t28 = codecs.open(r'punctuation/comma8.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t28))

        if the_punctuation== "comma9":
            t29 = codecs.open(r'punctuation/comma9.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t29))

        if the_punctuation== "comma10":
            t30 = codecs.open(r'punctuation/comma10.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t30))

        if the_punctuation== "comma11":
            t31 = codecs.open(r'punctuation/comma11.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t31))

        if the_punctuation== "comma12":
            t32 = codecs.open(r'punctuation/comma12.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t32))

        if the_punctuation== "comma13":
            t33 = codecs.open(r'punctuation/comma13.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t33))

        if the_punctuation== "comma14":
            t34 = codecs.open(r'punctuation/comma14.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t34))

        if the_punctuation== "comma15":
            t35 = codecs.open(r'punctuation/comma15.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t35))

        if the_punctuation== "comma16":
            t36 = codecs.open(r'punctuation/comma16.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t36))

        if the_punctuation== "comma17":
            t37 = codecs.open(r'punctuation/comma17.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t37))

        if the_punctuation== "comma18":
            t38 = codecs.open(r'punctuation/comma18.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t38))

        if the_punctuation== "comma19":
            t39 = codecs.open(r'punctuation/comma19.txt',encoding='utf-8').read()
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t39))

        if the_punctuation== "comma20":
            t40 = codecs.open(r'punctuation/comma20.txt',encoding='utf-8').read()            
            self.ids.punc1.multiline = True
            self.ids.punc1.text = get_display(arabic_reshaper.reshape(t40))
        

class Translation(Screen):
    def on_pre_enter(self, *args):
        global myresult1
        self.ids.my.text= get_display(arabic_reshaper.reshape(myresult1))
    def checkwindow(self):
        if truth1:
            self.manager.current='ww'
        if truth2:
            self.manager.current="con_a"

        if truth3:
            self.manager.current= "con_b"



















































































































































            
            
            
            
class WindowManager(ScreenManager):
    global theoption
    def screen_manager_method(self):
        pass
    
        
class CrashCourse(App):
    def build(self):
        self.icon = 'crash.png'
        if(platform=='android' or platform == 'ios'):
            Window.maximize()
        
        global counter1,counter2,counter3,c1,vcounter,punc_counter
        Builder.load_file("crashcourse.kv")
        file1 = open('stophere.txt','r')
        counter1 = int(file1.read())
        counter1 = counter1 -2
        
        file3 = open("stop3.txt","r")
        counter3 = int(file3.read())
        counter3= counter3 -2
        file2= open("stop2.txt","r")
        counter2 = int(file2.read())
        counter2 = counter2-2
        
        phrasal1=open("phrasal1.txt","r")
        c1=int(phrasal1.read())
        c1= c1-2


        vocabulary=open("vocabulary.txt","r")
        vcounter=int(vocabulary.read())
        vcounter= vcounter-2

        punctuation=open("punctuation.txt","r")
        punc_counter=int(punctuation.read())
        punc_counter = punc_counter-2



        return WindowManager()
    
    
if __name__ == '__main__':
    CrashCourse().run()